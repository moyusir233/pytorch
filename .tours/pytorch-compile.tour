{
  "$schema": "https://aka.ms/codetour-schema",
  "title": "aot_autograd compile",
  "steps": [
    {
      "file": "torch/_functorch/aot_autograd.py",
      "description": "aot_autograd的文档",
      "line": 171,
      "title": "aot_autograd的文档"
    },
    {
      "file": "torch/_dynamo/backends/common.py",
      "description": "aot_autograd函数可以利用传入的前向传播的计算图来生成相应的反向传播计算图，进而可以用于处理反向传播计算图的编译，详见:\n- https://pytorch.org/docs/stable/dynamo/custom-backends.html#custom-backends-after-aotautograd\n- https://pytorch.org/docs/stable/dynamo/faq.html#frequently-asked-questions",
      "line": 14,
      "title": "aot_autograd函数入口"
    },
    {
      "file": "torch/_dynamo/backends/common.py",
      "description": "实际进行编译的位置",
      "line": 48
    },
    {
      "file": "torch/_functorch/aot_autograd.py",
      "description": "aot_autograd完成编译的主要函数",
      "line": 2733
    },
    {
      "file": "torch/_functorch/aot_autograd.py",
      "description": "大致来看，是将Module中的所有参数与buffer展平",
      "line": 2775
    },
    {
      "file": "torch/_functorch/aot_autograd.py",
      "description": "利用Interpreter来执行了torch.fx.GraphModule中的Node，并利用torch.autograd.detect_anomaly context manager来记录了反向传播的过程",
      "line": 2793
    },
    {
      "file": "torch/_functorch/aot_autograd.py",
      "description": "创建aot_autograd编译函数的入口",
      "line": 2822
    },
    {
      "file": "torch/_functorch/aot_autograd.py",
      "description": "产生aot_autograd编译函数的入口",
      "line": 2409,
      "title": "create_aot_dispatcher_function:trace前向传播与反向传播的计算图以生成联合计算图,并进行编译优化的函数"
    },
    {
      "file": "torch/_functorch/aot_autograd.py",
      "description": "编译计算图函数的入口",
      "line": 2508
    },
    {
      "file": "torch/_functorch/aot_autograd.py",
      "description": "进行前向传播计算图与反向传播计算图的联合编译",
      "line": 2050,
      "title": "aot_dispatch_autograd:进行前向传播计算图与反向传播计算图的联合编译"
    }
  ],
  "ref": "torchv2.0.1_dev"
}