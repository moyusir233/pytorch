total operators size:4040
static_runtime::create_owned_ref(...) -> ...
static_runtime::fused_equally_split(Tensor input, int num_split, int dim) -> ...
static_runtime::VarTupleUnpack(...) -> ...
static_runtime::dict_unpack(...) -> ...
profiler::_record_function_enter(str name, str? args=None) -> Tensor
aten::_flash_attention_backward(Tensor grad_out, Tensor query, Tensor key, Tensor value, Tensor out, Tensor logsumexp, Tensor cum_seq_q, Tensor cum_seq_k, int max_q, int max_k, float dropout_p, bool is_causal, int philox_seed, int philox_offset) -> (Tensor, Tensor, Tensor)
profiler::_record_function_enter_new(str name, str? args=None) -> __torch__.torch.classes.profiler._RecordFunction
aten::_flash_attention_forward(Tensor query, Tensor key, Tensor value, Tensor cum_seq_q, Tensor cum_seq_k, int max_q, int max_k, float dropout_p, bool is_causal, bool return_debug_mask) -> (Tensor output, Tensor softmax_logsumexp, int philox_seed, int philox_offset, Tensor debug_attn_mask)
aten::_scaled_dot_product_efficient_attention_backward(Tensor grad_out_, Tensor query, Tensor key, Tensor value, Tensor out, Tensor logsumexp, bool is_causal=False, bool chunk_grad_outputs=False) -> (Tensor, Tensor, Tensor)
aten::_scaled_dot_product_efficient_attention(Tensor query, Tensor key, Tensor value, bool compute_log_sumexp, bool is_causal=False) -> (Tensor, Tensor)
aten::_scaled_dot_product_flash_attention_backward(Tensor grad_out, Tensor query, Tensor key, Tensor value, Tensor out, Tensor logsumexp, Tensor cum_seq_q, Tensor cum_seq_k, int max_q, int max_k, float dropout_p, bool is_causal, int philox_seed, int philox_offset) -> (Tensor grad_query, Tensor grad_key, Tensor grad_value)
aten::record_stream(Tensor(a!) self, Stream s) -> ()
aten::_nnz(Tensor self) -> int
aten::_sparse_mm_reduce_impl_backward(Tensor self, Tensor grad_out, Tensor weight, str reduce, Tensor arg_out, bool[2] output_mask) -> (Tensor, Tensor)
aten::_sparse_mm_reduce_impl(Tensor self, Tensor other, str reduce) -> (Tensor, Tensor)
aten::miopen_convolution_add_relu(Tensor self, Tensor weight, Tensor z, Scalar? alpha, Tensor? bias, int[] stride, int[] padding, int[] dilation, int groups) -> Tensor
aten::miopen_convolution_relu(Tensor self, Tensor weight, Tensor? bias, int[] stride, int[] padding, int[] dilation, int groups) -> Tensor
aten::_use_cudnn_ctc_loss(Tensor log_probs, Tensor targets, int[] input_lengths, int[] target_lengths, int blank) -> bool
aten::_use_cudnn_ctc_loss.Tensor(Tensor log_probs, Tensor targets, Tensor input_lengths, Tensor target_lengths, int blank) -> bool
aten::qscheme(Tensor self) -> QScheme
aten::q_per_channel_axis(Tensor self) -> int
aten::q_zero_point(Tensor self) -> int
aten::q_scale(Tensor self) -> float
aten::_nested_tensor_softmax_with_shape(Tensor self, Tensor query) -> Tensor
aten::_nested_tensor_offsets(Tensor self) -> int[]
aten::_nested_sum_backward(Tensor grad, Tensor self, int[1]? dim, bool keepdim=False) -> Tensor
aten::_nested_select_backward(Tensor grad_output, Tensor self, int dim, SymInt index) -> Tensor
aten::_values(Tensor(a) self) -> Tensor(a)
aten::_fused_adamw_(Tensor(a!)[] self, Tensor(b!)[] grads, Tensor(c!)[] exp_avgs, Tensor(d!)[] exp_avg_sqs, Tensor(e!)[] max_exp_avg_sqs, Tensor[] state_steps, *, float lr, float beta1, float beta2, float weight_decay, float eps, bool amsgrad, bool maximize, Tensor? grad_scale=None, Tensor? found_inf=None) -> ()
aten::mkldnn_adaptive_avg_pool2d.out(Tensor self, int[2] output_size, *, Tensor(a!) out) -> Tensor(a!)
aten::mkldnn_adaptive_avg_pool2d(Tensor self, int[2] output_size) -> Tensor
aten::sparse_sampled_addmm.out(Tensor self, Tensor mat1, Tensor mat2, *, Scalar beta=1, Scalar alpha=1, Tensor(a!) out) -> Tensor(a!)
aten::sparse_sampled_addmm(Tensor self, Tensor mat1, Tensor mat2, *, Scalar beta=1, Scalar alpha=1) -> Tensor
_test::get_first(str[][] _0) -> str _0
aten::_indices(Tensor(a) self) -> Tensor(a)
aten::hspmm.out(Tensor mat1, Tensor mat2, *, Tensor(a!) out) -> Tensor(a!)
aten::hspmm(Tensor mat1, Tensor mat2) -> Tensor
aten::sparse_resize_and_clear_(Tensor(a!) self, int[] size, int sparse_dim, int dense_dim) -> Tensor(a!)
aten::copy_sparse_to_sparse_(Tensor(a!) self, Tensor src, bool non_blocking=False) -> Tensor(a!)
aten::resize_as_sparse_(Tensor(a!) self, Tensor the_template) -> Tensor(a!)
aten::batch_norm_elemt.out(Tensor input, Tensor? weight, Tensor? bias, Tensor mean, Tensor invstd, float eps, *, Tensor(a!) out) -> Tensor(a!)
aten::batch_norm_elemt(Tensor input, Tensor? weight, Tensor? bias, Tensor mean, Tensor invstd, float eps) -> Tensor
aten::_sparse_broadcast_to(Tensor(a) self, int[] size) -> Tensor(a)
aten::_fused_adam_(Tensor(a!)[] self, Tensor(b!)[] grads, Tensor(c!)[] exp_avgs, Tensor(d!)[] exp_avg_sqs, Tensor(e!)[] max_exp_avg_sqs, Tensor[] state_steps, *, float lr, float beta1, float beta2, float weight_decay, float eps, bool amsgrad, bool maximize, Tensor? grad_scale=None, Tensor? found_inf=None) -> ()
aten::sparse_resize_(Tensor(a!) self, int[] size, int sparse_dim, int dense_dim) -> Tensor(a!)
c10d::monitored_barrier_(Tensor tensor, __torch__.torch.classes.c10d.ProcessGroup process_group, int[] device_ids, int timeout, bool wait_all_ranks) -> ()
aten::_mkldnn_transpose_(Tensor(a!) self, int dim0, int dim1) -> Tensor(a!)
aten::_resize_output_(Tensor(a!) self, int[] size, Device device) -> Tensor(a!)
aten::_scaled_dot_product_attention_math(Tensor query, Tensor key, Tensor value, Tensor? attn_mask=None, float dropout_p=0., bool is_causal=False, Tensor? dropout_mask=None) -> (Tensor, Tensor)
aten::_scaled_dot_product_attention(Tensor query, Tensor key, Tensor value, Tensor? attn_mask=None, float dropout_p=0., bool need_attn_weights=False, bool is_causal=False) -> (Tensor, Tensor)
aten::unflatten_dense_tensors(Tensor flat, Tensor[] tensors) -> Tensor[]
aten::flatten_dense_tensors(Tensor[] tensors) -> Tensor
aten::pad_sequence(Tensor[] sequences, bool batch_first=False, float padding_value=0.) -> Tensor
aten::_test_ambiguous_defaults.a(Tensor dummy, int a=1, int b=1) -> Tensor
aten::_test_ambiguous_defaults.b(Tensor dummy, int a=2, str b="2") -> Tensor
aten::_test_string_default(Tensor dummy, str a="\"\'\\", str b="\"\'\\") -> Tensor
aten::_test_serialization_subcmul(Tensor self, Tensor other, Scalar alpha=1) -> Tensor
aten::nested_to_padded_tensor(Tensor self, float padding, int[]? output_size=None) -> Tensor
aten::linalg_ldl_factor(Tensor self, *, bool hermitian=False) -> (Tensor LD, Tensor pivots)
aten::linalg_ldl_factor.out(Tensor self, *, bool hermitian=False, Tensor(a!) LD, Tensor(b!) pivots) -> (Tensor(a!) LD, Tensor(b!) pivots)
aten::linalg_lu_factor(Tensor A, *, bool pivot=True) -> (Tensor LU, Tensor pivots)
aten::linalg_lu_factor.out(Tensor A, *, bool pivot=True, Tensor(a!) LU, Tensor(b!) pivots) -> (Tensor(a!) LU, Tensor(b!) pivots)
aten::fft_ihfftn(Tensor self, int[1]? s=None, int[1]? dim=None, str? norm=None) -> Tensor
aten::fft_ihfftn.out(Tensor self, int[1]? s=None, int[1]? dim=None, str? norm=None, *, Tensor(a!) out) -> Tensor(a!)
aten::fft_ihfft2(Tensor self, int[1]? s=None, int[1] dim=[-2, -1], str? norm=None) -> Tensor
aten::fft_ihfft2.out(Tensor self, int[1]? s=None, int[1] dim=[-2, -1], str? norm=None, *, Tensor(a!) out) -> Tensor(a!)
aten::column_stack(Tensor[] tensors) -> Tensor
aten::column_stack.out(Tensor[] tensors, *, Tensor(a!) out) -> Tensor(a!)
aten::slow_conv3d(Tensor self, Tensor weight, int[3] kernel_size, Tensor? bias=None, int[3] stride=1, SymInt[3] padding=[0, 0, 0]) -> Tensor
aten::slow_conv3d.out(Tensor self, Tensor weight, int[3] kernel_size, Tensor? bias=None, int[3] stride=1, SymInt[3] padding=[0, 0, 0], *, Tensor(a!) out) -> Tensor(a!)
aten::thnn_conv2d(Tensor self, Tensor weight, int[2] kernel_size, Tensor? bias=None, int[2] stride=1, int[2] padding=0) -> Tensor
aten::thnn_conv2d.out(Tensor self, Tensor weight, int[2] kernel_size, Tensor? bias=None, int[2] stride=1, int[2] padding=0, *, Tensor(a!) out) -> Tensor(a!)
aten::_pad_enum(Tensor self, SymInt[] pad, int mode, float? value=None) -> Tensor
aten::float_power_.Tensor(Tensor(a!) self, Tensor exponent) -> Tensor(a!)
aten::float_power_.Scalar(Tensor(a!) self, Scalar exponent) -> Tensor(a!)
aten::histogramdd(Tensor self, int[] bins, float[]? range=None, Tensor? weight=None, bool density=False) -> (Tensor hist, Tensor[] bin_edges)
aten::histogramdd.int_bins(Tensor self, int bins, float[]? range=None, Tensor? weight=None, bool density=False) -> (Tensor hist, Tensor[] bin_edges)
aten::histogramdd.TensorList_bins(Tensor self, Tensor[] bins, float[]? range=None, Tensor? weight=None, bool density=False) -> (Tensor hist, Tensor[] bin_edges)
aten::arctan2_(Tensor(a!) self, Tensor other) -> Tensor(a!)
aten::_gather_sparse_backward(Tensor self, int dim, Tensor index, Tensor grad) -> Tensor
aten::argwhere(Tensor self) -> Tensor
aten::nonzero_numpy(Tensor self) -> Tensor[]
aten::less_.Scalar(Tensor(a!) self, Scalar other) -> Tensor(a!)
aten::less_.Tensor(Tensor(a!) self, Tensor other) -> Tensor(a!)
aten::greater_.Scalar(Tensor(a!) self, Scalar other) -> Tensor(a!)
aten::greater_.Tensor(Tensor(a!) self, Tensor other) -> Tensor(a!)
aten::less_equal_.Scalar(Tensor(a!) self, Scalar other) -> Tensor(a!)
aten::less_equal_.Tensor(Tensor(a!) self, Tensor other) -> Tensor(a!)
aten::greater_equal_.Scalar(Tensor(a!) self, Scalar other) -> Tensor(a!)
aten::greater_equal_.Tensor(Tensor(a!) self, Tensor other) -> Tensor(a!)
aten::not_equal_.Scalar(Tensor(a!) self, Scalar other) -> Tensor(a!)
aten::not_equal_.Tensor(Tensor(a!) self, Tensor other) -> Tensor(a!)
aten::_pad_packed_sequence(Tensor data, Tensor batch_sizes, bool batch_first, Scalar padding_value, int total_length) -> (Tensor, Tensor)
aten::_pack_padded_sequence_backward(Tensor grad, SymInt[] input_size, Tensor batch_sizes, bool batch_first) -> Tensor
aten::quantized_rnn_tanh_cell(Tensor input, Tensor hx, Tensor w_ih, Tensor w_hh, Tensor b_ih, Tensor b_hh, Tensor packed_ih, Tensor packed_hh, Tensor col_offsets_ih, Tensor col_offsets_hh, Scalar scale_ih, Scalar scale_hh, Scalar zero_point_ih, Scalar zero_point_hh) -> Tensor
aten::quantized_rnn_relu_cell(Tensor input, Tensor hx, Tensor w_ih, Tensor w_hh, Tensor b_ih, Tensor b_hh, Tensor packed_ih, Tensor packed_hh, Tensor col_offsets_ih, Tensor col_offsets_hh, Scalar scale_ih, Scalar scale_hh, Scalar zero_point_ih, Scalar zero_point_hh) -> Tensor
aten::quantized_gru_cell(Tensor input, Tensor hx, Tensor w_ih, Tensor w_hh, Tensor b_ih, Tensor b_hh, Tensor packed_ih, Tensor packed_hh, Tensor col_offsets_ih, Tensor col_offsets_hh, Scalar scale_ih, Scalar scale_hh, Scalar zero_point_ih, Scalar zero_point_hh) -> Tensor
aten::quantized_lstm_cell(Tensor input, Tensor[] hx, Tensor w_ih, Tensor w_hh, Tensor b_ih, Tensor b_hh, Tensor packed_ih, Tensor packed_hh, Tensor col_offsets_ih, Tensor col_offsets_hh, Scalar scale_ih, Scalar scale_hh, Scalar zero_point_ih, Scalar zero_point_hh) -> (Tensor, Tensor)
aten::rnn_relu.input(Tensor input, Tensor hx, Tensor[] params, bool has_biases, int num_layers, float dropout, bool train, bool bidirectional, bool batch_first) -> (Tensor, Tensor)
aten::rnn_relu.data(Tensor data, Tensor batch_sizes, Tensor hx, Tensor[] params, bool has_biases, int num_layers, float dropout, bool train, bool bidirectional) -> (Tensor, Tensor)
aten::rnn_tanh.input(Tensor input, Tensor hx, Tensor[] params, bool has_biases, int num_layers, float dropout, bool train, bool bidirectional, bool batch_first) -> (Tensor, Tensor)
aten::rnn_tanh.data(Tensor data, Tensor batch_sizes, Tensor hx, Tensor[] params, bool has_biases, int num_layers, float dropout, bool train, bool bidirectional) -> (Tensor, Tensor)
aten::gru.input(Tensor input, Tensor hx, Tensor[] params, bool has_biases, int num_layers, float dropout, bool train, bool bidirectional, bool batch_first) -> (Tensor, Tensor)
aten::gru.data(Tensor data, Tensor batch_sizes, Tensor hx, Tensor[] params, bool has_biases, int num_layers, float dropout, bool train, bool bidirectional) -> (Tensor, Tensor)
aten::lstm.input(Tensor input, Tensor[] hx, Tensor[] params, bool has_biases, int num_layers, float dropout, bool train, bool bidirectional, bool batch_first) -> (Tensor, Tensor, Tensor)
aten::lstm.data(Tensor data, Tensor batch_sizes, Tensor[] hx, Tensor[] params, bool has_biases, int num_layers, float dropout, bool train, bool bidirectional) -> (Tensor, Tensor, Tensor)
aten::_thnn_differentiable_gru_cell_backward(Tensor grad_hy, Tensor input_gates, Tensor hidden_gates, Tensor hx, Tensor? input_bias, Tensor? hidden_bias) -> (Tensor, Tensor, Tensor, Tensor, Tensor)
aten::_thnn_differentiable_lstm_cell_backward(Tensor? grad_hy, Tensor? grad_cy, Tensor input_gates, Tensor hidden_gates, Tensor? input_bias, Tensor? hidden_bias, Tensor cx, Tensor cy) -> (Tensor, Tensor, Tensor, Tensor, Tensor)
aten::_thnn_fused_lstm_cell_backward(Tensor? grad_hy, Tensor? grad_cy, Tensor cx, Tensor cy, Tensor workspace, bool has_bias) -> (Tensor, Tensor, Tensor, Tensor, Tensor)
aten::promote_types(ScalarType type1, ScalarType type2) -> ScalarType
aten::can_cast(ScalarType from, ScalarType to) -> bool
aten::choose_qparams_optimized(Tensor input, int numel, int n_bins, float ratio, int bit_width) -> (Tensor, Tensor)
aten::_saturate_weight_to_fp16(Tensor weight) -> Tensor
aten::fused_moving_avg_obs_fake_quant(Tensor self, Tensor observer_on, Tensor fake_quant_on, Tensor(a!) running_min, Tensor(b!) running_max, Tensor(c!) scale, Tensor(d!) zero_point, float averaging_const, int quant_min, int quant_max, int ch_axis, bool per_row_fake_quant=False, bool symmetric_quant=False) -> Tensor
aten::fake_quantize_per_channel_affine_cachemask_backward(Tensor grad, Tensor mask) -> Tensor
aten::fake_quantize_per_channel_affine(Tensor self, Tensor scale, Tensor zero_point, int axis, int quant_min, int quant_max) -> Tensor
aten::fake_quantize_per_tensor_affine_cachemask_backward(Tensor grad, Tensor mask) -> Tensor
aten::to_mkldnn_backward(Tensor grad, Tensor input) -> Tensor
aten::coalesce(Tensor(a) self) -> Tensor(a)
aten::to_dense_backward(Tensor grad, Tensor input) -> Tensor
aten::to_dense(Tensor self, ScalarType? dtype=None) -> Tensor
aten::_to_cpu(Tensor[] tensors) -> Tensor[]
aten::_validate_sparse_bsc_tensor_args(Tensor ccol_indices, Tensor row_indices, Tensor values, int[] size) -> ()
aten::_validate_sparse_bsr_tensor_args(Tensor crow_indices, Tensor col_indices, Tensor values, int[] size) -> ()
aten::_validate_sparse_csc_tensor_args(Tensor ccol_indices, Tensor row_indices, Tensor values, int[] size) -> ()
aten::_validate_sparse_csr_tensor_args(Tensor crow_indices, Tensor col_indices, Tensor values, int[] size) -> ()
aten::_validate_sparse_compressed_tensor_args(Tensor compressed_indices, Tensor plain_indices, Tensor values, int[] size, Layout layout) -> ()
aten::_validate_sparse_coo_tensor_args(Tensor indices, Tensor values, int[] size) -> ()
aten::subtract_.Tensor(Tensor(a!) self, Tensor other, *, Scalar alpha=1) -> Tensor(a!)
aten::subtract_.Scalar(Tensor(a!) self, Scalar other, Scalar alpha=1) -> Tensor(a!)
aten::_weight_norm_differentiable_backward(Tensor grad_w, Tensor saved_v, Tensor saved_g, Tensor saved_norms, int dim) -> (Tensor, Tensor)
aten::_weight_norm(Tensor v, Tensor g, int dim=0) -> Tensor
aten::norm_except_dim(Tensor v, int pow=2, int dim=0) -> Tensor
aten::fix_(Tensor(a!) self) -> Tensor(a!)
aten::istft(Tensor self, int n_fft, int? hop_length=None, int? win_length=None, Tensor? window=None, bool center=True, bool normalized=False, bool? onesided=None, int? length=None, bool return_complex=False) -> Tensor
aten::smm(Tensor self, Tensor mat2) -> Tensor
aten::infinitely_differentiable_gelu_backward(Tensor grad, Tensor self) -> Tensor
aten::negative_(Tensor(a!) self) -> Tensor(a!)
aten::pin_memory(Tensor(a) self, Device? device=None) -> Tensor(a)
aten::_nnpack_available() -> bool
aten::is_vulkan_available() -> bool
aten::_sparse_mm(Tensor sparse, Tensor dense) -> Tensor
aten::_sparse_mm.reduce(Tensor sparse, Tensor dense, str reduce) -> Tensor
aten::matrix_exp_backward(Tensor self, Tensor grad) -> Tensor
aten::matrix_exp(Tensor self) -> Tensor
aten::ldexp_(Tensor(a!) self, Tensor other) -> Tensor(a!)
aten::fbgemm_pack_quantized_matrix(Tensor input) -> Tensor
aten::fbgemm_pack_quantized_matrix.KN(Tensor input, int K, int N) -> Tensor
aten::fbgemm_linear_fp16_weight(Tensor input, Tensor packed_weight, Tensor bias) -> Tensor
aten::fbgemm_linear_fp16_weight_fp32_activation(Tensor input, Tensor packed_weight, Tensor bias) -> Tensor
aten::fbgemm_pack_gemm_matrix_fp16(Tensor input) -> Tensor
aten::fbgemm_linear_quantize_weight(Tensor input) -> (Tensor, Tensor, float, int)
aten::fbgemm_linear_int8_weight(Tensor input, Tensor weight, Tensor packed, Tensor col_offsets, Scalar weight_scale, Scalar weight_zero_point, Tensor bias) -> Tensor
aten::fbgemm_linear_int8_weight_fp32_activation(Tensor input, Tensor weight, Tensor packed, Tensor col_offsets, Scalar weight_scale, Scalar weight_zero_point, Tensor bias) -> Tensor
aten::is_neg(Tensor self) -> bool
aten::_is_zerotensor(Tensor self) -> bool
aten::is_conj(Tensor self) -> bool
aten::is_distributed(Tensor self) -> bool
aten::isclose(Tensor self, Tensor other, float rtol=1.0000000000000001e-05, float atol=1e-08, bool equal_nan=False) -> Tensor
aten::_grid_sampler_2d_cpu_fallback_backward(Tensor grad_output, Tensor input, Tensor grid, int interpolation_mode, int padding_mode, bool align_corners) -> (Tensor, Tensor)
aten::embedding_bag(Tensor weight, Tensor indices, Tensor offsets, bool scale_grad_by_freq=False, int mode=0, bool sparse=False, Tensor? per_sample_weights=None, bool include_last_offset=False) -> (Tensor, Tensor, Tensor, Tensor)
aten::embedding_bag.padding_idx(Tensor weight, Tensor indices, Tensor offsets, bool scale_grad_by_freq, int mode, bool sparse, Tensor? per_sample_weights, bool include_last_offset, int? padding_idx) -> (Tensor, Tensor, Tensor, Tensor)
aten::_rowwise_prune(Tensor weight, Tensor mask, ScalarType compressed_indices_dtype) -> (Tensor, Tensor)
aten::embedding_sparse_backward(Tensor grad, Tensor indices, int num_weights, int padding_idx, bool scale_grad_by_freq) -> Tensor
aten::fill_diagonal_(Tensor(a!) self, Scalar fill_value, bool wrap=False) -> Tensor(a!)
aten::diagflat(Tensor self, int offset=0) -> Tensor
aten::cummaxmin_backward(Tensor grad, Tensor input, Tensor indices, int dim) -> Tensor
aten::conv_tbc_backward(Tensor self, Tensor input, Tensor weight, Tensor bias, int pad) -> (Tensor, Tensor, Tensor)
aten::cudnn_is_acceptable(Tensor self) -> bool
aten::clip_(Tensor(a!) self, Scalar? min=None, Scalar? max=None) -> Tensor(a!)
aten::clip_.Tensor(Tensor(a!) self, Tensor? min=None, Tensor? max=None) -> Tensor(a!)
aten::arctan_(Tensor(a!) self) -> Tensor(a!)
aten::arcsin_(Tensor(a!) self) -> Tensor(a!)
aten::arctanh_(Tensor(a!) self) -> Tensor(a!)
aten::arcsinh_(Tensor(a!) self) -> Tensor(a!)
aten::_dim_arange(Tensor like, int dim) -> Tensor
aten::affine_grid_generator_backward(Tensor grad, int[] size, bool align_corners) -> Tensor
aten::arccos_(Tensor(a!) self) -> Tensor(a!)
aten::chalf(Tensor self, *, MemoryFormat? memory_format=None) -> Tensor
aten::_shape_as_tensor(Tensor self) -> Tensor
aten::_reshape_from_tensor(Tensor self, Tensor shape) -> Tensor
aten::_sobol_engine_initialize_state_(Tensor(a!) self, int dimension) -> Tensor(a!)
aten::_sobol_engine_scramble_(Tensor(a!) self, Tensor ltm, int dimension) -> Tensor(a!)
aten::_sobol_engine_ff_(Tensor(a!) self, int n, Tensor sobolstate, int dimension, int num_generated) -> Tensor(a!)
aten::_sobol_engine_draw(Tensor quasi, int n, Tensor sobolstate, int dimension, int num_generated, ScalarType? dtype) -> (Tensor, Tensor)
aten::_use_cudnn_rnn_flatten_weight() -> bool
aten::_unpack_dual(Tensor(a) dual, int level) -> (Tensor(a) primal, Tensor tangent)
aten::retains_grad(Tensor self) -> bool
aten::_fused_adamw(Tensor[] self, Tensor[] grads, Tensor[] exp_avgs, Tensor[] exp_avg_sqs, Tensor[] max_exp_avg_sqs, Tensor[] state_steps, *, float lr, float beta1, float beta2, float weight_decay, float eps, bool amsgrad, bool maximize, Tensor? grad_scale=None, Tensor? found_inf=None) -> (Tensor[] self_out, Tensor[] grads_out, Tensor[] exp_avgs_out, Tensor[] exp_avg_sqs_out, Tensor[] max_exp_avg_sqs_out)
aten::_fused_adamw.out(Tensor[] self, Tensor(b!)[] grads, Tensor(c!)[] exp_avgs, Tensor(d!)[] exp_avg_sqs, Tensor(e!)[] max_exp_avg_sqs, Tensor[] state_steps, *, float lr, float beta1, float beta2, float weight_decay, float eps, bool amsgrad, bool maximize, Tensor? grad_scale=None, Tensor? found_inf=None, Tensor(a!)[] out) -> ()
aten::_fused_adam(Tensor[] self, Tensor[] grads, Tensor[] exp_avgs, Tensor[] exp_avg_sqs, Tensor[] max_exp_avg_sqs, Tensor[] state_steps, *, float lr, float beta1, float beta2, float weight_decay, float eps, bool amsgrad, bool maximize, Tensor? grad_scale=None, Tensor? found_inf=None) -> (Tensor[] self_out, Tensor[] grads_out, Tensor[] exp_avgs_out, Tensor[] exp_avg_sqs_out, Tensor[] max_exp_avg_sqs_out)
aten::_fused_adam.out(Tensor[] self, Tensor(b!)[] grads, Tensor(c!)[] exp_avgs, Tensor(d!)[] exp_avg_sqs, Tensor(e!)[] max_exp_avg_sqs, Tensor[] state_steps, *, float lr, float beta1, float beta2, float weight_decay, float eps, bool amsgrad, bool maximize, Tensor? grad_scale=None, Tensor? found_inf=None, Tensor(a!)[] out) -> ()
aten::_triton_multi_head_attention.out(Tensor query, Tensor key, Tensor value, int embed_dim, int num_head, Tensor qkv_weight, Tensor qkv_bias, Tensor proj_weight, Tensor proj_bias, Tensor? mask=None, *, Tensor(a!) out) -> Tensor(a!)
aten::_triton_multi_head_attention(Tensor query, Tensor key, Tensor value, int embed_dim, int num_head, Tensor qkv_weight, Tensor qkv_bias, Tensor proj_weight, Tensor proj_bias, Tensor? mask=None) -> Tensor
aten::_triton_scaled_dot_attention.out(Tensor q, Tensor k, Tensor v, float dropout_p=0., *, Tensor(a!) out) -> Tensor(a!)
aten::_triton_scaled_dot_attention(Tensor q, Tensor k, Tensor v, float dropout_p=0.) -> Tensor
aten::to_padded_tensor.out(Tensor self, float padding, SymInt[]? output_size=None, *, Tensor(a!) out) -> Tensor(a!)
aten::to_padded_tensor(Tensor self, float padding, SymInt[]? output_size=None) -> Tensor
aten::alias_copy.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::alias_copy(Tensor self) -> Tensor
aten::unbind_copy.int_out(Tensor self, int dim=0, *, Tensor(a!)[] out) -> ()
aten::unbind_copy.int(Tensor self, int dim=0) -> Tensor[]
aten::row_indices_copy.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::row_indices_copy(Tensor self) -> Tensor
aten::ccol_indices_copy.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::ccol_indices_copy(Tensor self) -> Tensor
aten::col_indices_copy.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::col_indices_copy(Tensor self) -> Tensor
aten::crow_indices_copy.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::crow_indices_copy(Tensor self) -> Tensor
aten::values_copy.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::values_copy(Tensor self) -> Tensor
aten::indices_copy.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::indices_copy(Tensor self) -> Tensor
aten::_values_copy.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::_values_copy(Tensor self) -> Tensor
aten::_indices_copy.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::_indices_copy(Tensor self) -> Tensor
aten::unsqueeze_copy.out(Tensor self, int dim, *, Tensor(a!) out) -> Tensor(a!)
aten::unsqueeze_copy(Tensor self, int dim) -> Tensor
aten::transpose_copy.int_out(Tensor self, int dim0, int dim1, *, Tensor(a!) out) -> Tensor(a!)
aten::transpose_copy.int(Tensor self, int dim0, int dim1) -> Tensor
aten::t_copy.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::t_copy(Tensor self) -> Tensor
aten::squeeze_copy.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::squeeze_copy.dim_out(Tensor self, int dim, *, Tensor(a!) out) -> Tensor(a!)
aten::squeeze_copy.dims_out(Tensor self, int[] dim, *, Tensor(a!) out) -> Tensor(a!)
aten::squeeze_copy(Tensor self) -> Tensor
aten::squeeze_copy.dim(Tensor self, int dim) -> Tensor
aten::squeeze_copy.dims(Tensor self, int[] dim) -> Tensor
aten::split_with_sizes_copy.out(Tensor self, SymInt[] split_sizes, int dim=0, *, Tensor(a!)[] out) -> ()
aten::split_with_sizes_copy(Tensor self, SymInt[] split_sizes, int dim=0) -> Tensor[]
aten::split_copy.Tensor_out(Tensor self, SymInt split_size, int dim=0, *, Tensor(a!)[] out) -> ()
aten::split_copy.Tensor(Tensor self, SymInt split_size, int dim=0) -> Tensor[]
aten::slice_copy.Tensor_out(Tensor self, int dim=0, SymInt? start=None, SymInt? end=None, SymInt step=1, *, Tensor(a!) out) -> Tensor(a!)
aten::slice_copy.Tensor(Tensor self, int dim=0, SymInt? start=None, SymInt? end=None, SymInt step=1) -> Tensor
aten::detach_copy.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::detach_copy(Tensor self) -> Tensor
aten::select_copy.int_out(Tensor self, int dim, SymInt index, *, Tensor(a!) out) -> Tensor(a!)
aten::select_copy.int(Tensor self, int dim, SymInt index) -> Tensor
aten::_reshape_alias_copy.out(Tensor self, SymInt[] size, SymInt[] stride, *, Tensor(a!) out) -> Tensor(a!)
aten::_reshape_alias_copy(Tensor self, SymInt[] size, SymInt[] stride) -> Tensor
aten::permute_copy.out(Tensor self, int[] dims, *, Tensor(a!) out) -> Tensor(a!)
aten::permute_copy(Tensor self, int[] dims) -> Tensor
aten::_sparse_broadcast_to_copy.out(Tensor self, int[] size, *, Tensor(a!) out) -> Tensor(a!)
aten::_sparse_broadcast_to_copy(Tensor self, int[] size) -> Tensor
aten::as_strided_copy.out(Tensor self, SymInt[] size, SymInt[] stride, SymInt? storage_offset=None, *, Tensor(a!) out) -> Tensor(a!)
aten::as_strided_copy(Tensor self, SymInt[] size, SymInt[] stride, SymInt? storage_offset=None) -> Tensor
aten::_neg_view_copy.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::_neg_view_copy(Tensor self) -> Tensor
aten::view_as_complex_copy.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::view_as_complex_copy(Tensor self) -> Tensor
aten::view_as_real_copy.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::view_as_real_copy(Tensor self) -> Tensor
c10d::reduce_scatter_(Tensor[] output_tensors, Tensor[][] input_tensors, __torch__.torch.classes.c10d.ProcessGroup process_group, __torch__.torch.classes.c10d.ReduceOp reduce_op, int timeout) -> (Tensor[], __torch__.torch.classes.c10d.Work)
aten::_make_dual_copy.out(Tensor primal, Tensor tangent, int level, *, Tensor(a!) out) -> Tensor(a!)
aten::_make_dual_copy(Tensor primal, Tensor tangent, int level) -> Tensor
aten::_fw_primal_copy.out(Tensor self, int level, *, Tensor(a!) out) -> Tensor(a!)
aten::_fw_primal_copy(Tensor self, int level) -> Tensor
aten::_nested_tensor_from_tensor_list(Tensor[] list, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
aten::_nested_tensor_from_tensor_list.out(Tensor[] list, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None, *, Tensor(a!) out) -> Tensor(a!)
aten::_test_autograd_multiple_dispatch_view_copy.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::_test_autograd_multiple_dispatch_view_copy(Tensor self) -> Tensor
aten::_test_autograd_multiple_dispatch_view(Tensor(a) self) -> Tensor(a)
aten::_test_autograd_multiple_dispatch.fullcoverage(Tensor self) -> Tensor
aten::_test_autograd_multiple_dispatch.fullcoverage_out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::_test_autograd_multiple_dispatch.ntonly(Tensor self, bool b) -> Tensor
aten::_test_warn_in_autograd(Tensor self) -> Tensor
aten::_test_warn_in_autograd.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::conv_depthwise3d.out(Tensor self, Tensor weight, int[3] kernel_size, Tensor? bias, int[3] stride, SymInt[3] padding, int[3] dilation, *, Tensor(a!) out) -> Tensor(a!)
aten::conv_depthwise3d(Tensor self, Tensor weight, int[3] kernel_size, Tensor? bias, int[3] stride, SymInt[3] padding, int[3] dilation) -> Tensor
aten::mkldnn_adaptive_avg_pool2d_backward.out(Tensor grad_output, Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::mkldnn_adaptive_avg_pool2d_backward(Tensor grad_output, Tensor self) -> Tensor
aten::rrelu_with_noise_backward(Tensor grad_output, Tensor self, Tensor noise, Scalar lower, Scalar upper, bool training, bool self_is_result) -> Tensor
aten::rrelu_with_noise_backward.out(Tensor grad_output, Tensor self, Tensor noise, Scalar lower, Scalar upper, bool training, bool self_is_result, *, Tensor(a!) out) -> Tensor(a!)
aten::soft_margin_loss_backward(Tensor grad_output, Tensor self, Tensor target, int reduction) -> Tensor
aten::soft_margin_loss_backward.grad_input(Tensor grad_output, Tensor self, Tensor target, int reduction, *, Tensor(a!) grad_input) -> Tensor(a!)
aten::_foreach_zero(Tensor[] self) -> Tensor[] self_out
aten::_foreach_zero.out(Tensor[] self, *, Tensor(a!)[] out) -> ()
aten::normal_functional(Tensor self, float mean=0., float std=1., *, Generator? generator=None) -> Tensor
aten::geometric(Tensor self, float p, *, Generator? generator=None) -> Tensor
aten::geometric.out(Tensor self, float p, *, Generator? generator=None, Tensor(a!) out) -> Tensor(a!)
aten::exponential(Tensor self, float lambd=1., *, Generator? generator=None) -> Tensor
aten::exponential.out(Tensor self, float lambd=1., *, Generator? generator=None, Tensor(a!) out) -> Tensor(a!)
aten::log_normal(Tensor self, float mean=1., float std=2., *, Generator? generator=None) -> Tensor
aten::log_normal.out(Tensor self, float mean=1., float std=2., *, Generator? generator=None, Tensor(a!) out) -> Tensor(a!)
aten::cauchy(Tensor self, float median=0., float sigma=1., *, Generator? generator=None) -> Tensor
aten::cauchy.out(Tensor self, float median=0., float sigma=1., *, Generator? generator=None, Tensor(a!) out) -> Tensor(a!)
aten::uniform(Tensor self, float from=0., float to=1., *, Generator? generator=None) -> Tensor
aten::uniform.out(Tensor self, float from=0., float to=1., *, Generator? generator=None, Tensor(a!) out) -> Tensor(a!)
aten::random.from(Tensor self, int from, int? to, *, Generator? generator=None) -> Tensor
aten::random.from_out(Tensor self, int from, int? to, *, Generator? generator=None, Tensor(a!) out) -> Tensor(a!)
aten::random.to(Tensor self, int to, *, Generator? generator=None) -> Tensor
aten::random.to_out(Tensor self, int to, *, Generator? generator=None, Tensor(a!) out) -> Tensor(a!)
aten::random(Tensor self, *, Generator? generator=None) -> Tensor
aten::random.out(Tensor self, *, Generator? generator=None, Tensor(a!) out) -> Tensor(a!)
aten::put(Tensor self, Tensor index, Tensor source, bool accumulate=False) -> Tensor
aten::put.out(Tensor self, Tensor index, Tensor source, bool accumulate=False, *, Tensor(a!) out) -> Tensor(a!)
aten::masked_scatter(Tensor self, Tensor mask, Tensor source) -> Tensor
aten::masked_scatter.out(Tensor self, Tensor mask, Tensor source, *, Tensor(a!) out) -> Tensor(a!)
aten::set.source_Storage(Tensor self, Storage source) -> Tensor
aten::set.source_Storage_out(Tensor self, Storage source, *, Tensor(a!) out) -> Tensor(a!)
aten::set.source_Storage_storage_offset(Tensor self, Storage source, SymInt storage_offset, SymInt[] size, SymInt[] stride=[]) -> Tensor
aten::set.source_Storage_storage_offset_out(Tensor self, Storage source, SymInt storage_offset, SymInt[] size, SymInt[] stride=[], *, Tensor(a!) out) -> Tensor(a!)
aten::set.source_Tensor(Tensor self, Tensor source) -> Tensor
aten::set.source_Tensor_out(Tensor self, Tensor source, *, Tensor(a!) out) -> Tensor(a!)
aten::set(Tensor self) -> Tensor
aten::set.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::_pack_padded_sequence(Tensor input, Tensor lengths, bool batch_first) -> (Tensor, Tensor)
aten::_pack_padded_sequence.out(Tensor input, Tensor lengths, bool batch_first, *, Tensor(a!) out0, Tensor(b!) out1) -> (Tensor(a!), Tensor(b!))
aten::_thnn_fused_gru_cell_backward.out(Tensor grad_hy, Tensor workspace, bool has_bias, *, Tensor(a!) out0, Tensor(b!) out1, Tensor(c!) out2, Tensor(d!) out3, Tensor(e!) out4) -> (Tensor(a!), Tensor(b!), Tensor(c!), Tensor(d!), Tensor(e!))
aten::_thnn_fused_gru_cell_backward(Tensor grad_hy, Tensor workspace, bool has_bias) -> (Tensor, Tensor, Tensor, Tensor, Tensor)
aten::_thnn_fused_lstm_cell_backward_impl.out(Tensor? grad_hy, Tensor? grad_cy, Tensor cx, Tensor cy, Tensor workspace, bool has_bias, *, Tensor(a!) out0, Tensor(b!) out1, Tensor(c!) out2) -> (Tensor(a!), Tensor(b!), Tensor(c!))
aten::_thnn_fused_lstm_cell_backward_impl(Tensor? grad_hy, Tensor? grad_cy, Tensor cx, Tensor cy, Tensor workspace, bool has_bias) -> (Tensor, Tensor, Tensor)
aten::lstm_mps_backward.out(Tensor grad_y, Tensor? grad_hy, Tensor? grad_cy, Tensor z_state, Tensor cell_state_fwd, Tensor input, Tensor layersOutputs, Tensor[] hx, Tensor[] params, bool has_biases, int num_layers, float dropout, bool train, bool bidirectional, bool batch_first, *, Tensor(a!) out0, Tensor(b!)[] out1, Tensor(c!)[] out2) -> ()
aten::lstm_mps_backward(Tensor grad_y, Tensor? grad_hy, Tensor? grad_cy, Tensor z_state, Tensor cell_state_fwd, Tensor input, Tensor layersOutputs, Tensor[] hx, Tensor[] params, bool has_biases, int num_layers, float dropout, bool train, bool bidirectional, bool batch_first) -> (Tensor, Tensor[], Tensor[])
c10d::allgather_(Tensor[][] output_tensors, Tensor[] input_tensors, __torch__.torch.classes.c10d.ProcessGroup process_group, int timeout) -> (Tensor[][], __torch__.torch.classes.c10d.Work)
aten::_lstm_mps.out(Tensor input, Tensor[] hx, Tensor[] params, bool has_biases, int num_layers, float dropout, bool train, bool bidirectional, bool batch_first, *, Tensor(a!) out0, Tensor(b!) out1, Tensor(c!) out2, Tensor(d!) out3, Tensor(e!) out4, Tensor(f!) out5) -> (Tensor(a!), Tensor(b!), Tensor(c!), Tensor(d!), Tensor(e!), Tensor(f!))
aten::_lstm_mps(Tensor input, Tensor[] hx, Tensor[] params, bool has_biases, int num_layers, float dropout, bool train, bool bidirectional, bool batch_first) -> (Tensor, Tensor, Tensor, Tensor, Tensor, Tensor)
aten::_fused_moving_avg_obs_fq_helper_functional(Tensor self, Tensor observer_on, Tensor fake_quant_on, Tensor running_min, Tensor running_max, Tensor scale, Tensor zero_point, float averaging_const, int quant_min, int quant_max, int ch_axis, bool per_row_fake_quant=False, bool symmetric_quant=False) -> (Tensor output, Tensor mask, Tensor running_min_out, Tensor running_max_out, Tensor scale_out, Tensor zero_point_out)
aten::int_repr.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::int_repr(Tensor self) -> Tensor
aten::q_per_channel_zero_points.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::q_per_channel_zero_points(Tensor self) -> Tensor
aten::q_per_channel_scales.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::q_per_channel_scales(Tensor self) -> Tensor
aten::mkldnn_reorder_conv3d_weight.out(Tensor self, int[3] padding=0, int[3] stride=1, int[3] dilation=1, int groups=1, *, Tensor(a!) out) -> Tensor(a!)
aten::mkldnn_reorder_conv3d_weight(Tensor self, int[3] padding=0, int[3] stride=1, int[3] dilation=1, int groups=1) -> Tensor
aten::mkldnn_reorder_conv2d_weight.out(Tensor self, int[2] padding=0, int[2] stride=1, int[2] dilation=1, int groups=1, int[]? input_size=None, *, Tensor(a!) out) -> Tensor(a!)
aten::mkldnn_reorder_conv2d_weight(Tensor self, int[2] padding=0, int[2] stride=1, int[2] dilation=1, int groups=1, int[]? input_size=None) -> Tensor
aten::copy_sparse_to_sparse(Tensor self, Tensor src, bool non_blocking=False) -> Tensor
aten::copy_sparse_to_sparse.out(Tensor self, Tensor src, bool non_blocking=False, *, Tensor(a!) out) -> Tensor(a!)
aten::row_indices(Tensor(a) self) -> Tensor(a)
aten::ccol_indices(Tensor(a) self) -> Tensor(a)
aten::col_indices(Tensor(a) self) -> Tensor(a)
aten::crow_indices(Tensor(a) self) -> Tensor(a)
aten::values(Tensor(a) self) -> Tensor(a)
aten::indices(Tensor(a) self) -> Tensor(a)
aten::_to_dense.out(Tensor self, ScalarType? dtype=None, *, Tensor(a!) out) -> Tensor(a!)
aten::_to_dense(Tensor self, ScalarType? dtype=None) -> Tensor
aten::sparse_mask.out(Tensor self, Tensor mask, *, Tensor(a!) out) -> Tensor(a!)
aten::sparse_mask(Tensor self, Tensor mask) -> Tensor
aten::sparse_resize_and_clear(Tensor self, int[] size, int sparse_dim, int dense_dim) -> Tensor
aten::sparse_resize_and_clear.out(Tensor self, int[] size, int sparse_dim, int dense_dim, *, Tensor(a!) out) -> Tensor(a!)
aten::sparse_resize(Tensor self, int[] size, int sparse_dim, int dense_dim) -> Tensor
aten::sparse_resize.out(Tensor self, int[] size, int sparse_dim, int dense_dim, *, Tensor(a!) out) -> Tensor(a!)
aten::_sparse_addmm(Tensor self, Tensor mat1, Tensor mat2, *, Scalar beta=1, Scalar alpha=1) -> Tensor
aten::_sparse_addmm.out(Tensor self, Tensor mat1, Tensor mat2, *, Scalar beta=1, Scalar alpha=1, Tensor(a!) out) -> Tensor(a!)
aten::zero(Tensor self) -> Tensor
aten::zero.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::resize_as_sparse(Tensor self, Tensor the_template) -> Tensor
aten::resize_as_sparse.out(Tensor self, Tensor the_template, *, Tensor(a!) out) -> Tensor(a!)
aten::resize_as(Tensor self, Tensor the_template, *, MemoryFormat? memory_format=None) -> Tensor
aten::resize_as.out(Tensor self, Tensor the_template, *, MemoryFormat? memory_format=None, Tensor(a!) out) -> Tensor(a!)
aten::_sparse_log_softmax_backward_data.out(Tensor grad_output, Tensor output, int dim, Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::_sparse_log_softmax_backward_data(Tensor grad_output, Tensor output, int dim, Tensor self) -> Tensor
aten::_sparse_softmax_backward_data.out(Tensor grad_output, Tensor output, int dim, Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::_sparse_softmax_backward_data(Tensor grad_output, Tensor output, int dim, Tensor self) -> Tensor
aten::_sparse_csr_prod.dim_dtype_out(Tensor self, int[1] dim, bool keepdim=False, *, ScalarType? dtype=None, Tensor(a!) out) -> Tensor(a!)
aten::_sparse_csr_prod.dim_dtype(Tensor self, int[1] dim, bool keepdim=False, *, ScalarType? dtype=None) -> Tensor
aten::_sparse_csr_sum.dim_dtype_out(Tensor self, int[1] dim, bool keepdim=False, *, ScalarType? dtype=None, Tensor(a!) out) -> Tensor(a!)
aten::_sparse_csr_sum.dim_dtype(Tensor self, int[1] dim, bool keepdim=False, *, ScalarType? dtype=None) -> Tensor
aten::_sparse_sum_backward.out(Tensor grad, Tensor self, int[] dim, *, Tensor(a!) out) -> Tensor(a!)
aten::_sparse_sum_backward(Tensor grad, Tensor self, int[] dim) -> Tensor
aten::_sparse_sum.dim(Tensor self, int[1] dim) -> Tensor
aten::_sparse_sum.dim_out(Tensor self, int[1] dim, *, Tensor(a!) out) -> Tensor(a!)
aten::_sparse_sum(Tensor self) -> Tensor
aten::_sparse_sum.dtype(Tensor self, *, ScalarType dtype) -> Tensor
aten::_sparse_sum.dim_dtype(Tensor self, int[1] dim, *, ScalarType dtype) -> Tensor
aten::native_norm.out(Tensor self, Scalar p=2, *, Tensor(a!) out) -> Tensor(a!)
aten::native_norm.ScalarOpt_dim_dtype_out(Tensor self, Scalar? p, int[1] dim, bool keepdim, ScalarType? dtype, *, Tensor(a!) out) -> Tensor(a!)
aten::native_norm(Tensor self, Scalar p=2) -> Tensor
aten::native_norm.ScalarOpt_dim_dtype(Tensor self, Scalar? p, int[1] dim, bool keepdim, ScalarType? dtype) -> Tensor
aten::_trilinear.out(Tensor i1, Tensor i2, Tensor i3, int[] expand1, int[] expand2, int[] expand3, int[] sumdim, int unroll_dim=1, *, Tensor(a!) out) -> Tensor(a!)
aten::_trilinear(Tensor i1, Tensor i2, Tensor i3, int[] expand1, int[] expand2, int[] expand3, int[] sumdim, int unroll_dim=1) -> Tensor
aten::_nested_view_from_buffer_copy.out(Tensor self, Tensor nested_size, Tensor nested_strides, int[] offsets, *, Tensor(a!) out) -> Tensor(a!)
aten::_nested_view_from_buffer_copy(Tensor self, Tensor nested_size, Tensor nested_strides, int[] offsets) -> Tensor
aten::_nested_from_padded_and_nested_example.out(Tensor padded, Tensor nt_example, *, Tensor(a!) out) -> Tensor(a!)
aten::_nested_from_padded_and_nested_example(Tensor padded, Tensor nt_example) -> Tensor
aten::_nested_tensor_strides.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::_nested_tensor_strides(Tensor self) -> Tensor
aten::_nested_tensor_size.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::_nested_tensor_size(Tensor self) -> Tensor
c10d::barrier(Tensor tensor, __torch__.torch.classes.c10d.ProcessGroup process_group, int[] device_ids, int timeout) -> __torch__.torch.classes.c10d.Work
aten::_mkldnn_transpose.out(Tensor self, int dim0, int dim1, *, Tensor(a!) out) -> Tensor(a!)
aten::_mkldnn_transpose(Tensor self, int dim0, int dim1) -> Tensor
c10d::alltoall_base_(Tensor output, Tensor input, __torch__.torch.classes.c10d.ProcessGroup process_group, int[] output_split_sizes, int[] input_split_sizes, int timeout) -> __torch__.torch.classes.c10d.Work
aten::_mkldnn_reshape.out(Tensor self, int[] shape, *, Tensor(a!) out) -> Tensor(a!)
aten::_mkldnn_reshape(Tensor self, int[] shape) -> Tensor
aten::_reshape_copy(Tensor self, SymInt[] size) -> Tensor
aten::_nnpack_spatial_convolution(Tensor input, Tensor weight, Tensor? bias, SymInt[2] padding, int[2] stride=1) -> Tensor
aten::_nnpack_spatial_convolution.out(Tensor input, Tensor weight, Tensor? bias, SymInt[2] padding, int[2] stride=1, *, Tensor(a!) out) -> Tensor(a!)
aten::batch_norm_backward_elemt.out(Tensor grad_out, Tensor input, Tensor mean, Tensor invstd, Tensor? weight, Tensor mean_dy, Tensor mean_dy_xmu, Tensor count, *, Tensor(a!) out) -> Tensor(a!)
aten::batch_norm_backward_elemt(Tensor grad_out, Tensor input, Tensor mean, Tensor invstd, Tensor? weight, Tensor mean_dy, Tensor mean_dy_xmu, Tensor count) -> Tensor
aten::batch_norm_backward_reduce.out(Tensor grad_out, Tensor input, Tensor mean, Tensor invstd, Tensor? weight, bool input_g, bool weight_g, bool bias_g, *, Tensor(a!) out0, Tensor(b!) out1, Tensor(c!) out2, Tensor(d!) out3) -> (Tensor(a!), Tensor(b!), Tensor(c!), Tensor(d!))
aten::batch_norm_backward_reduce(Tensor grad_out, Tensor input, Tensor mean, Tensor invstd, Tensor? weight, bool input_g, bool weight_g, bool bias_g) -> (Tensor, Tensor, Tensor, Tensor)
aten::batch_norm_gather_stats_with_counts.out(Tensor input, Tensor mean, Tensor invstd, Tensor? running_mean, Tensor? running_var, float momentum, float eps, Tensor counts, *, Tensor(a!) out0, Tensor(b!) out1) -> (Tensor(a!), Tensor(b!))
aten::batch_norm_gather_stats_with_counts(Tensor input, Tensor mean, Tensor invstd, Tensor? running_mean, Tensor? running_var, float momentum, float eps, Tensor counts) -> (Tensor, Tensor)
aten::batch_norm_gather_stats.out(Tensor input, Tensor mean, Tensor invstd, Tensor? running_mean, Tensor? running_var, float momentum, float eps, int count, *, Tensor(a!) out0, Tensor(b!) out1) -> (Tensor(a!), Tensor(b!))
aten::batch_norm_gather_stats(Tensor input, Tensor mean, Tensor invstd, Tensor? running_mean, Tensor? running_var, float momentum, float eps, int count) -> (Tensor, Tensor)
aten::batch_norm_stats.out(Tensor input, float eps, *, Tensor(a!) out0, Tensor(b!) out1) -> (Tensor(a!), Tensor(b!))
aten::batch_norm_stats(Tensor input, float eps) -> (Tensor, Tensor)
aten::_native_batch_norm_legit_functional(Tensor input, Tensor? weight, Tensor? bias, Tensor running_mean, Tensor running_var, bool training, float momentum, float eps) -> (Tensor, Tensor, Tensor, Tensor running_mean_out, Tensor running_var_out)
aten::_sparse_sparse_matmul.out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
aten::_sparse_sparse_matmul(Tensor self, Tensor other) -> Tensor
aten::miopen_rnn_backward.out(Tensor input, Tensor[] weight, int weight_stride0, Tensor weight_buf, Tensor hx, Tensor? cx, Tensor output, Tensor? grad_output, Tensor? grad_hy, Tensor? grad_cy, int mode, int hidden_size, int num_layers, bool batch_first, float dropout, bool train, bool bidirectional, int[] batch_sizes, Tensor? dropout_state, Tensor reserve, bool[4] output_mask, *, Tensor(a!) out0, Tensor(b!) out1, Tensor(c!) out2, Tensor(d!)[] out3) -> ()
aten::miopen_rnn_backward(Tensor input, Tensor[] weight, int weight_stride0, Tensor weight_buf, Tensor hx, Tensor? cx, Tensor output, Tensor? grad_output, Tensor? grad_hy, Tensor? grad_cy, int mode, int hidden_size, int num_layers, bool batch_first, float dropout, bool train, bool bidirectional, int[] batch_sizes, Tensor? dropout_state, Tensor reserve, bool[4] output_mask) -> (Tensor, Tensor, Tensor, Tensor[])
aten::miopen_rnn.out(Tensor input, Tensor[] weight, int weight_stride0, Tensor hx, Tensor? cx, int mode, int hidden_size, int num_layers, bool batch_first, float dropout, bool train, bool bidirectional, int[] batch_sizes, Tensor? dropout_state, *, Tensor(a!) out0, Tensor(b!) out1, Tensor(c!) out2, Tensor(d!) out3, Tensor(e!) out4) -> (Tensor(a!), Tensor(b!), Tensor(c!), Tensor(d!), Tensor(e!))
aten::miopen_rnn(Tensor input, Tensor[] weight, int weight_stride0, Tensor hx, Tensor? cx, int mode, int hidden_size, int num_layers, bool batch_first, float dropout, bool train, bool bidirectional, int[] batch_sizes, Tensor? dropout_state) -> (Tensor, Tensor, Tensor, Tensor, Tensor)
aten::miopen_depthwise_convolution.out(Tensor self, Tensor weight, Tensor? bias, SymInt[] padding, int[] stride, int[] dilation, int groups, bool benchmark, bool deterministic, *, Tensor(a!) out) -> Tensor(a!)
aten::miopen_depthwise_convolution(Tensor self, Tensor weight, Tensor? bias, SymInt[] padding, int[] stride, int[] dilation, int groups, bool benchmark, bool deterministic) -> Tensor
aten::miopen_convolution_transpose.out(Tensor self, Tensor weight, Tensor? bias, SymInt[] padding, SymInt[] output_padding, int[] stride, int[] dilation, int groups, bool benchmark, bool deterministic, *, Tensor(a!) out) -> Tensor(a!)
aten::miopen_convolution_transpose(Tensor self, Tensor weight, Tensor? bias, SymInt[] padding, SymInt[] output_padding, int[] stride, int[] dilation, int groups, bool benchmark, bool deterministic) -> Tensor
aten::miopen_convolution.out(Tensor self, Tensor weight, Tensor? bias, SymInt[] padding, int[] stride, int[] dilation, int groups, bool benchmark, bool deterministic, *, Tensor(a!) out) -> Tensor(a!)
aten::miopen_convolution(Tensor self, Tensor weight, Tensor? bias, SymInt[] padding, int[] stride, int[] dilation, int groups, bool benchmark, bool deterministic) -> Tensor
aten::mkldnn_convolution(Tensor self, Tensor weight, Tensor? bias, SymInt[] padding, int[] stride, int[] dilation, int groups) -> Tensor
aten::mkldnn_convolution.out(Tensor self, Tensor weight, Tensor? bias, SymInt[] padding, int[] stride, int[] dilation, int groups, *, Tensor(a!) out) -> Tensor(a!)
aten::mps_convolution_backward.out(Tensor self, Tensor grad_output, Tensor weight, int[] padding, int[] stride, int[] dilation, int groups, bool[3] output_mask, *, Tensor(a!) out0, Tensor(b!) out1, Tensor(c!) out2) -> (Tensor(a!), Tensor(b!), Tensor(c!))
aten::mps_convolution_backward(Tensor self, Tensor grad_output, Tensor weight, int[] padding, int[] stride, int[] dilation, int groups, bool[3] output_mask) -> (Tensor, Tensor, Tensor)
c10d::send(Tensor[] tensors, __torch__.torch.classes.c10d.ProcessGroup process_group, int dst, int tag) -> __torch__.torch.classes.c10d.Work
aten::_mps_convolution.out(Tensor self, Tensor weight, Tensor? bias, int[] padding, int[] stride, int[] dilation, int groups, *, Tensor(a!) out) -> Tensor(a!)
aten::_mps_convolution(Tensor self, Tensor weight, Tensor? bias, int[] padding, int[] stride, int[] dilation, int groups) -> Tensor
aten::quantized_max_pool2d.out(Tensor self, int[2] kernel_size, int[2] stride=[], int[2] padding=0, int[2] dilation=1, bool ceil_mode=False, *, Tensor(a!) out) -> Tensor(a!)
aten::quantized_max_pool2d(Tensor self, int[2] kernel_size, int[2] stride=[], int[2] padding=0, int[2] dilation=1, bool ceil_mode=False) -> Tensor
aten::quantized_max_pool1d.out(Tensor self, int[1] kernel_size, int[1] stride=[], int[1] padding=[0], int[1] dilation=[1], bool ceil_mode=False, *, Tensor(a!) out) -> Tensor(a!)
aten::quantized_max_pool1d(Tensor self, int[1] kernel_size, int[1] stride=[], int[1] padding=[0], int[1] dilation=[1], bool ceil_mode=False) -> Tensor
aten::mkldnn_max_pool3d_backward.out(Tensor grad_output, Tensor output, Tensor input, int[3] kernel_size, int[3] stride=[], int[3] padding=0, int[3] dilation=1, bool ceil_mode=False, *, Tensor(a!) out) -> Tensor(a!)
aten::mkldnn_max_pool3d_backward(Tensor grad_output, Tensor output, Tensor input, int[3] kernel_size, int[3] stride=[], int[3] padding=0, int[3] dilation=1, bool ceil_mode=False) -> Tensor
aten::mkldnn_max_pool3d.out(Tensor self, int[3] kernel_size, int[3] stride=[], int[3] padding=0, int[3] dilation=1, bool ceil_mode=False, *, Tensor(a!) out) -> Tensor(a!)
aten::mkldnn_max_pool3d(Tensor self, int[3] kernel_size, int[3] stride=[], int[3] padding=0, int[3] dilation=1, bool ceil_mode=False) -> Tensor
aten::mkldnn_max_pool2d_backward.out(Tensor grad_output, Tensor output, Tensor input, int[2] kernel_size, int[2] stride=[], int[2] padding=0, int[2] dilation=1, bool ceil_mode=False, *, Tensor(a!) out) -> Tensor(a!)
aten::mkldnn_max_pool2d_backward(Tensor grad_output, Tensor output, Tensor input, int[2] kernel_size, int[2] stride=[], int[2] padding=0, int[2] dilation=1, bool ceil_mode=False) -> Tensor
aten::mkldnn_max_pool2d.out(Tensor self, int[2] kernel_size, int[2] stride=[], int[2] padding=0, int[2] dilation=1, bool ceil_mode=False, *, Tensor(a!) out) -> Tensor(a!)
aten::mkldnn_max_pool2d(Tensor self, int[2] kernel_size, int[2] stride=[], int[2] padding=0, int[2] dilation=1, bool ceil_mode=False) -> Tensor
aten::max_pool2d_backward.out(Tensor grad_output, Tensor self, int[2] kernel_size, int[2] stride=[], int[2] padding=0, int[2] dilation=1, bool ceil_mode=False, *, Tensor(a!) out) -> Tensor(a!)
aten::max_pool2d_backward(Tensor grad_output, Tensor self, int[2] kernel_size, int[2] stride=[], int[2] padding=0, int[2] dilation=1, bool ceil_mode=False) -> Tensor
aten::matmul_backward.out(Tensor grad, Tensor self, Tensor other, bool[2] mask, *, Tensor(a!) out0, Tensor(b!) out1) -> (Tensor(a!), Tensor(b!))
aten::matmul_backward(Tensor grad, Tensor self, Tensor other, bool[2] mask) -> (Tensor, Tensor)
aten::mkldnn_linear_backward.out(Tensor self, Tensor grad_output, Tensor weight, bool[3] output_mask, *, Tensor(a!) out0, Tensor(b!) out1, Tensor(c!) out2) -> (Tensor(a!), Tensor(b!), Tensor(c!))
aten::mkldnn_linear_backward(Tensor self, Tensor grad_output, Tensor weight, bool[3] output_mask) -> (Tensor, Tensor, Tensor)
aten::mkldnn_linear_backward_weights.out(Tensor grad_output, Tensor input, Tensor weight, bool bias_defined, *, Tensor(a!) out0, Tensor(b!) out1) -> (Tensor(a!), Tensor(b!))
aten::mkldnn_linear_backward_weights(Tensor grad_output, Tensor input, Tensor weight, bool bias_defined) -> (Tensor, Tensor)
aten::mkldnn_linear_backward_input.out(int[] input_size, Tensor grad_output, Tensor weight, *, Tensor(a!) out) -> Tensor(a!)
aten::mkldnn_linear_backward_input(int[] input_size, Tensor grad_output, Tensor weight) -> Tensor
aten::mkldnn_linear.out(Tensor self, Tensor weight, Tensor? bias=None, *, Tensor(a!) out) -> Tensor(a!)
aten::mkldnn_linear(Tensor self, Tensor weight, Tensor? bias=None) -> Tensor
aten::linear_backward.out(Tensor self, Tensor grad_output, Tensor weight, bool[3] output_mask, *, Tensor(a!) out0, Tensor(b!) out1, Tensor(c!) out2) -> (Tensor(a!), Tensor(b!), Tensor(c!))
aten::linear_backward(Tensor self, Tensor grad_output, Tensor weight, bool[3] output_mask) -> (Tensor, Tensor, Tensor)
_test::leaky_relu(Tensor self, float v=0.01) -> Tensor
aten::_index_put_impl(Tensor self, Tensor?[] indices, Tensor values, bool accumulate=False, bool unsafe=False) -> Tensor
aten::_index_put_impl.out(Tensor self, Tensor?[] indices, Tensor values, bool accumulate=False, bool unsafe=False, *, Tensor(a!) out) -> Tensor(a!)
aten::fill.Scalar(Tensor self, Scalar value) -> Tensor
aten::fill.Scalar_out(Tensor self, Scalar value, *, Tensor(a!) out) -> Tensor(a!)
aten::fill.Tensor(Tensor self, Tensor value) -> Tensor
aten::fill.Tensor_out(Tensor self, Tensor value, *, Tensor(a!) out) -> Tensor(a!)
aten::_resize_output(Tensor self, int[] size, Device device) -> Tensor
aten::_resize_output.out(Tensor self, int[] size, Device device, *, Tensor(a!) out) -> Tensor(a!)
aten::resize(Tensor self, SymInt[] size, *, MemoryFormat? memory_format=None) -> Tensor
aten::resize.out(Tensor self, SymInt[] size, *, MemoryFormat? memory_format=None, Tensor(a!) out) -> Tensor(a!)
aten::embedding_renorm(Tensor self, Tensor indices, float max_norm, float norm_type) -> Tensor
aten::embedding_renorm.out(Tensor self, Tensor indices, float max_norm, float norm_type, *, Tensor(a!) out) -> Tensor(a!)
aten::cudnn_convolution_add_relu.out(Tensor self, Tensor weight, Tensor z, Scalar? alpha, Tensor? bias, int[] stride, int[] padding, int[] dilation, int groups, *, Tensor(a!) out) -> Tensor(a!)
aten::cudnn_convolution_add_relu(Tensor self, Tensor weight, Tensor z, Scalar? alpha, Tensor? bias, int[] stride, int[] padding, int[] dilation, int groups) -> Tensor
aten::cudnn_convolution_relu.out(Tensor self, Tensor weight, Tensor? bias, int[] stride, int[] padding, int[] dilation, int groups, *, Tensor(a!) out) -> Tensor(a!)
aten::cudnn_convolution_relu(Tensor self, Tensor weight, Tensor? bias, int[] stride, int[] padding, int[] dilation, int groups) -> Tensor
aten::mps_convolution_transpose_backward.out(Tensor self, Tensor grad_output, Tensor weight, int[] padding, int[] output_padding, int[] stride, int[] dilation, int groups, bool[2] output_mask, *, Tensor(a!) out0, Tensor(b!) out1) -> (Tensor(a!), Tensor(b!))
aten::mps_convolution_transpose_backward(Tensor self, Tensor grad_output, Tensor weight, int[] padding, int[] output_padding, int[] stride, int[] dilation, int groups, bool[2] output_mask) -> (Tensor, Tensor)
c10d::recv_(Tensor[] tensors, __torch__.torch.classes.c10d.ProcessGroup process_group, int src, int tag) -> __torch__.torch.classes.c10d.Work
aten::_mps_convolution_transpose.out(Tensor self, Tensor weight, int[] padding, int[] output_padding, int[] stride, int[] dilation, int groups, *, Tensor(a!) out) -> Tensor(a!)
aten::_mps_convolution_transpose(Tensor self, Tensor weight, int[] padding, int[] output_padding, int[] stride, int[] dilation, int groups) -> Tensor
aten::cudnn_affine_grid_generator_backward.out(Tensor grad, int N, int C, int H, int W, *, Tensor(a!) out) -> Tensor(a!)
aten::cudnn_affine_grid_generator_backward(Tensor grad, int N, int C, int H, int W) -> Tensor grad_theta
aten::cudnn_affine_grid_generator.out(Tensor theta, int N, int C, int H, int W, *, Tensor(a!) out) -> Tensor(a!)
aten::cudnn_affine_grid_generator(Tensor theta, int N, int C, int H, int W) -> Tensor grid
aten::copy.out(Tensor self, Tensor src, bool non_blocking=False, *, Tensor(a!) out) -> Tensor(a!)
aten::copy(Tensor self, Tensor src, bool non_blocking=False) -> Tensor
aten::convolution_backward_overrideable(Tensor grad_output, Tensor input, Tensor weight, int[] stride, int[] padding, int[] dilation, bool transposed, int[] output_padding, int groups, bool[3] output_mask) -> (Tensor grad_input, Tensor grad_weight, Tensor grad_bias)
aten::convolution_backward_overrideable.out(Tensor grad_output, Tensor input, Tensor weight, int[] stride, int[] padding, int[] dilation, bool transposed, int[] output_padding, int groups, bool[3] output_mask, *, Tensor(a!) out0, Tensor(b!) out1, Tensor(c!) out2) -> (Tensor(a!), Tensor(b!), Tensor(c!))
aten::convolution_overrideable(Tensor input, Tensor weight, Tensor? bias, int[] stride, int[] padding, int[] dilation, bool transposed, int[] output_padding, int groups) -> Tensor
aten::convolution_overrideable.out(Tensor input, Tensor weight, Tensor? bias, int[] stride, int[] padding, int[] dilation, bool transposed, int[] output_padding, int groups, *, Tensor(a!) out) -> Tensor(a!)
aten::quantized_batch_norm.out(Tensor input, Tensor? weight, Tensor? bias, Tensor mean, Tensor var, float eps, float output_scale, int output_zero_point, *, Tensor(a!) out) -> Tensor(a!)
aten::quantized_batch_norm(Tensor input, Tensor? weight, Tensor? bias, Tensor mean, Tensor var, float eps, float output_scale, int output_zero_point) -> Tensor
aten::affine_grid_generator(Tensor theta, int[] size, bool align_corners) -> Tensor
aten::affine_grid_generator.out(Tensor theta, int[] size, bool align_corners, *, Tensor(a!) out) -> Tensor(a!)
aten::addr_(Tensor(a!) self, Tensor vec1, Tensor vec2, *, Scalar beta=1, Scalar alpha=1) -> Tensor(a!)
aten::_neg_view(Tensor(a) self) -> Tensor(a)
c10d::gather_(Tensor[][] output_tensors, Tensor[] input_tensors, __torch__.torch.classes.c10d.ProcessGroup process_group, int root_rank, int timeout) -> __torch__.torch.classes.c10d.Work
aten::_masked_scale.out(Tensor self, Tensor mask, float scale, *, Tensor(a!) out) -> Tensor(a!)
aten::_masked_scale(Tensor self, Tensor mask, float scale) -> Tensor
profiler::_record_function_exit(Tensor _0) -> ()
profiler::_record_function_exit._RecordFunction(__torch__.torch.classes.profiler._RecordFunction _0) -> ()
aten::_foobar(Tensor self, bool arg1=True, bool arg2=True, *, bool arg3=True) -> Tensor
aten::_foobar.out(Tensor self, bool arg1=True, bool arg2=True, *, bool arg3=True, Tensor(a!) out) -> Tensor(a!)
aten::special_spherical_bessel_j0(Tensor x) -> Tensor
aten::special_spherical_bessel_j0.out(Tensor x, *, Tensor(a!) out) -> Tensor(a!)
aten::special_shifted_chebyshev_polynomial_w(Tensor x, Tensor n) -> Tensor
aten::special_shifted_chebyshev_polynomial_w.out(Tensor x, Tensor n, *, Tensor(a!) out) -> Tensor(a!)
aten::special_shifted_chebyshev_polynomial_w.n_scalar_out(Tensor x, Scalar n, *, Tensor(a!) out) -> Tensor(a!)
aten::special_shifted_chebyshev_polynomial_w.x_scalar(Scalar x, Tensor n) -> Tensor
aten::special_shifted_chebyshev_polynomial_w.x_scalar_out(Scalar x, Tensor n, *, Tensor(a!) out) -> Tensor(a!)
aten::special_shifted_chebyshev_polynomial_w.n_scalar(Tensor x, Scalar n) -> Tensor
aten::special_shifted_chebyshev_polynomial_v(Tensor x, Tensor n) -> Tensor
aten::special_shifted_chebyshev_polynomial_v.out(Tensor x, Tensor n, *, Tensor(a!) out) -> Tensor(a!)
aten::special_shifted_chebyshev_polynomial_v.n_scalar_out(Tensor x, Scalar n, *, Tensor(a!) out) -> Tensor(a!)
aten::special_shifted_chebyshev_polynomial_v.x_scalar(Scalar x, Tensor n) -> Tensor
aten::special_shifted_chebyshev_polynomial_v.x_scalar_out(Scalar x, Tensor n, *, Tensor(a!) out) -> Tensor(a!)
aten::special_shifted_chebyshev_polynomial_v.n_scalar(Tensor x, Scalar n) -> Tensor
aten::special_shifted_chebyshev_polynomial_u(Tensor x, Tensor n) -> Tensor
aten::special_shifted_chebyshev_polynomial_u.out(Tensor x, Tensor n, *, Tensor(a!) out) -> Tensor(a!)
aten::special_shifted_chebyshev_polynomial_u.n_scalar_out(Tensor x, Scalar n, *, Tensor(a!) out) -> Tensor(a!)
aten::special_shifted_chebyshev_polynomial_u.x_scalar(Scalar x, Tensor n) -> Tensor
aten::special_shifted_chebyshev_polynomial_u.x_scalar_out(Scalar x, Tensor n, *, Tensor(a!) out) -> Tensor(a!)
aten::special_shifted_chebyshev_polynomial_u.n_scalar(Tensor x, Scalar n) -> Tensor
aten::special_shifted_chebyshev_polynomial_t(Tensor x, Tensor n) -> Tensor
aten::special_shifted_chebyshev_polynomial_t.out(Tensor x, Tensor n, *, Tensor(a!) out) -> Tensor(a!)
aten::special_shifted_chebyshev_polynomial_t.n_scalar_out(Tensor x, Scalar n, *, Tensor(a!) out) -> Tensor(a!)
aten::special_shifted_chebyshev_polynomial_t.x_scalar(Scalar x, Tensor n) -> Tensor
aten::special_shifted_chebyshev_polynomial_t.x_scalar_out(Scalar x, Tensor n, *, Tensor(a!) out) -> Tensor(a!)
aten::special_shifted_chebyshev_polynomial_t.n_scalar(Tensor x, Scalar n) -> Tensor
aten::special_scaled_modified_bessel_k1(Tensor x) -> Tensor
aten::special_scaled_modified_bessel_k1.out(Tensor x, *, Tensor(a!) out) -> Tensor(a!)
aten::special_scaled_modified_bessel_k0(Tensor x) -> Tensor
aten::special_scaled_modified_bessel_k0.out(Tensor x, *, Tensor(a!) out) -> Tensor(a!)
aten::special_modified_bessel_k1(Tensor self) -> Tensor
aten::special_modified_bessel_k1.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::special_modified_bessel_k0(Tensor self) -> Tensor
aten::special_modified_bessel_k0.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::special_modified_bessel_i1(Tensor self) -> Tensor
aten::special_modified_bessel_i1.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::special_modified_bessel_i0(Tensor self) -> Tensor
aten::special_modified_bessel_i0.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::special_legendre_polynomial_p(Tensor x, Tensor n) -> Tensor
aten::special_legendre_polynomial_p.out(Tensor x, Tensor n, *, Tensor(a!) out) -> Tensor(a!)
aten::special_legendre_polynomial_p.n_scalar_out(Tensor x, Scalar n, *, Tensor(a!) out) -> Tensor(a!)
aten::special_legendre_polynomial_p.x_scalar(Scalar x, Tensor n) -> Tensor
aten::special_legendre_polynomial_p.x_scalar_out(Scalar x, Tensor n, *, Tensor(a!) out) -> Tensor(a!)
aten::special_legendre_polynomial_p.n_scalar(Tensor x, Scalar n) -> Tensor
aten::special_laguerre_polynomial_l(Tensor x, Tensor n) -> Tensor
aten::special_laguerre_polynomial_l.out(Tensor x, Tensor n, *, Tensor(a!) out) -> Tensor(a!)
aten::special_laguerre_polynomial_l.n_scalar_out(Tensor x, Scalar n, *, Tensor(a!) out) -> Tensor(a!)
aten::special_laguerre_polynomial_l.x_scalar(Scalar x, Tensor n) -> Tensor
aten::special_laguerre_polynomial_l.x_scalar_out(Scalar x, Tensor n, *, Tensor(a!) out) -> Tensor(a!)
aten::special_laguerre_polynomial_l.n_scalar(Tensor x, Scalar n) -> Tensor
aten::special_hermite_polynomial_he(Tensor x, Tensor n) -> Tensor
aten::special_hermite_polynomial_he.out(Tensor x, Tensor n, *, Tensor(a!) out) -> Tensor(a!)
aten::special_hermite_polynomial_he.n_scalar_out(Tensor x, Scalar n, *, Tensor(a!) out) -> Tensor(a!)
aten::special_hermite_polynomial_he.x_scalar(Scalar x, Tensor n) -> Tensor
aten::special_hermite_polynomial_he.x_scalar_out(Scalar x, Tensor n, *, Tensor(a!) out) -> Tensor(a!)
aten::special_hermite_polynomial_he.n_scalar(Tensor x, Scalar n) -> Tensor
aten::special_hermite_polynomial_h(Tensor x, Tensor n) -> Tensor
aten::special_hermite_polynomial_h.out(Tensor x, Tensor n, *, Tensor(a!) out) -> Tensor(a!)
aten::special_hermite_polynomial_h.n_scalar_out(Tensor x, Scalar n, *, Tensor(a!) out) -> Tensor(a!)
aten::special_hermite_polynomial_h.x_scalar(Scalar x, Tensor n) -> Tensor
aten::special_hermite_polynomial_h.x_scalar_out(Scalar x, Tensor n, *, Tensor(a!) out) -> Tensor(a!)
aten::special_hermite_polynomial_h.n_scalar(Tensor x, Scalar n) -> Tensor
aten::special_chebyshev_polynomial_w(Tensor x, Tensor n) -> Tensor
aten::special_chebyshev_polynomial_w.out(Tensor x, Tensor n, *, Tensor(a!) out) -> Tensor(a!)
aten::special_chebyshev_polynomial_w.n_scalar_out(Tensor x, Scalar n, *, Tensor(a!) out) -> Tensor(a!)
aten::special_chebyshev_polynomial_w.x_scalar(Scalar x, Tensor n) -> Tensor
aten::special_chebyshev_polynomial_w.x_scalar_out(Scalar x, Tensor n, *, Tensor(a!) out) -> Tensor(a!)
aten::special_chebyshev_polynomial_w.n_scalar(Tensor x, Scalar n) -> Tensor
aten::special_chebyshev_polynomial_v(Tensor x, Tensor n) -> Tensor
aten::special_chebyshev_polynomial_v.out(Tensor x, Tensor n, *, Tensor(a!) out) -> Tensor(a!)
aten::special_chebyshev_polynomial_v.n_scalar_out(Tensor x, Scalar n, *, Tensor(a!) out) -> Tensor(a!)
aten::special_chebyshev_polynomial_v.x_scalar(Scalar x, Tensor n) -> Tensor
aten::special_chebyshev_polynomial_v.x_scalar_out(Scalar x, Tensor n, *, Tensor(a!) out) -> Tensor(a!)
aten::special_chebyshev_polynomial_v.n_scalar(Tensor x, Scalar n) -> Tensor
aten::special_chebyshev_polynomial_u(Tensor x, Tensor n) -> Tensor
aten::special_chebyshev_polynomial_u.out(Tensor x, Tensor n, *, Tensor(a!) out) -> Tensor(a!)
aten::special_chebyshev_polynomial_u.n_scalar_out(Tensor x, Scalar n, *, Tensor(a!) out) -> Tensor(a!)
aten::special_chebyshev_polynomial_u.x_scalar(Scalar x, Tensor n) -> Tensor
aten::special_chebyshev_polynomial_u.x_scalar_out(Scalar x, Tensor n, *, Tensor(a!) out) -> Tensor(a!)
aten::special_chebyshev_polynomial_u.n_scalar(Tensor x, Scalar n) -> Tensor
aten::special_chebyshev_polynomial_t(Tensor x, Tensor n) -> Tensor
aten::special_chebyshev_polynomial_t.out(Tensor x, Tensor n, *, Tensor(a!) out) -> Tensor(a!)
aten::special_chebyshev_polynomial_t.n_scalar_out(Tensor x, Scalar n, *, Tensor(a!) out) -> Tensor(a!)
aten::special_chebyshev_polynomial_t.x_scalar(Scalar x, Tensor n) -> Tensor
aten::special_chebyshev_polynomial_t.x_scalar_out(Scalar x, Tensor n, *, Tensor(a!) out) -> Tensor(a!)
aten::special_chebyshev_polynomial_t.n_scalar(Tensor x, Scalar n) -> Tensor
aten::special_bessel_y1(Tensor self) -> Tensor
aten::special_bessel_y1.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::special_bessel_y0(Tensor self) -> Tensor
aten::special_bessel_y0.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::special_bessel_j1(Tensor self) -> Tensor
aten::special_bessel_j1.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::special_bessel_j0(Tensor self) -> Tensor
aten::special_bessel_j0.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
quantization::_Bfloat16QuantizedToFloat(Tensor input) -> Tensor
aten::_native_decoder_only_multi_head_attention(Tensor query, Tensor key, Tensor value, int embed_dim, int num_head, Tensor qkv_weight, Tensor qkv_bias, Tensor proj_weight, Tensor proj_bias, Tensor? mask=None, Tensor? incr_key=None, Tensor? incr_value=None, bool need_weights=True, bool average_attn_weights=True) -> (Tensor, Tensor, Tensor, Tensor)
aten::_native_decoder_only_multi_head_attention.out(Tensor query, Tensor key, Tensor value, int embed_dim, int num_head, Tensor qkv_weight, Tensor qkv_bias, Tensor proj_weight, Tensor proj_bias, Tensor? mask=None, Tensor? incr_key=None, Tensor? incr_value=None, bool need_weights=True, bool average_attn_weights=True, *, Tensor(a!) out0, Tensor(b!) out1, Tensor(c!) out2, Tensor(d!) out3) -> (Tensor(a!), Tensor(b!), Tensor(c!), Tensor(d!))
aten::_transformer_decoder_only_layer_fwd(Tensor src, int embed_dim, int num_heads, Tensor qkv_weight, Tensor qkv_bias, Tensor proj_weight, Tensor proj_bias, bool use_gelu, bool norm_first, float eps, Tensor norm_weight_1, Tensor norm_bias_1, Tensor norm_weight_2, Tensor norm_bias_2, Tensor ffn_weight_1, Tensor ffn_bias_1, Tensor ffn_weight_2, Tensor ffn_bias_2, Tensor? mask=None, Tensor? incr_key=None, Tensor? incr_value=None) -> (Tensor, Tensor, Tensor)
aten::_transformer_decoder_only_layer_fwd.out(Tensor src, int embed_dim, int num_heads, Tensor qkv_weight, Tensor qkv_bias, Tensor proj_weight, Tensor proj_bias, bool use_gelu, bool norm_first, float eps, Tensor norm_weight_1, Tensor norm_bias_1, Tensor norm_weight_2, Tensor norm_bias_2, Tensor ffn_weight_1, Tensor ffn_bias_1, Tensor ffn_weight_2, Tensor ffn_bias_2, Tensor? mask=None, Tensor? incr_key=None, Tensor? incr_value=None, *, Tensor(a!) out0, Tensor(b!) out1, Tensor(c!) out2) -> (Tensor(a!), Tensor(b!), Tensor(c!))
aten::special_airy_ai(Tensor x) -> Tensor
aten::special_airy_ai.out(Tensor x, *, Tensor(a!) out) -> Tensor(a!)
aten::_fused_sdp_choice(Tensor query, Tensor key, Tensor value, Tensor? attn_mask=None, float dropout_p=0., bool is_causal=False) -> int
quantization::_FloatToBfloat16Quantized(Tensor input) -> Tensor
aten::_native_multi_head_attention(Tensor query, Tensor key, Tensor value, int embed_dim, int num_head, Tensor qkv_weight, Tensor qkv_bias, Tensor proj_weight, Tensor proj_bias, Tensor? mask=None, bool need_weights=True, bool average_attn_weights=True, int? mask_type=None) -> (Tensor, Tensor)
aten::_native_multi_head_attention.out(Tensor query, Tensor key, Tensor value, int embed_dim, int num_head, Tensor qkv_weight, Tensor qkv_bias, Tensor proj_weight, Tensor proj_bias, Tensor? mask=None, bool need_weights=True, bool average_attn_weights=True, int? mask_type=None, *, Tensor(a!) out0, Tensor(b!) out1) -> (Tensor(a!), Tensor(b!))
aten::_transformer_encoder_layer_fwd(Tensor src, int embed_dim, int num_heads, Tensor qkv_weight, Tensor qkv_bias, Tensor proj_weight, Tensor proj_bias, bool use_gelu, bool norm_first, float eps, Tensor norm_weight_1, Tensor norm_bias_1, Tensor norm_weight_2, Tensor norm_bias_2, Tensor ffn_weight_1, Tensor ffn_bias_1, Tensor ffn_weight_2, Tensor ffn_bias_2, Tensor? mask=None, int? mask_type=None) -> Tensor
aten::_transformer_encoder_layer_fwd.out(Tensor src, int embed_dim, int num_heads, Tensor qkv_weight, Tensor qkv_bias, Tensor proj_weight, Tensor proj_bias, bool use_gelu, bool norm_first, float eps, Tensor norm_weight_1, Tensor norm_bias_1, Tensor norm_weight_2, Tensor norm_bias_2, Tensor ffn_weight_1, Tensor ffn_bias_1, Tensor ffn_weight_2, Tensor ffn_bias_2, Tensor? mask=None, int? mask_type=None, *, Tensor(a!) out) -> Tensor(a!)
aten::_segment_reduce_backward(Tensor grad, Tensor output, Tensor data, str reduce, *, Tensor? lengths=None, Tensor? offsets=None, int axis=0, Scalar? initial=None) -> Tensor
aten::_segment_reduce_backward.out(Tensor grad, Tensor output, Tensor data, str reduce, *, Tensor? lengths=None, Tensor? offsets=None, int axis=0, Scalar? initial=None, Tensor(a!) out) -> Tensor(a!)
aten::segment_reduce(Tensor data, str reduce, *, Tensor? lengths=None, Tensor? indices=None, Tensor? offsets=None, int axis=0, bool unsafe=False, Scalar? initial=None) -> Tensor
aten::segment_reduce.out(Tensor data, str reduce, *, Tensor? lengths=None, Tensor? indices=None, Tensor? offsets=None, int axis=0, bool unsafe=False, Scalar? initial=None, Tensor(a!) out) -> Tensor(a!)
aten::_test_optional_floatlist(Tensor values, float[]? addends) -> Tensor
aten::_test_optional_floatlist.out(Tensor values, float[]? addends, *, Tensor(a!) out) -> Tensor(a!)
aten::_test_optional_filled_intlist(Tensor values, int[2]? addends) -> Tensor
aten::_test_optional_filled_intlist.out(Tensor values, int[2]? addends, *, Tensor(a!) out) -> Tensor(a!)
aten::_test_optional_intlist(Tensor values, int[]? addends) -> Tensor
aten::_test_optional_intlist.out(Tensor values, int[]? addends, *, Tensor(a!) out) -> Tensor(a!)
aten::linalg_ldl_solve(Tensor LD, Tensor pivots, Tensor B, *, bool hermitian=False) -> Tensor
aten::linalg_ldl_solve.out(Tensor LD, Tensor pivots, Tensor B, *, bool hermitian=False, Tensor(a!) out) -> Tensor(a!)
aten::linalg_lu(Tensor A, *, bool pivot=True) -> (Tensor P, Tensor L, Tensor U)
aten::linalg_lu.out(Tensor A, *, bool pivot=True, Tensor(a!) P, Tensor(b!) L, Tensor(c!) U) -> (Tensor(a!) P, Tensor(b!) L, Tensor(c!) U)
aten::special_log_ndtr(Tensor self) -> Tensor
aten::special_log_ndtr.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::slow_conv_dilated3d(Tensor self, Tensor weight, int[3] kernel_size, Tensor? bias=None, int[3] stride=1, SymInt[3] padding=[0, 0, 0], int[3] dilation=1) -> Tensor
aten::slow_conv_dilated3d.out(Tensor self, Tensor weight, int[3] kernel_size, Tensor? bias=None, int[3] stride=1, SymInt[3] padding=[0, 0, 0], int[3] dilation=1, *, Tensor(a!) out) -> Tensor(a!)
aten::slow_conv_dilated2d(Tensor self, Tensor weight, int[2] kernel_size, Tensor? bias=None, int[2] stride=1, SymInt[2] padding=[0, 0], int[2] dilation=1) -> Tensor
aten::slow_conv_dilated2d.out(Tensor self, Tensor weight, int[2] kernel_size, Tensor? bias=None, int[2] stride=1, SymInt[2] padding=[0, 0], int[2] dilation=1, *, Tensor(a!) out) -> Tensor(a!)
aten::slow_conv3d_forward(Tensor self, Tensor weight, int[3] kernel_size, Tensor? bias, int[3] stride, SymInt[3] padding) -> Tensor
aten::slow_conv3d_forward.output(Tensor self, Tensor weight, int[3] kernel_size, Tensor? bias, int[3] stride, SymInt[3] padding, *, Tensor(a!) output) -> Tensor(a!)
aten::_slow_conv2d_backward.grad_input(Tensor grad_output, Tensor self, Tensor weight, int[2] kernel_size, int[2] stride, int[2] padding, *, Tensor(a!) grad_input, Tensor(b!) grad_weight, Tensor(c!) grad_bias) -> (Tensor(a!), Tensor(b!), Tensor(c!))
aten::_slow_conv2d_backward.output_mask(Tensor grad_output, Tensor self, Tensor weight, int[2] kernel_size, int[2] stride, int[2] padding, bool[3] output_mask) -> (Tensor grad_input, Tensor grad_weight, Tensor grad_bias)
aten::_slow_conv2d_backward.output_mask_out(Tensor grad_output, Tensor self, Tensor weight, int[2] kernel_size, int[2] stride, int[2] padding, bool[3] output_mask, *, Tensor(a!) out0, Tensor(b!) out1, Tensor(c!) out2) -> (Tensor(a!), Tensor(b!), Tensor(c!))
aten::_slow_conv2d_forward(Tensor self, Tensor weight, int[2] kernel_size, Tensor? bias, int[2] stride, int[2] padding) -> Tensor
aten::_slow_conv2d_forward.output(Tensor self, Tensor weight, int[2] kernel_size, Tensor? bias, int[2] stride, int[2] padding, *, Tensor(a!) output) -> Tensor(a!)
aten::slow_conv_transpose3d(Tensor self, Tensor weight, int[3] kernel_size, Tensor? bias=None, int[3] stride=1, SymInt[3] padding=[0, 0, 0], SymInt[3] output_padding=[0, 0, 0], int[3] dilation=1) -> Tensor
aten::slow_conv_transpose3d.out(Tensor self, Tensor weight, int[3] kernel_size, Tensor? bias=None, int[3] stride=1, SymInt[3] padding=[0, 0, 0], SymInt[3] output_padding=[0, 0, 0], int[3] dilation=1, *, Tensor(a!) out) -> Tensor(a!)
aten::slow_conv_transpose2d(Tensor self, Tensor weight, int[2] kernel_size, Tensor? bias=None, int[2] stride=1, SymInt[2] padding=[0, 0], SymInt[2] output_padding=[0, 0], int[2] dilation=1) -> Tensor
aten::slow_conv_transpose2d.out(Tensor self, Tensor weight, int[2] kernel_size, Tensor? bias=None, int[2] stride=1, SymInt[2] padding=[0, 0], SymInt[2] output_padding=[0, 0], int[2] dilation=1, *, Tensor(a!) out) -> Tensor(a!)
aten::_upsample_nearest_exact3d_backward(Tensor grad_output, SymInt[3] output_size, SymInt[5] input_size, float? scales_d=None, float? scales_h=None, float? scales_w=None) -> Tensor
aten::_upsample_nearest_exact3d_backward.grad_input(Tensor grad_output, SymInt[3] output_size, SymInt[5] input_size, float? scales_d=None, float? scales_h=None, float? scales_w=None, *, Tensor(a!) grad_input) -> Tensor(a!)
aten::_upsample_nearest_exact3d(Tensor self, SymInt[3] output_size, float? scales_d=None, float? scales_h=None, float? scales_w=None) -> Tensor
aten::_upsample_nearest_exact3d.out(Tensor self, SymInt[3] output_size, float? scales_d=None, float? scales_h=None, float? scales_w=None, *, Tensor(a!) out) -> Tensor(a!)
aten::_upsample_nearest_exact3d.vec(Tensor input, SymInt[]? output_size, float[]? scale_factors) -> Tensor
aten::_upsample_nearest_exact2d_backward(Tensor grad_output, SymInt[2] output_size, SymInt[4] input_size, float? scales_h=None, float? scales_w=None) -> Tensor
aten::_upsample_nearest_exact2d_backward.grad_input(Tensor grad_output, SymInt[2] output_size, SymInt[4] input_size, float? scales_h=None, float? scales_w=None, *, Tensor(a!) grad_input) -> Tensor(a!)
aten::_upsample_nearest_exact2d(Tensor self, SymInt[2] output_size, float? scales_h=None, float? scales_w=None) -> Tensor
aten::_upsample_nearest_exact2d.out(Tensor self, SymInt[2] output_size, float? scales_h=None, float? scales_w=None, *, Tensor(a!) out) -> Tensor(a!)
aten::_upsample_nearest_exact2d.vec(Tensor input, SymInt[]? output_size, float[]? scale_factors) -> Tensor
aten::_upsample_nearest_exact1d_backward(Tensor grad_output, SymInt[1] output_size, SymInt[3] input_size, float? scales=None) -> Tensor
aten::_upsample_nearest_exact1d_backward.grad_input(Tensor grad_output, SymInt[1] output_size, SymInt[3] input_size, float? scales=None, *, Tensor(a!) grad_input) -> Tensor(a!)
aten::_upsample_nearest_exact1d(Tensor self, SymInt[1] output_size, float? scales=None) -> Tensor
aten::_upsample_nearest_exact1d.out(Tensor self, SymInt[1] output_size, float? scales=None, *, Tensor(a!) out) -> Tensor(a!)
aten::_upsample_nearest_exact1d.vec(Tensor input, SymInt[]? output_size, float[]? scale_factors) -> Tensor
aten::_upsample_bicubic2d_aa_backward(Tensor grad_output, SymInt[2] output_size, SymInt[4] input_size, bool align_corners, float? scales_h=None, float? scales_w=None) -> Tensor
aten::_upsample_bicubic2d_aa_backward.grad_input(Tensor grad_output, SymInt[2] output_size, SymInt[4] input_size, bool align_corners, float? scales_h=None, float? scales_w=None, *, Tensor(a!) grad_input) -> Tensor(a!)
aten::_upsample_bicubic2d_aa(Tensor self, SymInt[2] output_size, bool align_corners, float? scales_h=None, float? scales_w=None) -> Tensor
aten::_upsample_bicubic2d_aa.out(Tensor self, SymInt[2] output_size, bool align_corners, float? scales_h=None, float? scales_w=None, *, Tensor(a!) out) -> Tensor(a!)
aten::_upsample_bicubic2d_aa.vec(Tensor input, SymInt[]? output_size, bool align_corners, float[]? scale_factors) -> Tensor
aten::_upsample_bilinear2d_aa_backward(Tensor grad_output, SymInt[2] output_size, SymInt[4] input_size, bool align_corners, float? scales_h=None, float? scales_w=None) -> Tensor
aten::_upsample_bilinear2d_aa_backward.grad_input(Tensor grad_output, SymInt[2] output_size, SymInt[4] input_size, bool align_corners, float? scales_h=None, float? scales_w=None, *, Tensor(a!) grad_input) -> Tensor(a!)
aten::_upsample_bilinear2d_aa(Tensor self, SymInt[2] output_size, bool align_corners, float? scales_h=None, float? scales_w=None) -> Tensor
aten::_upsample_bilinear2d_aa.out(Tensor self, SymInt[2] output_size, bool align_corners, float? scales_h=None, float? scales_w=None, *, Tensor(a!) out) -> Tensor(a!)
aten::_upsample_bilinear2d_aa.vec(Tensor input, SymInt[]? output_size, bool align_corners, float[]? scale_factors) -> Tensor
aten::max_pool3d_with_indices_backward(Tensor grad_output, Tensor self, int[3] kernel_size, int[3] stride, int[3] padding, int[3] dilation, bool ceil_mode, Tensor indices) -> Tensor
aten::max_pool3d_with_indices_backward.grad_input(Tensor grad_output, Tensor self, int[3] kernel_size, int[3] stride, int[3] padding, int[3] dilation, bool ceil_mode, Tensor indices, *, Tensor(a!) grad_input) -> Tensor(a!)
aten::fractional_max_pool3d_backward(Tensor grad_output, Tensor self, int[3] kernel_size, int[3] output_size, Tensor indices) -> Tensor
aten::fractional_max_pool3d_backward.grad_input(Tensor grad_output, Tensor self, int[3] kernel_size, int[3] output_size, Tensor indices, *, Tensor(a!) grad_input) -> Tensor(a!)
aten::fractional_max_pool2d_backward(Tensor grad_output, Tensor self, int[2] kernel_size, int[2] output_size, Tensor indices) -> Tensor
aten::fractional_max_pool2d_backward.grad_input(Tensor grad_output, Tensor self, int[2] kernel_size, int[2] output_size, Tensor indices, *, Tensor(a!) grad_input) -> Tensor(a!)
aten::adaptive_avg_pool3d_backward.grad_input(Tensor grad_output, Tensor self, *, Tensor(a!) grad_input) -> Tensor(a!)
aten::glu_backward_jvp(Tensor grad_x, Tensor grad_glu, Tensor x, Tensor dgrad_glu, Tensor dx, int dim) -> Tensor
aten::glu_backward_jvp.out(Tensor grad_x, Tensor grad_glu, Tensor x, Tensor dgrad_glu, Tensor dx, int dim, *, Tensor(a!) out) -> Tensor(a!)
aten::glu_jvp(Tensor glu, Tensor x, Tensor dx, int dim) -> Tensor
aten::glu_jvp.out(Tensor glu, Tensor x, Tensor dx, int dim, *, Tensor(a!) out) -> Tensor(a!)
aten::huber_loss_backward.out(Tensor grad_output, Tensor self, Tensor target, int reduction, float delta, *, Tensor(a!) grad_input) -> Tensor(a!)
aten::huber_loss_backward(Tensor grad_output, Tensor self, Tensor target, int reduction, float delta) -> Tensor
aten::smooth_l1_loss_backward.grad_input(Tensor grad_output, Tensor self, Tensor target, int reduction, float beta, *, Tensor(a!) grad_input) -> Tensor(a!)
aten::smooth_l1_loss_backward(Tensor grad_output, Tensor self, Tensor target, int reduction, float beta) -> Tensor
aten::multilabel_margin_loss_backward(Tensor grad_output, Tensor self, Tensor target, int reduction, Tensor is_target) -> Tensor
aten::multilabel_margin_loss_backward.grad_input(Tensor grad_output, Tensor self, Tensor target, int reduction, Tensor is_target, *, Tensor(a!) grad_input) -> Tensor(a!)
aten::multi_margin_loss_backward(Tensor grad_output, Tensor self, Tensor target, Scalar p, Scalar margin, Tensor? weight=None, int reduction=1) -> Tensor
aten::multi_margin_loss_backward.grad_input(Tensor grad_output, Tensor self, Tensor target, Scalar p, Scalar margin, Tensor? weight=None, int reduction=1, *, Tensor(a!) grad_input) -> Tensor(a!)
aten::mse_loss_backward(Tensor grad_output, Tensor self, Tensor target, int reduction) -> Tensor
aten::mse_loss_backward.grad_input(Tensor grad_output, Tensor self, Tensor target, int reduction, *, Tensor(a!) grad_input) -> Tensor(a!)
aten::bucketize.Tensor(Tensor self, Tensor boundaries, *, bool out_int32=False, bool right=False) -> Tensor
aten::bucketize.Tensor_out(Tensor self, Tensor boundaries, *, bool out_int32=False, bool right=False, Tensor(a!) out) -> Tensor(a!)
aten::bucketize.Scalar(Scalar self, Tensor boundaries, *, bool out_int32=False, bool right=False) -> Tensor
aten::bucketize.Scalar_out(Scalar self, Tensor boundaries, *, bool out_int32=False, bool right=False, Tensor(a!) out) -> Tensor(a!)
aten::_foreach_lerp_.List(Tensor(a!)[] self, Tensor[] tensors1, Tensor[] weights) -> ()
aten::_foreach_lerp_.Scalar(Tensor(a!)[] self, Tensor[] tensors1, Scalar weight) -> ()
aten::_foreach_lerp.List(Tensor[] self, Tensor[] tensors1, Tensor[] weights) -> Tensor[]
aten::_foreach_lerp.Scalar(Tensor[] self, Tensor[] tensors1, Scalar weight) -> Tensor[]
aten::_foreach_lerp.List_out(Tensor[] self, Tensor[] tensors1, Tensor[] weights, *, Tensor(a!)[] out) -> ()
aten::_foreach_lerp.Scalar_out(Tensor[] self, Tensor[] tensors1, Scalar weight, *, Tensor(a!)[] out) -> ()
aten::_foreach_norm.Scalar(Tensor[] self, Scalar ord=2) -> Tensor[]
aten::_foreach_norm.Scalar_out(Tensor[] self, Scalar ord=2, *, Tensor(a!)[] out) -> ()
static_runtime::select_tensor(Tensor(a) a, Tensor(b) b, bool use_b) -> Tensor(b|a)
aten::_foreach_addcmul_.Scalar(Tensor(a!)[] self, Tensor[] tensor1, Tensor[] tensor2, Scalar value=1) -> ()
aten::_foreach_addcmul_.ScalarList(Tensor(a!)[] self, Tensor[] tensor1, Tensor[] tensor2, Scalar[] scalars) -> ()
aten::_foreach_addcmul_.Tensor(Tensor(a!)[] self, Tensor[] tensor1, Tensor[] tensor2, Tensor scalars) -> ()
static_runtime::dequantize_copy.self(Tensor self) -> Tensor
aten::_foreach_addcmul.Scalar(Tensor[] self, Tensor[] tensor1, Tensor[] tensor2, Scalar value=1) -> Tensor[]
aten::_foreach_addcmul.ScalarList(Tensor[] self, Tensor[] tensor1, Tensor[] tensor2, Scalar[] scalars) -> Tensor[]
aten::_foreach_addcmul.Tensor(Tensor[] self, Tensor[] tensor1, Tensor[] tensor2, Tensor scalars) -> Tensor[]
aten::_foreach_addcmul.Scalar_out(Tensor[] self, Tensor[] tensor1, Tensor[] tensor2, Scalar value=1, *, Tensor(a!)[] out) -> ()
aten::_foreach_addcmul.ScalarList_out(Tensor[] self, Tensor[] tensor1, Tensor[] tensor2, Scalar[] scalars, *, Tensor(a!)[] out) -> ()
aten::_foreach_addcmul.Tensor_out(Tensor[] self, Tensor[] tensor1, Tensor[] tensor2, Tensor scalars, *, Tensor(a!)[] out) -> ()
static_runtime::signed_log1p(Tensor input) -> Tensor
aten::_foreach_addcdiv_.Scalar(Tensor(a!)[] self, Tensor[] tensor1, Tensor[] tensor2, Scalar value=1) -> ()
aten::_foreach_addcdiv_.ScalarList(Tensor(a!)[] self, Tensor[] tensor1, Tensor[] tensor2, Scalar[] scalars) -> ()
aten::_foreach_addcdiv_.Tensor(Tensor(a!)[] self, Tensor[] tensor1, Tensor[] tensor2, Tensor scalars) -> ()
static_runtime::layer_norm(Tensor input, int[] normalized_shape, Tensor? weight=None, Tensor? bias=None, float eps=1.0000000000000001e-05, bool cudnn_enable=True) -> (Tensor, Tensor, Tensor)
aten::_foreach_addcdiv.Scalar(Tensor[] self, Tensor[] tensor1, Tensor[] tensor2, Scalar value=1) -> Tensor[]
aten::_foreach_addcdiv.ScalarList(Tensor[] self, Tensor[] tensor1, Tensor[] tensor2, Scalar[] scalars) -> Tensor[]
aten::_foreach_addcdiv.Tensor(Tensor[] self, Tensor[] tensor1, Tensor[] tensor2, Tensor scalars) -> Tensor[]
aten::_foreach_addcdiv.Scalar_out(Tensor[] self, Tensor[] tensor1, Tensor[] tensor2, Scalar value=1, *, Tensor(a!)[] out) -> ()
aten::_foreach_addcdiv.ScalarList_out(Tensor[] self, Tensor[] tensor1, Tensor[] tensor2, Scalar[] scalars, *, Tensor(a!)[] out) -> ()
aten::_foreach_addcdiv.Tensor_out(Tensor[] self, Tensor[] tensor1, Tensor[] tensor2, Tensor scalars, *, Tensor(a!)[] out) -> ()
aten::_foreach_trunc_(Tensor(a!)[] self) -> ()
aten::_foreach_trunc(Tensor[] self) -> Tensor[]
aten::_foreach_trunc.out(Tensor[] self, *, Tensor(a!)[] out) -> ()
aten::_foreach_sigmoid_(Tensor(a!)[] self) -> ()
aten::_foreach_sigmoid(Tensor[] self) -> Tensor[]
aten::_foreach_sigmoid.out(Tensor[] self, *, Tensor(a!)[] out) -> ()
aten::_foreach_reciprocal_(Tensor(a!)[] self) -> ()
aten::_foreach_reciprocal(Tensor[] self) -> Tensor[]
aten::_foreach_reciprocal.out(Tensor[] self, *, Tensor(a!)[] out) -> ()
aten::_foreach_frac_(Tensor(a!)[] self) -> ()
aten::_foreach_frac(Tensor[] self) -> Tensor[]
aten::_foreach_frac.out(Tensor[] self, *, Tensor(a!)[] out) -> ()
aten::_foreach_lgamma_(Tensor(a!)[] self) -> ()
aten::_foreach_lgamma(Tensor[] self) -> Tensor[]
aten::_foreach_lgamma.out(Tensor[] self, *, Tensor(a!)[] out) -> ()
aten::_foreach_round_(Tensor(a!)[] self) -> ()
aten::_foreach_round(Tensor[] self) -> Tensor[]
aten::_foreach_round.out(Tensor[] self, *, Tensor(a!)[] out) -> ()
aten::_foreach_sinh_(Tensor(a!)[] self) -> ()
aten::_foreach_sinh(Tensor[] self) -> Tensor[]
aten::_foreach_sinh.out(Tensor[] self, *, Tensor(a!)[] out) -> ()
aten::_foreach_sin_(Tensor(a!)[] self) -> ()
aten::_foreach_sin(Tensor[] self) -> Tensor[]
aten::_foreach_sin.out(Tensor[] self, *, Tensor(a!)[] out) -> ()
aten::_foreach_tanh_(Tensor(a!)[] self) -> ()
aten::_foreach_tanh(Tensor[] self) -> Tensor[]
aten::_foreach_tanh.out(Tensor[] self, *, Tensor(a!)[] out) -> ()
aten::_foreach_tan_(Tensor(a!)[] self) -> ()
aten::_foreach_tan(Tensor[] self) -> Tensor[]
aten::_foreach_tan.out(Tensor[] self, *, Tensor(a!)[] out) -> ()
aten::_foreach_neg_(Tensor(a!)[] self) -> ()
aten::_foreach_neg(Tensor[] self) -> Tensor[]
aten::_foreach_neg.out(Tensor[] self, *, Tensor(a!)[] out) -> ()
aten::_foreach_log2_(Tensor(a!)[] self) -> ()
aten::_foreach_log2(Tensor[] self) -> Tensor[]
aten::_foreach_log2.out(Tensor[] self, *, Tensor(a!)[] out) -> ()
aten::_foreach_log1p_(Tensor(a!)[] self) -> ()
aten::_foreach_log1p(Tensor[] self) -> Tensor[]
aten::_foreach_log1p.out(Tensor[] self, *, Tensor(a!)[] out) -> ()
aten::_foreach_log10_(Tensor(a!)[] self) -> ()
aten::_foreach_log10(Tensor[] self) -> Tensor[]
aten::_foreach_log10.out(Tensor[] self, *, Tensor(a!)[] out) -> ()
aten::_foreach_log_(Tensor(a!)[] self) -> ()
aten::_foreach_log(Tensor[] self) -> Tensor[]
aten::_foreach_log.out(Tensor[] self, *, Tensor(a!)[] out) -> ()
aten::_foreach_floor_(Tensor(a!)[] self) -> ()
aten::_foreach_floor(Tensor[] self) -> Tensor[]
aten::_foreach_floor.out(Tensor[] self, *, Tensor(a!)[] out) -> ()
aten::_foreach_expm1_(Tensor(a!)[] self) -> ()
aten::_foreach_expm1(Tensor[] self) -> Tensor[]
aten::_foreach_expm1.out(Tensor[] self, *, Tensor(a!)[] out) -> ()
aten::_foreach_erfc_(Tensor(a!)[] self) -> ()
aten::_foreach_erfc(Tensor[] self) -> Tensor[]
aten::_foreach_erfc.out(Tensor[] self, *, Tensor(a!)[] out) -> ()
aten::_foreach_erf_(Tensor(a!)[] self) -> ()
aten::_foreach_erf(Tensor[] self) -> Tensor[]
aten::_foreach_erf.out(Tensor[] self, *, Tensor(a!)[] out) -> ()
aten::_foreach_cosh_(Tensor(a!)[] self) -> ()
aten::_foreach_cosh(Tensor[] self) -> Tensor[]
aten::_foreach_cosh.out(Tensor[] self, *, Tensor(a!)[] out) -> ()
aten::_foreach_cos_(Tensor(a!)[] self) -> ()
aten::_foreach_cos(Tensor[] self) -> Tensor[]
aten::_foreach_cos.out(Tensor[] self, *, Tensor(a!)[] out) -> ()
aten::_foreach_ceil_(Tensor(a!)[] self) -> ()
aten::_foreach_ceil(Tensor[] self) -> Tensor[]
aten::_foreach_ceil.out(Tensor[] self, *, Tensor(a!)[] out) -> ()
aten::_foreach_atan_(Tensor(a!)[] self) -> ()
aten::_foreach_atan(Tensor[] self) -> Tensor[]
aten::_foreach_atan.out(Tensor[] self, *, Tensor(a!)[] out) -> ()
static_runtime::clamp_nan_to_num(Tensor input, Scalar? min, Scalar? max, float? nan, float? posinf, float? posinf) -> Tensor
aten::_foreach_asin_(Tensor(a!)[] self) -> ()
static_runtime::embedding_bag(Tensor weight, Tensor indices, Tensor offsets, bool scale_grad_by_freq=False, int mode=0, bool sparse=False, Tensor? per_sample_weights=None, bool include_last_offset=False) -> (Tensor, Tensor, Tensor)
static_runtime::embedding_bag.padding_idx(Tensor weight, Tensor indices, Tensor offsets, bool scale_grad_by_freq, int mode, bool sparse, Tensor? per_sample_weights, bool include_last_offset, int? padding_idx) -> (Tensor, Tensor, Tensor)
aten::_foreach_asin(Tensor[] self) -> Tensor[]
aten::_foreach_asin.out(Tensor[] self, *, Tensor(a!)[] out) -> ()
static_runtime::expand_dims_copy(Tensor input, int[] dims) -> Tensor
aten::_foreach_acos_(Tensor(a!)[] self) -> ()
static_runtime::flatten_copy.using_ints(Tensor self, int start_dim=0, int end_dim=-1) -> Tensor
aten::_foreach_acos(Tensor[] self) -> Tensor[]
aten::_foreach_acos.out(Tensor[] self, *, Tensor(a!)[] out) -> ()
static_runtime::reshape_copy(Tensor self, int[] shape) -> Tensor
aten::_foreach_abs_(Tensor(a!)[] self) -> ()
static_runtime::permute_copy(Tensor self, int[] dims) -> Tensor
aten::_foreach_abs(Tensor[] self) -> Tensor[]
aten::_foreach_abs.out(Tensor[] self, *, Tensor(a!)[] out) -> ()
aten::_foreach_sqrt_(Tensor(a!)[] self) -> ()
aten::_foreach_sqrt(Tensor[] self) -> Tensor[]
aten::_foreach_sqrt.out(Tensor[] self, *, Tensor(a!)[] out) -> ()
aten::_foreach_zero_(Tensor(a!)[] self) -> ()
aten::_foreach_exp_(Tensor(a!)[] self) -> ()
aten::_foreach_exp(Tensor[] self) -> Tensor[]
aten::_foreach_exp.out(Tensor[] self, *, Tensor(a!)[] out) -> ()
aten::_foreach_minimum_.Scalar(Tensor(a!)[] self, Scalar scalar) -> ()
aten::_foreach_minimum_.List(Tensor(a!)[] self, Tensor[] other) -> ()
aten::_foreach_minimum_.ScalarList(Tensor(a!)[] self, Scalar[] scalars) -> ()
aten::_foreach_minimum.Scalar(Tensor[] self, Scalar scalar) -> Tensor[]
aten::_foreach_minimum.List(Tensor[] self, Tensor[] other) -> Tensor[]
aten::_foreach_minimum.ScalarList(Tensor[] self, Scalar[] scalars) -> Tensor[]
aten::_foreach_minimum.Scalar_out(Tensor[] self, Scalar scalar, *, Tensor(a!)[] out) -> ()
aten::_foreach_minimum.List_out(Tensor[] self, Tensor[] other, *, Tensor(a!)[] out) -> ()
aten::_foreach_minimum.ScalarList_out(Tensor[] self, Scalar[] scalars, *, Tensor(a!)[] out) -> ()
aten::_foreach_maximum_.Scalar(Tensor(a!)[] self, Scalar scalar) -> ()
aten::_foreach_maximum_.List(Tensor(a!)[] self, Tensor[] other) -> ()
aten::_foreach_maximum_.ScalarList(Tensor(a!)[] self, Scalar[] scalars) -> ()
aten::_foreach_maximum.Scalar(Tensor[] self, Scalar scalar) -> Tensor[]
aten::_foreach_maximum.List(Tensor[] self, Tensor[] other) -> Tensor[]
aten::_foreach_maximum.ScalarList(Tensor[] self, Scalar[] scalars) -> Tensor[]
aten::_foreach_maximum.Scalar_out(Tensor[] self, Scalar scalar, *, Tensor(a!)[] out) -> ()
aten::_foreach_maximum.List_out(Tensor[] self, Tensor[] other, *, Tensor(a!)[] out) -> ()
aten::_foreach_maximum.ScalarList_out(Tensor[] self, Scalar[] scalars, *, Tensor(a!)[] out) -> ()
aten::_foreach_clamp_max_.Scalar(Tensor(a!)[] self, Scalar scalar) -> ()
aten::_foreach_clamp_max_.List(Tensor(a!)[] self, Tensor[] other) -> ()
aten::_foreach_clamp_max_.ScalarList(Tensor(a!)[] self, Scalar[] scalars) -> ()
aten::_foreach_clamp_max.Scalar(Tensor[] self, Scalar scalar) -> Tensor[]
aten::_foreach_clamp_max.List(Tensor[] self, Tensor[] other) -> Tensor[]
aten::_foreach_clamp_max.ScalarList(Tensor[] self, Scalar[] scalars) -> Tensor[]
aten::_foreach_clamp_max.Scalar_out(Tensor[] self, Scalar scalar, *, Tensor(a!)[] out) -> ()
aten::_foreach_clamp_max.List_out(Tensor[] self, Tensor[] other, *, Tensor(a!)[] out) -> ()
aten::_foreach_clamp_max.ScalarList_out(Tensor[] self, Scalar[] scalars, *, Tensor(a!)[] out) -> ()
aten::_foreach_clamp_min_.Scalar(Tensor(a!)[] self, Scalar scalar) -> ()
aten::_foreach_clamp_min_.List(Tensor(a!)[] self, Tensor[] other) -> ()
aten::_foreach_clamp_min_.ScalarList(Tensor(a!)[] self, Scalar[] scalars) -> ()
aten::_foreach_clamp_min.Scalar(Tensor[] self, Scalar scalar) -> Tensor[]
aten::_foreach_clamp_min.List(Tensor[] self, Tensor[] other) -> Tensor[]
aten::_foreach_clamp_min.ScalarList(Tensor[] self, Scalar[] scalars) -> Tensor[]
aten::_foreach_clamp_min.Scalar_out(Tensor[] self, Scalar scalar, *, Tensor(a!)[] out) -> ()
aten::_foreach_clamp_min.List_out(Tensor[] self, Tensor[] other, *, Tensor(a!)[] out) -> ()
aten::_foreach_clamp_min.ScalarList_out(Tensor[] self, Scalar[] scalars, *, Tensor(a!)[] out) -> ()
aten::_foreach_div_.Scalar(Tensor(a!)[] self, Scalar scalar) -> ()
aten::_foreach_div_.List(Tensor(a!)[] self, Tensor[] other) -> ()
aten::_foreach_div_.ScalarList(Tensor(a!)[] self, Scalar[] scalars) -> ()
aten::_foreach_div.Scalar(Tensor[] self, Scalar scalar) -> Tensor[]
aten::_foreach_div.List(Tensor[] self, Tensor[] other) -> Tensor[]
aten::_foreach_div.ScalarList(Tensor[] self, Scalar[] scalars) -> Tensor[]
aten::_foreach_div.Scalar_out(Tensor[] self, Scalar scalar, *, Tensor(a!)[] out) -> ()
aten::_foreach_div.List_out(Tensor[] self, Tensor[] other, *, Tensor(a!)[] out) -> ()
aten::_foreach_div.ScalarList_out(Tensor[] self, Scalar[] scalars, *, Tensor(a!)[] out) -> ()
aten::_foreach_mul_.Scalar(Tensor(a!)[] self, Scalar scalar) -> ()
aten::_foreach_mul_.List(Tensor(a!)[] self, Tensor[] other) -> ()
aten::_foreach_mul_.ScalarList(Tensor(a!)[] self, Scalar[] scalars) -> ()
aten::_foreach_mul.Scalar(Tensor[] self, Scalar scalar) -> Tensor[]
aten::_foreach_mul.List(Tensor[] self, Tensor[] other) -> Tensor[]
aten::_foreach_mul.ScalarList(Tensor[] self, Scalar[] scalars) -> Tensor[]
aten::_foreach_mul.Scalar_out(Tensor[] self, Scalar scalar, *, Tensor(a!)[] out) -> ()
aten::_foreach_mul.List_out(Tensor[] self, Tensor[] other, *, Tensor(a!)[] out) -> ()
aten::_foreach_mul.ScalarList_out(Tensor[] self, Scalar[] scalars, *, Tensor(a!)[] out) -> ()
aten::_foreach_sub_.Scalar(Tensor(a!)[] self, Scalar scalar) -> ()
aten::_foreach_sub_.List(Tensor(a!)[] self, Tensor[] other, *, Scalar alpha=1) -> ()
aten::_foreach_sub_.ScalarList(Tensor(a!)[] self, Scalar[] scalars) -> ()
aten::_foreach_sub.Scalar(Tensor[] self, Scalar scalar) -> Tensor[]
aten::_foreach_sub.List(Tensor[] self, Tensor[] other, *, Scalar alpha=1) -> Tensor[]
aten::_foreach_sub.ScalarList(Tensor[] self, Scalar[] scalars) -> Tensor[]
aten::_foreach_sub.Scalar_out(Tensor[] self, Scalar scalar, *, Tensor(a!)[] out) -> ()
aten::_foreach_sub.List_out(Tensor[] self, Tensor[] other, *, Scalar alpha=1, Tensor(a!)[] out) -> ()
aten::_foreach_sub.ScalarList_out(Tensor[] self, Scalar[] scalars, *, Tensor(a!)[] out) -> ()
static_runtime::to_copy.prim_dtype(Tensor self, int? dtype=None, bool non_blocking=False, bool copy=False) -> Tensor
static_runtime::to_copy.dtype(Tensor self, ScalarType dtype, bool non_blocking=False, bool copy=False, MemoryFormat? memory_format=None) -> Tensor
static_runtime::to_copy.other(Tensor self, Tensor other, bool non_blocking=False, bool copy=False, MemoryFormat? memory_format=None) -> Tensor
aten::_foreach_add_.Scalar(Tensor(a!)[] self, Scalar scalar) -> ()
aten::_foreach_add_.List(Tensor(a!)[] self, Tensor[] other, *, Scalar alpha=1) -> ()
aten::_foreach_add_.ScalarList(Tensor(a!)[] self, Scalar[] scalars) -> ()
static_runtime::to_maybe_copy_out.prim_dtype(Tensor self, int? dtype=None, bool non_blocking=False, bool copy=False) -> (Tensor, bool)
static_runtime::to_maybe_copy_out.dtype(Tensor self, ScalarType dtype, bool non_blocking=False, bool copy=False, MemoryFormat? memory_format=None) -> (Tensor, bool)
static_runtime::to_maybe_copy_out.other(Tensor self, Tensor other, bool non_blocking=False, bool copy=False, MemoryFormat? memory_format=None) -> (Tensor, bool)
aten::_foreach_add.Scalar(Tensor[] self, Scalar scalar) -> Tensor[]
aten::_foreach_add.List(Tensor[] self, Tensor[] other, *, Scalar alpha=1) -> Tensor[]
aten::_foreach_add.ScalarList(Tensor[] self, Scalar[] scalars) -> Tensor[]
aten::_foreach_add.Scalar_out(Tensor[] self, Scalar scalar, *, Tensor(a!)[] out) -> ()
aten::_foreach_add.List_out(Tensor[] self, Tensor[] other, *, Scalar alpha=1, Tensor(a!)[] out) -> ()
aten::_foreach_add.ScalarList_out(Tensor[] self, Scalar[] scalars, *, Tensor(a!)[] out) -> ()
aten::unfold_backward(Tensor grad_in, SymInt[] input_sizes, int dim, int size, int step) -> Tensor
aten::unfold_backward.out(Tensor grad_in, SymInt[] input_sizes, int dim, int size, int step, *, Tensor(a!) out) -> Tensor(a!)
aten::renorm_(Tensor(a!) self, Scalar p, int dim, Scalar maxnorm) -> Tensor(a!)
aten::remainder_.Tensor(Tensor(a!) self, Tensor other) -> Tensor(a!)
aten::remainder_.Scalar(Tensor(a!) self, Scalar other) -> Tensor(a!)
aten::fmod_.Tensor(Tensor(a!) self, Tensor other) -> Tensor(a!)
aten::fmod_.Scalar(Tensor(a!) self, Scalar other) -> Tensor(a!)
aten::_histogramdd_from_bin_tensors(Tensor self, Tensor[] bins, *, Tensor? weight=None, bool density=False) -> Tensor
aten::_histogramdd_from_bin_tensors.out(Tensor self, Tensor[] bins, *, Tensor? weight=None, bool density=False, Tensor(a!) out) -> Tensor(a!)
aten::_histogramdd_from_bin_cts(Tensor self, int[] bins, *, float[]? range=None, Tensor? weight=None, bool density=False) -> Tensor
aten::_histogramdd_from_bin_cts.out(Tensor self, int[] bins, *, float[]? range=None, Tensor? weight=None, bool density=False, Tensor(a!) out) -> Tensor(a!)
aten::_histogramdd_bin_edges(Tensor self, int[] bins, *, float[]? range=None, Tensor? weight=None, bool density=False) -> Tensor[]
aten::_histogramdd_bin_edges.out(Tensor self, int[] bins, *, float[]? range=None, Tensor? weight=None, bool density=False, Tensor(a!)[] out) -> ()
aten::histogram.bins_tensor(Tensor self, Tensor bins, *, Tensor? weight=None, bool density=False) -> (Tensor hist, Tensor bin_edges)
aten::histogram.bins_tensor_out(Tensor self, Tensor bins, *, Tensor? weight=None, bool density=False, Tensor(a!) hist, Tensor(b!) bin_edges) -> (Tensor(a!) hist, Tensor(b!) bin_edges)
aten::histogram.bin_ct(Tensor self, int bins=100, *, float[]? range=None, Tensor? weight=None, bool density=False) -> (Tensor hist, Tensor bin_edges)
aten::histogram.bin_ct_out(Tensor self, int bins=100, *, float[]? range=None, Tensor? weight=None, bool density=False, Tensor(a!) hist, Tensor(b!) bin_edges) -> (Tensor(a!) hist, Tensor(b!) bin_edges)
aten::histc(Tensor self, int bins=100, Scalar min=0, Scalar max=0) -> Tensor
aten::histc.out(Tensor self, int bins=100, Scalar min=0, Scalar max=0, *, Tensor(a!) out) -> Tensor(a!)
aten::lu_unpack(Tensor LU_data, Tensor LU_pivots, bool unpack_data=True, bool unpack_pivots=True) -> (Tensor P, Tensor L, Tensor U)
aten::lu_unpack.out(Tensor LU_data, Tensor LU_pivots, bool unpack_data=True, bool unpack_pivots=True, *, Tensor(a!) P, Tensor(b!) L, Tensor(c!) U) -> (Tensor(a!) P, Tensor(b!) L, Tensor(c!) U)
aten::take(Tensor self, Tensor index) -> Tensor
aten::take.out(Tensor self, Tensor index, *, Tensor(a!) out) -> Tensor(a!)
aten::lt_.Scalar(Tensor(a!) self, Scalar other) -> Tensor(a!)
aten::lt_.Tensor(Tensor(a!) self, Tensor other) -> Tensor(a!)
aten::gt_.Scalar(Tensor(a!) self, Scalar other) -> Tensor(a!)
aten::gt_.Tensor(Tensor(a!) self, Tensor other) -> Tensor(a!)
aten::le_.Scalar(Tensor(a!) self, Scalar other) -> Tensor(a!)
aten::le_.Tensor(Tensor(a!) self, Tensor other) -> Tensor(a!)
aten::ge_.Scalar(Tensor(a!) self, Scalar other) -> Tensor(a!)
aten::ge_.Tensor(Tensor(a!) self, Tensor other) -> Tensor(a!)
aten::ne_.Scalar(Tensor(a!) self, Scalar other) -> Tensor(a!)
aten::ne_.Tensor(Tensor(a!) self, Tensor other) -> Tensor(a!)
aten::addbmm_(Tensor(a!) self, Tensor batch1, Tensor batch2, *, Scalar beta=1, Scalar alpha=1) -> Tensor(a!)
aten::lerp_.Scalar(Tensor(a!) self, Tensor end, Scalar weight) -> Tensor(a!)
aten::lerp_.Tensor(Tensor(a!) self, Tensor end, Tensor weight) -> Tensor(a!)
aten::triu_(Tensor(a!) self, int diagonal=0) -> Tensor(a!)
aten::tril_(Tensor(a!) self, int diagonal=0) -> Tensor(a!)
aten::eq_.Scalar(Tensor(a!) self, Scalar other) -> Tensor(a!)
aten::eq_.Tensor(Tensor(a!) self, Tensor other) -> Tensor(a!)
aten::scatter_reduce_.two(Tensor(a!) self, int dim, Tensor index, Tensor src, str reduce, *, bool include_self=True) -> Tensor(a!)
aten::scatter_reduce.two(Tensor self, int dim, Tensor index, Tensor src, str reduce, *, bool include_self=True) -> Tensor
aten::scatter_reduce.two_out(Tensor self, int dim, Tensor index, Tensor src, str reduce, *, bool include_self=True, Tensor(a!) out) -> Tensor(a!)
aten::scatter_add_(Tensor(a!) self, int dim, Tensor index, Tensor src) -> Tensor(a!)
aten::scatter_.src(Tensor(a!) self, int dim, Tensor index, Tensor src) -> Tensor(a!)
aten::scatter_.value(Tensor(a!) self, int dim, Tensor index, Scalar value) -> Tensor(a!)
aten::scatter_.reduce(Tensor(a!) self, int dim, Tensor index, Tensor src, *, str reduce) -> Tensor(a!)
aten::scatter_.value_reduce(Tensor(a!) self, int dim, Tensor index, Scalar value, *, str reduce) -> Tensor(a!)
aten::index_reduce_(Tensor(a!) self, int dim, Tensor index, Tensor source, str reduce, *, bool include_self=True) -> Tensor(a!)
aten::index_reduce(Tensor self, int dim, Tensor index, Tensor source, str reduce, *, bool include_self=True) -> Tensor
aten::index_reduce.out(Tensor self, int dim, Tensor index, Tensor source, str reduce, *, bool include_self=True, Tensor(a!) out) -> Tensor(a!)
aten::index_add_(Tensor(a!) self, int dim, Tensor index, Tensor source, *, Scalar alpha=1) -> Tensor(a!)
aten::put_(Tensor(a!) self, Tensor index, Tensor source, bool accumulate=False) -> Tensor(a!)
c10d::alltoall_(Tensor[] output_tensors, Tensor[] input_tensors, __torch__.torch.classes.c10d.ProcessGroup process_group, int timeout) -> (Tensor[], __torch__.torch.classes.c10d.Work)
aten::_masked_softmax_backward(Tensor grad_output, Tensor output, Tensor mask, int? dim=None) -> Tensor
aten::_masked_softmax_backward.out(Tensor grad_output, Tensor output, Tensor mask, int? dim=None, *, Tensor(a!) out) -> Tensor(a!)
c10d::scatter_(Tensor[] output_tensors, Tensor[][] input_tensors, __torch__.torch.classes.c10d.ProcessGroup process_group, int root_rank, int timeout) -> (Tensor[], __torch__.torch.classes.c10d.Work)
aten::_masked_softmax(Tensor self, Tensor mask, int? dim=None, int? mask_type=None) -> Tensor
aten::_masked_softmax.out(Tensor self, Tensor mask, int? dim=None, int? mask_type=None, *, Tensor(a!) out) -> Tensor(a!)
aten::masked_scatter_(Tensor(a!) self, Tensor mask, Tensor source) -> Tensor(a!)
aten::is_set_to(Tensor self, Tensor tensor) -> bool
aten::_fused_moving_avg_obs_fq_helper(Tensor self, Tensor observer_on, Tensor fake_quant_on, Tensor(a!) running_min, Tensor(b!) running_max, Tensor(c!) scale, Tensor(d!) zero_point, float averaging_const, int quant_min, int quant_max, int ch_axis, bool per_row_fake_quant=False, bool symmetric_quant=False) -> (Tensor output, Tensor mask)
aten::_fused_moving_avg_obs_fq_helper.out(Tensor self, Tensor observer_on, Tensor fake_quant_on, Tensor(a!) running_min, Tensor(b!) running_max, Tensor(c!) scale, Tensor(d!) zero_point, float averaging_const, int quant_min, int quant_max, int ch_axis, bool per_row_fake_quant=False, bool symmetric_quant=False, *, Tensor(e!) out0, Tensor(f!) out1) -> (Tensor(e!), Tensor(f!))
aten::fake_quantize_per_channel_affine_cachemask(Tensor self, Tensor scale, Tensor zero_point, int axis, int quant_min, int quant_max) -> (Tensor output, Tensor mask)
aten::fake_quantize_per_channel_affine_cachemask.out(Tensor self, Tensor scale, Tensor zero_point, int axis, int quant_min, int quant_max, *, Tensor(a!) out0, Tensor(b!) out1) -> (Tensor(a!), Tensor(b!))
aten::fake_quantize_per_tensor_affine_cachemask(Tensor self, float scale, int zero_point, int quant_min, int quant_max) -> (Tensor output, Tensor mask)
aten::fake_quantize_per_tensor_affine_cachemask.out(Tensor self, float scale, int zero_point, int quant_min, int quant_max, *, Tensor(a!) out0, Tensor(b!) out1) -> (Tensor(a!), Tensor(b!))
c10d::_reduce_scatter_base_(Tensor output_tensor, Tensor input_tensor, __torch__.torch.classes.c10d.ProcessGroup process_group, __torch__.torch.classes.c10d.ReduceOp reduce_op, int timeout) -> (Tensor, __torch__.torch.classes.c10d.Work)
aten::_make_per_channel_quantized_tensor(Tensor self, Tensor scale, Tensor zero_point, int axis) -> Tensor
aten::_make_per_channel_quantized_tensor.out(Tensor self, Tensor scale, Tensor zero_point, int axis, *, Tensor(a!) out) -> Tensor(a!)
c10d::reduce_(Tensor[] tensors, __torch__.torch.classes.c10d.ProcessGroup process_group, __torch__.torch.classes.c10d.ReduceOp reduce_op, int root_rank, int root_tensor, int timeout) -> __torch__.torch.classes.c10d.Work
aten::_make_per_tensor_quantized_tensor(Tensor self, float scale, int zero_point) -> Tensor
aten::_make_per_tensor_quantized_tensor.out(Tensor self, float scale, int zero_point, *, Tensor(a!) out) -> Tensor(a!)
aten::dequantize.self(Tensor self) -> Tensor
aten::dequantize.self_out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::dequantize.tensors_out(Tensor[] tensors, *, Tensor(a!)[] out) -> ()
aten::dequantize.tensors(Tensor[] tensors) -> Tensor[]
aten::quantize_per_channel(Tensor self, Tensor scales, Tensor zero_points, int axis, ScalarType dtype) -> Tensor
aten::quantize_per_channel.out(Tensor self, Tensor scales, Tensor zero_points, int axis, ScalarType dtype, *, Tensor(a!) out) -> Tensor(a!)
aten::quantize_per_tensor(Tensor self, float scale, int zero_point, ScalarType dtype) -> Tensor
aten::quantize_per_tensor.tensor_qparams(Tensor self, Tensor scale, Tensor zero_point, ScalarType dtype) -> Tensor
aten::quantize_per_tensor.tensors(Tensor[] tensors, Tensor scales, Tensor zero_points, ScalarType dtype) -> Tensor[]
aten::quantize_per_tensor.out(Tensor self, float scale, int zero_point, ScalarType dtype, *, Tensor(a!) out) -> Tensor(a!)
aten::quantize_per_tensor.tensor_qparams_out(Tensor self, Tensor scale, Tensor zero_point, ScalarType dtype, *, Tensor(a!) out) -> Tensor(a!)
aten::quantize_per_tensor.tensors_out(Tensor[] tensors, Tensor scales, Tensor zero_points, ScalarType dtype, *, Tensor(a!)[] out) -> ()
aten::quantize_per_tensor_dynamic(Tensor self, ScalarType dtype, bool reduce_range) -> Tensor
aten::quantize_per_tensor_dynamic.out(Tensor self, ScalarType dtype, bool reduce_range, *, Tensor(a!) out) -> Tensor(a!)
aten::to_mkldnn(Tensor self, ScalarType? dtype=None) -> Tensor
aten::to_mkldnn.out(Tensor self, ScalarType? dtype=None, *, Tensor(a!) out) -> Tensor(a!)
aten::to_sparse_bsc(Tensor self, int[2] blocksize, int? dense_dim=None) -> Tensor
aten::to_sparse_bsc.out(Tensor self, int[2] blocksize, int? dense_dim=None, *, Tensor(a!) out) -> Tensor(a!)
aten::to_sparse_bsr(Tensor self, int[2] blocksize, int? dense_dim=None) -> Tensor
aten::to_sparse_bsr.out(Tensor self, int[2] blocksize, int? dense_dim=None, *, Tensor(a!) out) -> Tensor(a!)
aten::to_sparse_csc(Tensor self, int? dense_dim=None) -> Tensor
aten::to_sparse_csc.out(Tensor self, int? dense_dim=None, *, Tensor(a!) out) -> Tensor(a!)
aten::to_sparse_csr(Tensor self, int? dense_dim=None) -> Tensor
aten::to_sparse_csr.out(Tensor self, int? dense_dim=None, *, Tensor(a!) out) -> Tensor(a!)
aten::to_sparse.sparse_dim(Tensor self, int sparse_dim) -> Tensor
aten::to_sparse(Tensor self, *, Layout? layout=None, int[2]? blocksize=None, int? dense_dim=None) -> Tensor
aten::to_sparse.sparse_dim_out(Tensor self, int sparse_dim, *, Tensor(a!) out) -> Tensor(a!)
aten::to_sparse.out(Tensor self, *, Layout? layout=None, int[2]? blocksize=None, int? dense_dim=None, Tensor(a!) out) -> Tensor(a!)
aten::dense_dim(Tensor self) -> int
aten::sparse_dim(Tensor self) -> int
aten::heaviside_(Tensor(a!) self, Tensor values) -> Tensor(a!)
aten::_spdiags(Tensor diagonals, Tensor offsets, int[] shape, Layout? layout=None) -> Tensor
aten::_spdiags.out(Tensor diagonals, Tensor offsets, int[] shape, Layout? layout=None, *, Tensor(a!) out) -> Tensor(a!)
aten::_standard_gamma_grad(Tensor self, Tensor output) -> Tensor
aten::_standard_gamma_grad.out(Tensor self, Tensor output, *, Tensor(a!) out) -> Tensor(a!)
aten::_weight_norm_interface_backward(Tensor grad_w, Tensor saved_v, Tensor saved_g, Tensor saved_norms, int dim) -> (Tensor, Tensor)
aten::_weight_norm_interface_backward.out(Tensor grad_w, Tensor saved_v, Tensor saved_g, Tensor saved_norms, int dim, *, Tensor(a!) out0, Tensor(b!) out1) -> (Tensor(a!), Tensor(b!))
aten::_weight_norm_interface(Tensor v, Tensor g, int dim=0) -> (Tensor, Tensor)
aten::_weight_norm_interface.out(Tensor v, Tensor g, int dim=0, *, Tensor(a!) out0, Tensor(b!) out1) -> (Tensor(a!), Tensor(b!))
aten::_unique(Tensor self, bool sorted=True, bool return_inverse=False) -> (Tensor, Tensor)
aten::_unique.out(Tensor self, bool sorted=True, bool return_inverse=False, *, Tensor(a!) out0, Tensor(b!) out1) -> (Tensor(a!), Tensor(b!))
aten::_nested_view_from_buffer(Tensor(a) self, Tensor nested_size, Tensor nested_strides, int[] offsets) -> Tensor(a)
aten::_nested_from_padded(Tensor padded, Tensor cpu_nested_shape_example, bool fuse_transform_0213=False) -> Tensor
aten::_nested_from_padded.out(Tensor padded, Tensor cpu_nested_shape_example, bool fuse_transform_0213=False, *, Tensor(a!) out) -> Tensor(a!)
aten::_nested_tensor_from_mask_left_aligned(Tensor t, Tensor mask) -> bool
aten::_nested_tensor_from_mask(Tensor t, Tensor mask, bool mask_check=True) -> Tensor
aten::_nested_tensor_from_mask.out(Tensor t, Tensor mask, bool mask_check=True, *, Tensor(a!) out) -> Tensor(a!)
aten::_transform_bias_rescale_qkv(Tensor qkv, Tensor qkv_bias, int num_heads) -> (Tensor, Tensor, Tensor)
aten::_transform_bias_rescale_qkv.out(Tensor qkv, Tensor qkv_bias, int num_heads, *, Tensor(a!) out0, Tensor(b!) out1, Tensor(c!) out2) -> (Tensor(a!), Tensor(b!), Tensor(c!))
aten::_stack(Tensor[] tensors, int dim=0) -> Tensor
aten::_stack.out(Tensor[] tensors, int dim=0, *, Tensor(a!) out) -> Tensor(a!)
aten::sspaddmm.out(Tensor self, Tensor mat1, Tensor mat2, *, Scalar beta=1, Scalar alpha=1, Tensor(a!) out) -> Tensor(a!)
aten::sspaddmm(Tensor self, Tensor mat1, Tensor mat2, *, Scalar beta=1, Scalar alpha=1) -> Tensor
aten::mish_backward(Tensor grad_output, Tensor self) -> Tensor
aten::gelu_(Tensor(a!) self, *, str approximate="none") -> Tensor(a!)
aten::native_channel_shuffle(Tensor self, int groups) -> Tensor
aten::channel_shuffle(Tensor self, int groups) -> Tensor
aten::channel_shuffle.out(Tensor self, int groups, *, Tensor(a!) out) -> Tensor(a!)
aten::_pdist_backward(Tensor grad, Tensor self, float p, Tensor pdist) -> Tensor
aten::_pdist_backward.out(Tensor grad, Tensor self, float p, Tensor pdist, *, Tensor(a!) out) -> Tensor(a!)
aten::_pdist_forward(Tensor self, float p=2.) -> Tensor
aten::_pdist_forward.out(Tensor self, float p=2., *, Tensor(a!) out) -> Tensor(a!)
aten::batch_norm_update_stats(Tensor input, Tensor? running_mean, Tensor? running_var, float momentum) -> (Tensor, Tensor)
aten::batch_norm_update_stats.out(Tensor input, Tensor? running_mean, Tensor? running_var, float momentum, *, Tensor(a!) out0, Tensor(b!) out1) -> (Tensor(a!), Tensor(b!))
aten::mkldnn_rnn_layer_backward(Tensor input, Tensor weight1, Tensor weight2, Tensor weight3, Tensor weight4, Tensor hx_, Tensor cx_tmp, Tensor output, Tensor hy_, Tensor cy_, Tensor? grad_output, Tensor? grad_hy, Tensor? grad_cy, bool reverse, int mode, int hidden_size, int num_layers, bool has_biases, bool train, bool bidirectional, int[] batch_sizes, bool batch_first, Tensor workspace) -> (Tensor, Tensor, Tensor, Tensor, Tensor, Tensor, Tensor)
aten::mkldnn_rnn_layer_backward.out(Tensor input, Tensor weight1, Tensor weight2, Tensor weight3, Tensor weight4, Tensor hx_, Tensor cx_tmp, Tensor output, Tensor hy_, Tensor cy_, Tensor? grad_output, Tensor? grad_hy, Tensor? grad_cy, bool reverse, int mode, int hidden_size, int num_layers, bool has_biases, bool train, bool bidirectional, int[] batch_sizes, bool batch_first, Tensor workspace, *, Tensor(a!) out0, Tensor(b!) out1, Tensor(c!) out2, Tensor(d!) out3, Tensor(e!) out4, Tensor(f!) out5, Tensor(g!) out6) -> (Tensor(a!), Tensor(b!), Tensor(c!), Tensor(d!), Tensor(e!), Tensor(f!), Tensor(g!))
c10d::allreduce_coalesced_(Tensor[] tensors, __torch__.torch.classes.c10d.ProcessGroup process_group, __torch__.torch.classes.c10d.ReduceOp reduce_op, int timeout) -> __torch__.torch.classes.c10d.Work
aten::_logcumsumexp(Tensor self, int dim) -> Tensor
aten::_logcumsumexp.out(Tensor self, int dim, *, Tensor(a!) out) -> Tensor(a!)
aten::xlogy_.Tensor(Tensor(a!) self, Tensor other) -> Tensor(a!)
aten::xlogy_.Scalar_Other(Tensor(a!) self, Scalar other) -> Tensor(a!)
aten::isin.Tensor_Tensor(Tensor elements, Tensor test_elements, *, bool assume_unique=False, bool invert=False) -> Tensor
aten::isin.Tensor_Tensor_out(Tensor elements, Tensor test_elements, *, bool assume_unique=False, bool invert=False, Tensor(a!) out) -> Tensor(a!)
aten::isin.Tensor_Scalar(Tensor elements, Scalar test_element, *, bool assume_unique=False, bool invert=False) -> Tensor
aten::isin.Tensor_Scalar_out(Tensor elements, Scalar test_element, *, bool assume_unique=False, bool invert=False, Tensor(a!) out) -> Tensor(a!)
aten::isin.Scalar_Tensor(Scalar element, Tensor test_elements, *, bool assume_unique=False, bool invert=False) -> Tensor
aten::isin.Scalar_Tensor_out(Scalar element, Tensor test_elements, *, bool assume_unique=False, bool invert=False, Tensor(a!) out) -> Tensor(a!)
aten::index_copy_(Tensor(a!) self, int dim, Tensor index, Tensor source) -> Tensor(a!)
aten::index_copy_.dimname(Tensor(a!) self, str dim, Tensor index, Tensor source) -> Tensor(a!)
aten::_validate_compressed_sparse_indices(bool is_crow, Tensor compressed_idx, Tensor plain_idx, int cdim, int dim, int nnz) -> ()
aten::lcm_(Tensor(a!) self, Tensor other) -> Tensor(a!)
aten::gcd_(Tensor(a!) self, Tensor other) -> Tensor(a!)
aten::_embedding_bag_per_sample_weights_backward(Tensor grad, Tensor weight, Tensor indices, Tensor offsets, Tensor offset2bag, int mode, int padding_idx=-1) -> Tensor
aten::_embedding_bag_per_sample_weights_backward.out(Tensor grad, Tensor weight, Tensor indices, Tensor offsets, Tensor offset2bag, int mode, int padding_idx=-1, *, Tensor(a!) out) -> Tensor(a!)
aten::_embedding_bag(Tensor weight, Tensor indices, Tensor offsets, bool scale_grad_by_freq=False, int mode=0, bool sparse=False, Tensor? per_sample_weights=None, bool include_last_offset=False, int padding_idx=-1) -> (Tensor, Tensor, Tensor, Tensor)
aten::_embedding_bag.out(Tensor weight, Tensor indices, Tensor offsets, bool scale_grad_by_freq=False, int mode=0, bool sparse=False, Tensor? per_sample_weights=None, bool include_last_offset=False, int padding_idx=-1, *, Tensor(a!) out0, Tensor(b!) out1, Tensor(c!) out2, Tensor(d!) out3) -> (Tensor(a!), Tensor(b!), Tensor(c!), Tensor(d!))
aten::embedding_renorm_(Tensor(a!) self, Tensor indices, float max_norm, float norm_type) -> Tensor(a!)
aten::cumsum_(Tensor(a!) self, int dim, *, ScalarType? dtype=None) -> Tensor(a!)
aten::cumsum_.dimname(Tensor(a!) self, str dim, *, ScalarType? dtype=None) -> Tensor(a!)
aten::cumprod_(Tensor(a!) self, int dim, *, ScalarType? dtype=None) -> Tensor(a!)
aten::cumprod_.dimname(Tensor(a!) self, str dim, *, ScalarType? dtype=None) -> Tensor(a!)
aten::complex.out(Tensor real, Tensor imag, *, Tensor(a!) out) -> Tensor(a!)
aten::complex(Tensor real, Tensor imag) -> Tensor
aten::copysign_.Tensor(Tensor(a!) self, Tensor other) -> Tensor(a!)
aten::copysign_.Scalar(Tensor(a!) self, Scalar other) -> Tensor(a!)
aten::copysign.Tensor(Tensor self, Tensor other) -> Tensor
aten::copysign.out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
aten::copysign.Scalar(Tensor self, Scalar other) -> Tensor
aten::copysign.Scalar_out(Tensor self, Scalar other, *, Tensor(a!) out) -> Tensor(a!)
aten::bincount(Tensor self, Tensor? weights=None, int minlength=0) -> Tensor
aten::bincount.out(Tensor self, Tensor? weights=None, int minlength=0, *, Tensor(a!) out) -> Tensor(a!)
aten::native_dropout_backward(Tensor grad_output, Tensor mask, float scale) -> Tensor
aten::native_dropout_backward.out(Tensor grad_output, Tensor mask, float scale, *, Tensor(a!) out) -> Tensor(a!)
aten::_pin_memory(Tensor self, Device? device=None) -> Tensor
aten::_pin_memory.out(Tensor self, Device? device=None, *, Tensor(a!) out) -> Tensor(a!)
aten::fft_rfftfreq(int n, float d=1., *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
aten::fft_rfftfreq.out(int n, float d=1., *, Tensor(a!) out) -> Tensor(a!)
aten::fft_fftfreq(int n, float d=1., *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
aten::fft_fftfreq.out(int n, float d=1., *, Tensor(a!) out) -> Tensor(a!)
aten::triu_indices(int row, int col, int offset=0, *, ScalarType? dtype=4, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
aten::triu_indices.out(int row, int col, int offset=0, *, Tensor(a!) out) -> Tensor(a!)
aten::tril_indices(int row, int col, int offset=0, *, ScalarType? dtype=4, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
aten::tril_indices.out(int row, int col, int offset=0, *, Tensor(a!) out) -> Tensor(a!)
aten::_sparse_coo_tensor_with_dims_and_tensors(int sparse_dim, int dense_dim, SymInt[] size, Tensor indices, Tensor values, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=False) -> Tensor
aten::_sparse_coo_tensor_with_dims_and_tensors.out(int sparse_dim, int dense_dim, SymInt[] size, Tensor indices, Tensor values, *, Tensor(a!) out) -> Tensor(a!)
aten::row_stack(Tensor[] tensors) -> Tensor
aten::row_stack.out(Tensor[] tensors, *, Tensor(a!) out) -> Tensor(a!)
quantized::conv2d_add(Tensor qx, Tensor qaccum, __torch__.torch.classes.quantized.Conv2dPackedParamsBase packed_weight, float output_scale, int output_zero_point) -> Tensor
aten::nll_loss_nd(Tensor self, Tensor target, Tensor? weight=None, int reduction=1, SymInt ignore_index=-100) -> Tensor
aten::nanmean(Tensor self, int[1]? dim=None, bool keepdim=False, *, ScalarType? dtype=None) -> Tensor
aten::nanmean.out(Tensor self, int[1]? dim=None, bool keepdim=False, *, ScalarType? dtype=None, Tensor(a!) out) -> Tensor(a!)
aten::moveaxis.intlist(Tensor(a) self, int[] source, int[] destination) -> Tensor(a)
aten::moveaxis.int(Tensor(a) self, int source, int destination) -> Tensor(a)
aten::max_pool1d_with_indices(Tensor self, int[1] kernel_size, int[1] stride=[], int[1] padding=[0], int[1] dilation=[1], bool ceil_mode=False) -> (Tensor, Tensor)
aten::max.other(Tensor self, Tensor other) -> Tensor
aten::max(Tensor self) -> Tensor
aten::max.dim(Tensor self, int dim, bool keepdim=False) -> (Tensor values, Tensor indices)
aten::max.dim_max(Tensor self, int dim, bool keepdim=False, *, Tensor(a!) max, Tensor(b!) max_values) -> (Tensor(a!) values, Tensor(b!) indices)
aten::max.names_dim(Tensor self, str dim, bool keepdim=False) -> (Tensor values, Tensor indices)
aten::max.names_dim_max(Tensor self, str dim, bool keepdim=False, *, Tensor(a!) max, Tensor(b!) max_values) -> (Tensor(a!) values, Tensor(b!) indices)
aten::max.unary_out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::max.out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
aten::cumprod_backward(Tensor grad, Tensor input, int dim, Tensor output) -> Tensor
aten::linalg_matmul(Tensor self, Tensor other) -> Tensor
aten::linalg_matmul.out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
aten::less_equal.Tensor(Tensor self, Tensor other) -> Tensor
aten::less_equal.Scalar(Tensor self, Scalar other) -> Tensor
aten::less_equal.Scalar_out(Tensor self, Scalar other, *, Tensor(a!) out) -> Tensor(a!)
aten::less_equal.Tensor_out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
aten::ldexp.Tensor(Tensor self, Tensor other) -> Tensor
aten::ldexp.out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
aten::kron(Tensor self, Tensor other) -> Tensor
aten::kron.out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
aten::inner(Tensor self, Tensor other) -> Tensor
aten::inner.out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
aten::hstack(Tensor[] tensors) -> Tensor
aten::hstack.out(Tensor[] tensors, *, Tensor(a!) out) -> Tensor(a!)
aten::greater.Tensor(Tensor self, Tensor other) -> Tensor
aten::greater.Scalar(Tensor self, Scalar other) -> Tensor
aten::greater.Scalar_out(Tensor self, Scalar other, *, Tensor(a!) out) -> Tensor(a!)
aten::greater.Tensor_out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
aten::greater_equal.Tensor(Tensor self, Tensor other) -> Tensor
aten::greater_equal.Scalar(Tensor self, Scalar other) -> Tensor
aten::greater_equal.Scalar_out(Tensor self, Scalar other, *, Tensor(a!) out) -> Tensor(a!)
aten::greater_equal.Tensor_out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
aten::gradient.scalarint(Tensor self, *, Scalar? spacing=None, int? dim=None, int edge_order=1) -> Tensor[]
aten::gradient.scalararray(Tensor self, *, Scalar spacing, int[] dim, int edge_order=1) -> Tensor[]
aten::gradient.array(Tensor self, *, int[] dim, int edge_order=1) -> Tensor[]
aten::gradient.scalarrayint(Tensor self, *, Scalar[] spacing, int? dim=None, int edge_order=1) -> Tensor[]
aten::gradient.scalarrayarray(Tensor self, *, Scalar[] spacing, int[] dim, int edge_order=1) -> Tensor[]
aten::gradient.tensorarrayint(Tensor self, *, Tensor[] spacing, int? dim=None, int edge_order=1) -> Tensor[]
aten::gradient.tensorarray(Tensor self, *, Tensor[] spacing, int[] dim, int edge_order=1) -> Tensor[]
aten::ger(Tensor self, Tensor vec2) -> Tensor
aten::ger.out(Tensor self, Tensor vec2, *, Tensor(a!) out) -> Tensor(a!)
aten::float_power.Tensor_Tensor(Tensor self, Tensor exponent) -> Tensor
aten::float_power.Tensor_Scalar(Tensor self, Scalar exponent) -> Tensor
aten::float_power.Tensor_Tensor_out(Tensor self, Tensor exponent, *, Tensor(a!) out) -> Tensor(a!)
aten::float_power.Scalar(Scalar self, Tensor exponent) -> Tensor
aten::float_power.Scalar_out(Scalar self, Tensor exponent, *, Tensor(a!) out) -> Tensor(a!)
aten::float_power.Tensor_Scalar_out(Tensor self, Scalar exponent, *, Tensor(a!) out) -> Tensor(a!)
aten::flipud(Tensor self) -> Tensor
aten::fliplr(Tensor self) -> Tensor
aten::fft_hfft2(Tensor self, int[1]? s=None, int[1] dim=[-2, -1], str? norm=None) -> Tensor
aten::fft_hfft2.out(Tensor self, int[1]? s=None, int[1] dim=[-2, -1], str? norm=None, *, Tensor(a!) out) -> Tensor(a!)
aten::fft_fftshift(Tensor self, int[1]? dim=None) -> Tensor
aten::diff(Tensor self, int n=1, int dim=-1, Tensor? prepend=None, Tensor? append=None) -> Tensor
aten::diff.out(Tensor self, int n=1, int dim=-1, Tensor? prepend=None, Tensor? append=None, *, Tensor(a!) out) -> Tensor(a!)
aten::cov(Tensor self, *, int correction=1, Tensor? fweights=None, Tensor? aweights=None) -> Tensor
aten::cartesian_prod(Tensor[] tensors) -> Tensor
aten::broadcast_to(Tensor(a) self, SymInt[] size) -> Tensor(a)
aten::batch_norm(Tensor input, Tensor? weight, Tensor? bias, Tensor? running_mean, Tensor? running_var, bool training, float momentum, float eps, bool cudnn_enabled) -> Tensor
aten::atleast_3d(Tensor self) -> Tensor
aten::atleast_3d.Sequence(Tensor[] tensors) -> Tensor[]
aten::atleast_2d(Tensor self) -> Tensor
aten::atleast_2d.Sequence(Tensor[] tensors) -> Tensor[]
aten::atleast_1d(Tensor self) -> Tensor
aten::atleast_1d.Sequence(Tensor[] tensors) -> Tensor[]
aten::arctanh(Tensor self) -> Tensor
aten::arctanh.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::arctan(Tensor self) -> Tensor
aten::arctan.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::max_pool2d(Tensor self, int[2] kernel_size, int[2] stride=[], int[2] padding=0, int[2] dilation=1, bool ceil_mode=False) -> Tensor
aten::arcsinh(Tensor self) -> Tensor
aten::arcsinh.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::arcsin(Tensor self) -> Tensor
aten::arcsin.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::matrix_power(Tensor self, int n) -> Tensor
aten::matrix_power.out(Tensor self, int n, *, Tensor(a!) out) -> Tensor(a!)
aten::arccosh(Tensor self) -> Tensor
aten::arccosh.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::arccos(Tensor self) -> Tensor
aten::arccos.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::adaptive_avg_pool1d(Tensor self, int[1] output_size) -> Tensor
aten::avg_pool1d(Tensor self, int[1] kernel_size, int[1] stride=[], int[1] padding=[0], bool ceil_mode=False, bool count_include_pad=True) -> Tensor
aten::argsort(Tensor self, int dim=-1, bool descending=False) -> Tensor
aten::argsort.stable(Tensor self, *, bool stable, int dim=-1, bool descending=False) -> Tensor
aten::argsort.stable_out(Tensor self, *, bool stable, int dim=-1, bool descending=False, Tensor(a!) out) -> Tensor(a!)
aten::argsort.dimname(Tensor self, str dim, bool descending=False) -> Tensor
aten::arctan2(Tensor self, Tensor other) -> Tensor
aten::arctan2.out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
aten::absolute(Tensor self) -> Tensor
aten::absolute.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::feature_dropout_(Tensor(a!) self, float p, bool train) -> Tensor(a!)
aten::feature_alpha_dropout_(Tensor(a!) self, float p, bool train) -> Tensor(a!)
aten::alpha_dropout_(Tensor(a!) self, float p, bool train) -> Tensor(a!)
aten::masked_select_backward(Tensor grad, Tensor input, Tensor mask) -> Tensor
aten::masked_select(Tensor self, Tensor mask) -> Tensor
aten::masked_select.out(Tensor self, Tensor mask, *, Tensor(a!) out) -> Tensor(a!)
aten::logical_xor(Tensor self, Tensor other) -> Tensor
aten::logical_xor.out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
aten::logical_or(Tensor self, Tensor other) -> Tensor
aten::logical_or.out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
aten::logical_and(Tensor self, Tensor other) -> Tensor
aten::logical_and.out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
aten::masked_fill_.Scalar(Tensor(a!) self, Tensor mask, Scalar value) -> Tensor(a!)
aten::masked_fill_.Tensor(Tensor(a!) self, Tensor mask, Tensor value) -> Tensor(a!)
aten::sub_.Tensor(Tensor(a!) self, Tensor other, *, Scalar alpha=1) -> Tensor(a!)
aten::sub_.Scalar(Tensor(a!) self, Scalar other, Scalar alpha=1) -> Tensor(a!)
aten::add_.Tensor(Tensor(a!) self, Tensor other, *, Scalar alpha=1) -> Tensor(a!)
aten::add_.Scalar(Tensor(a!) self, Scalar other, Scalar alpha=1) -> Tensor(a!)
aten::tanh_backward(Tensor grad_output, Tensor output) -> Tensor
aten::tanh_backward.grad_input(Tensor grad_output, Tensor output, *, Tensor(a!) grad_input) -> Tensor(a!)
aten::gelu_backward(Tensor grad_output, Tensor self, *, str approximate="none") -> Tensor
aten::gelu_backward.grad_input(Tensor grad_output, Tensor self, *, str approximate="none", Tensor(a!) grad_input) -> Tensor(a!)
aten::adaptive_avg_pool2d(Tensor self, SymInt[2] output_size) -> Tensor
aten::adaptive_avg_pool2d.out(Tensor self, SymInt[2] output_size, *, Tensor(a!) out) -> Tensor(a!)
aten::log_sigmoid_backward(Tensor grad_output, Tensor self, Tensor buffer) -> Tensor
aten::log_sigmoid_backward.grad_input(Tensor grad_output, Tensor self, Tensor buffer, *, Tensor(a!) grad_input) -> Tensor(a!)
aten::leaky_relu_backward(Tensor grad_output, Tensor self, Scalar negative_slope, bool self_is_result) -> Tensor
aten::leaky_relu_backward.grad_input(Tensor grad_output, Tensor self, Scalar negative_slope, bool self_is_result, *, Tensor(a!) grad_input) -> Tensor(a!)
aten::_prelu_kernel_backward(Tensor grad_output, Tensor self, Tensor weight) -> (Tensor, Tensor)
aten::take_along_dim(Tensor self, Tensor indices, int? dim=None) -> Tensor
aten::take_along_dim.out(Tensor self, Tensor indices, int? dim=None, *, Tensor(a!) out) -> Tensor(a!)
aten::hardswish_backward(Tensor grad_output, Tensor self) -> Tensor
aten::hardswish_backward.out(Tensor grad_output, Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::hardshrink_backward(Tensor grad_out, Tensor self, Scalar lambd) -> Tensor
aten::hardshrink_backward.grad_input(Tensor grad_out, Tensor self, Scalar lambd, *, Tensor(a!) grad_input) -> Tensor(a!)
aten::hardtanh_backward(Tensor grad_output, Tensor self, Scalar min_val, Scalar max_val) -> Tensor
aten::hardtanh_backward.grad_input(Tensor grad_output, Tensor self, Scalar min_val, Scalar max_val, *, Tensor(a!) grad_input) -> Tensor(a!)
aten::hardsigmoid_backward(Tensor grad_output, Tensor self) -> Tensor
aten::hardsigmoid_backward.grad_input(Tensor grad_output, Tensor self, *, Tensor(a!) grad_input) -> Tensor(a!)
aten::where.self(Tensor condition, Tensor self, Tensor other) -> Tensor
aten::where.ScalarOther(Tensor condition, Tensor self, Scalar other) -> Tensor
aten::where.ScalarSelf(Tensor condition, Scalar self, Tensor other) -> Tensor
aten::where(Tensor condition) -> Tensor[]
aten::where.self_out(Tensor condition, Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
aten::where.Scalar(Tensor condition, Scalar self, Scalar other) -> Tensor
aten::special_xlogy(Tensor self, Tensor other) -> Tensor
aten::special_xlogy.other_scalar(Tensor self, Scalar other) -> Tensor
aten::special_xlogy.self_scalar(Scalar self, Tensor other) -> Tensor
aten::special_xlogy.out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
aten::special_xlogy.self_scalar_out(Scalar self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
aten::special_xlogy.other_scalar_out(Tensor self, Scalar other, *, Tensor(a!) out) -> Tensor(a!)
aten::_fake_quantize_learnable_per_channel_affine(Tensor self, Tensor scale, Tensor zero_point, int axis, int quant_min, int quant_max, float grad_factor=1.) -> Tensor
aten::_fake_quantize_learnable_per_channel_affine.out(Tensor self, Tensor scale, Tensor zero_point, int axis, int quant_min, int quant_max, float grad_factor=1., *, Tensor(a!) out) -> Tensor(a!)
prepacked::unpack_prepacked_sizes_linear(Any W_prepack) -> Any
aten::rrelu_with_noise(Tensor self, Tensor noise, Scalar lower=0.125, Scalar upper=0.33333333333333331, bool training=False, Generator? generator=None) -> Tensor
aten::rrelu_with_noise.out(Tensor self, Tensor noise, Scalar lower=0.125, Scalar upper=0.33333333333333331, bool training=False, Generator? generator=None, *, Tensor(a!) out) -> Tensor(a!)
quantized::conv3d_relu.new(Tensor qx, __torch__.torch.classes.quantized.Conv3dPackedParamsBase packed_weight, float output_scale, int output_zero_point) -> Tensor
quantized::conv3d_relu(Tensor qx, __torch__.torch.classes.quantized.Conv3dPackedParamsBase weight, int[] stride, int[] padding, int[] dilation, int groups, float output_scale, int output_zero_point) -> Tensor
aten::maximum(Tensor self, Tensor other) -> Tensor
aten::maximum.out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
aten::lcm(Tensor self, Tensor other) -> Tensor
aten::lcm.out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
aten::lerp.Scalar(Tensor self, Tensor end, Scalar weight) -> Tensor
aten::lerp.Tensor(Tensor self, Tensor end, Tensor weight) -> Tensor
aten::lerp.Scalar_out(Tensor self, Tensor end, Scalar weight, *, Tensor(a!) out) -> Tensor(a!)
aten::lerp.Tensor_out(Tensor self, Tensor end, Tensor weight, *, Tensor(a!) out) -> Tensor(a!)
aten::logaddexp2(Tensor self, Tensor other) -> Tensor
aten::logaddexp2.out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
aten::special_zeta(Tensor self, Tensor other) -> Tensor
aten::special_zeta.other_scalar(Tensor self, Scalar other) -> Tensor
aten::special_zeta.self_scalar(Scalar self, Tensor other) -> Tensor
aten::special_zeta.out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
aten::special_zeta.self_scalar_out(Scalar self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
aten::special_zeta.other_scalar_out(Tensor self, Scalar other, *, Tensor(a!) out) -> Tensor(a!)
aten::_fake_quantize_learnable_per_channel_affine_backward(Tensor grad, Tensor self, Tensor scale, Tensor zero_point, int axis, int quant_min, int quant_max, float grad_factor=1.) -> (Tensor, Tensor, Tensor)
prepacked::linear_clamp_prepack(Tensor W, Tensor? B=None, Scalar? output_min=None, Scalar? output_max=None) -> __torch__.torch.classes.xnnpack.LinearOpContext
aten::igammac(Tensor self, Tensor other) -> Tensor
aten::igammac.out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
aten::special_xlog1py(Tensor self, Tensor other) -> Tensor
aten::special_xlog1py.other_scalar(Tensor self, Scalar other) -> Tensor
aten::special_xlog1py.self_scalar(Scalar self, Tensor other) -> Tensor
aten::special_xlog1py.out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
aten::special_xlog1py.self_scalar_out(Scalar self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
aten::special_xlog1py.other_scalar_out(Tensor self, Scalar other, *, Tensor(a!) out) -> Tensor(a!)
aten::igamma(Tensor self, Tensor other) -> Tensor
aten::igamma.out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
aten::gcd(Tensor self, Tensor other) -> Tensor
aten::gcd.out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
aten::hypot(Tensor self, Tensor other) -> Tensor
aten::hypot.out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
aten::heaviside(Tensor self, Tensor values) -> Tensor
aten::heaviside.out(Tensor self, Tensor values, *, Tensor(a!) out) -> Tensor(a!)
aten::frexp.Tensor(Tensor self) -> (Tensor mantissa, Tensor exponent)
aten::frexp.Tensor_out(Tensor self, *, Tensor(a!) mantissa, Tensor(b!) exponent) -> (Tensor(a!) mantissa, Tensor(b!) exponent)
aten::fmin(Tensor self, Tensor other) -> Tensor
aten::fmin.out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
aten::floor_divide(Tensor self, Tensor other) -> Tensor
aten::floor_divide.Scalar(Tensor self, Scalar other) -> Tensor
aten::floor_divide.out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
aten::reciprocal_(Tensor(a!) self) -> Tensor(a!)
aten::nextafter(Tensor self, Tensor other) -> Tensor
aten::nextafter.out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
aten::clamp_max_(Tensor(a!) self, Scalar max) -> Tensor(a!)
aten::clamp_max_.Tensor(Tensor(a!) self, Tensor max) -> Tensor(a!)
aten::bitwise_right_shift_.Tensor_Scalar(Tensor(a!) self, Scalar other) -> Tensor(a!)
aten::bitwise_right_shift_.Tensor(Tensor(a!) self, Tensor other) -> Tensor(a!)
aten::bitwise_left_shift_.Tensor_Scalar(Tensor(a!) self, Scalar other) -> Tensor(a!)
aten::bitwise_left_shift_.Tensor(Tensor(a!) self, Tensor other) -> Tensor(a!)
aten::bitwise_xor_.Tensor(Tensor(a!) self, Tensor other) -> Tensor(a!)
aten::bitwise_xor_.Scalar(Tensor(a!) self, Scalar other) -> Tensor(a!)
aten::bitwise_xor.Tensor(Tensor self, Tensor other) -> Tensor
aten::bitwise_xor.Scalar_Tensor(Scalar self, Tensor other) -> Tensor
aten::bitwise_xor.Scalar(Tensor self, Scalar other) -> Tensor
aten::bitwise_xor.Tensor_out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
aten::bitwise_xor.Scalar_out(Tensor self, Scalar other, *, Tensor(a!) out) -> Tensor(a!)
aten::bitwise_xor.Scalar_Tensor_out(Scalar self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
aten::bitwise_or_.Tensor(Tensor(a!) self, Tensor other) -> Tensor(a!)
aten::bitwise_or_.Scalar(Tensor(a!) self, Scalar other) -> Tensor(a!)
aten::bitwise_or.Tensor(Tensor self, Tensor other) -> Tensor
aten::bitwise_or.Scalar_Tensor(Scalar self, Tensor other) -> Tensor
aten::bitwise_or.Scalar(Tensor self, Scalar other) -> Tensor
aten::bitwise_or.Tensor_out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
aten::bitwise_or.Scalar_out(Tensor self, Scalar other, *, Tensor(a!) out) -> Tensor(a!)
aten::bitwise_or.Scalar_Tensor_out(Scalar self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
aten::bitwise_and_.Tensor(Tensor(a!) self, Tensor other) -> Tensor(a!)
aten::bitwise_and_.Scalar(Tensor(a!) self, Scalar other) -> Tensor(a!)
aten::outer(Tensor self, Tensor vec2) -> Tensor
aten::outer.out(Tensor self, Tensor vec2, *, Tensor(a!) out) -> Tensor(a!)
aten::mul_.Tensor(Tensor(a!) self, Tensor other) -> Tensor(a!)
aten::mul_.Scalar(Tensor(a!) self, Scalar other) -> Tensor(a!)
aten::binomial(Tensor count, Tensor prob, Generator? generator=None) -> Tensor
aten::binomial.out(Tensor count, Tensor prob, Generator? generator=None, *, Tensor(a!) out) -> Tensor(a!)
aten::glu(Tensor self, int dim=-1) -> Tensor
aten::glu.out(Tensor self, int dim=-1, *, Tensor(a!) out) -> Tensor(a!)
aten::glu_backward(Tensor grad_output, Tensor self, int dim) -> Tensor
aten::glu_backward.grad_input(Tensor grad_output, Tensor self, int dim, *, Tensor(a!) grad_input) -> Tensor(a!)
aten::multilabel_margin_loss_forward(Tensor self, Tensor target, int reduction) -> (Tensor output, Tensor is_target)
aten::multilabel_margin_loss_forward.output(Tensor self, Tensor target, int reduction, *, Tensor(a!) output, Tensor(b!) is_target) -> (Tensor(a!), Tensor(b!))
aten::adaptive_max_pool3d(Tensor self, int[3] output_size) -> (Tensor, Tensor)
aten::adaptive_max_pool3d.out(Tensor self, int[3] output_size, *, Tensor(a!) out, Tensor(b!) indices) -> (Tensor(a!), Tensor(b!))
aten::softshrink_backward(Tensor grad_output, Tensor self, Scalar lambd) -> Tensor
aten::softshrink_backward.grad_input(Tensor grad_output, Tensor self, Scalar lambd, *, Tensor(a!) grad_input) -> Tensor(a!)
aten::_amp_foreach_non_finite_check_and_unscale(Tensor[] self, Tensor found_inf, Tensor inv_scale) -> (Tensor[] self_out, Tensor found_inf_out)
aten::_amp_foreach_non_finite_check_and_unscale.out(Tensor[] self, Tensor(b!) found_inf, Tensor inv_scale, *, Tensor(a!)[] out) -> ()
quantized::matmul(Tensor qa, Tensor qb, float scale, int zero_point) -> Tensor qc
aten::fractional_max_pool3d(Tensor self, int[3] kernel_size, int[3] output_size, Tensor random_samples) -> (Tensor, Tensor)
aten::fractional_max_pool3d.output(Tensor self, int[3] kernel_size, int[3] output_size, Tensor random_samples, *, Tensor(a!) output, Tensor(b!) indices) -> (Tensor(a!), Tensor(b!))
aten::softplus_backward(Tensor grad_output, Tensor self, Scalar beta, Scalar threshold) -> Tensor
aten::softplus_backward.grad_input(Tensor grad_output, Tensor self, Scalar beta, Scalar threshold, *, Tensor(a!) grad_input) -> Tensor(a!)
aten::_addmm_activation(Tensor self, Tensor mat1, Tensor mat2, *, Scalar beta=1, Scalar alpha=1, bool use_gelu=False) -> Tensor
aten::_addmm_activation.out(Tensor self, Tensor mat1, Tensor mat2, *, Scalar beta=1, Scalar alpha=1, bool use_gelu=False, Tensor(a!) out) -> Tensor(a!)
_quantized::linear_prepack_fp16(Tensor W, Tensor? B=None) -> __torch__.torch.classes.quantized.LinearPackedParamsBase W_prepack
aten::fractional_max_pool2d(Tensor self, int[2] kernel_size, int[2] output_size, Tensor random_samples) -> (Tensor, Tensor)
aten::fractional_max_pool2d.output(Tensor self, int[2] kernel_size, int[2] output_size, Tensor random_samples, *, Tensor(a!) output, Tensor(b!) indices) -> (Tensor(a!), Tensor(b!))
aten::less.Tensor(Tensor self, Tensor other) -> Tensor
aten::less.Scalar(Tensor self, Scalar other) -> Tensor
aten::less.Scalar_out(Tensor self, Scalar other, *, Tensor(a!) out) -> Tensor(a!)
aten::less.Tensor_out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
aten::triangular_solve(Tensor self, Tensor A, bool upper=True, bool transpose=False, bool unitriangular=False) -> (Tensor solution, Tensor cloned_coefficient)
aten::triangular_solve.X(Tensor self, Tensor A, bool upper=True, bool transpose=False, bool unitriangular=False, *, Tensor(a!) X, Tensor(b!) M) -> (Tensor(a!) solution, Tensor(b!) cloned_coefficient)
aten::svd(Tensor self, bool some=True, bool compute_uv=True) -> (Tensor U, Tensor S, Tensor V)
aten::svd.U(Tensor self, bool some=True, bool compute_uv=True, *, Tensor(a!) U, Tensor(b!) S, Tensor(c!) V) -> (Tensor(a!) U, Tensor(b!) S, Tensor(c!) V)
aten::reciprocal(Tensor self) -> Tensor
aten::reciprocal.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::qr(Tensor self, bool some=True) -> (Tensor Q, Tensor R)
aten::qr.Q(Tensor self, bool some=True, *, Tensor(a!) Q, Tensor(b!) R) -> (Tensor(a!) Q, Tensor(b!) R)
aten::geqrf(Tensor self) -> (Tensor a, Tensor tau)
aten::geqrf.a(Tensor self, *, Tensor(a!) a, Tensor(b!) tau) -> (Tensor(a!) a, Tensor(b!) tau)
aten::fake_quantize_per_tensor_affine(Tensor self, float scale, int zero_point, int quant_min, int quant_max) -> Tensor
aten::fake_quantize_per_tensor_affine.tensor_qparams(Tensor self, Tensor scale, Tensor zero_point, int quant_min, int quant_max) -> Tensor
aten::linalg_householder_product(Tensor input, Tensor tau) -> Tensor
aten::linalg_householder_product.out(Tensor input, Tensor tau, *, Tensor(a!) out) -> Tensor(a!)
aten::linalg_inv(Tensor A) -> Tensor
aten::linalg_inv.out(Tensor A, *, Tensor(a!) out) -> Tensor(a!)
aten::linalg_eigvalsh(Tensor self, str UPLO="L") -> Tensor
aten::linalg_eigvalsh.out(Tensor self, str UPLO="L", *, Tensor(a!) out) -> Tensor(a!)
aten::linalg_cholesky(Tensor self, *, bool upper=False) -> Tensor
aten::linalg_cholesky.out(Tensor self, *, bool upper=False, Tensor(a!) out) -> Tensor(a!)
aten::fft_ihfft(Tensor self, int? n=None, int dim=-1, str? norm=None) -> Tensor
aten::fft_ihfft.out(Tensor self, int? n=None, int dim=-1, str? norm=None, *, Tensor(a!) out) -> Tensor(a!)
aten::fft_hfft(Tensor self, int? n=None, int dim=-1, str? norm=None) -> Tensor
aten::fft_hfft.out(Tensor self, int? n=None, int dim=-1, str? norm=None, *, Tensor(a!) out) -> Tensor(a!)
aten::fft_irfftn(Tensor self, int[1]? s=None, int[1]? dim=None, str? norm=None) -> Tensor
aten::fft_irfftn.out(Tensor self, int[1]? s=None, int[1]? dim=None, str? norm=None, *, Tensor(a!) out) -> Tensor(a!)
aten::fft_rfftn(Tensor self, int[1]? s=None, int[1]? dim=None, str? norm=None) -> Tensor
aten::fft_rfftn.out(Tensor self, int[1]? s=None, int[1]? dim=None, str? norm=None, *, Tensor(a!) out) -> Tensor(a!)
aten::fft_irfft2(Tensor self, int[1]? s=None, int[1] dim=[-2, -1], str? norm=None) -> Tensor
aten::fft_irfft2.out(Tensor self, int[1]? s=None, int[1] dim=[-2, -1], str? norm=None, *, Tensor(a!) out) -> Tensor(a!)
aten::silu_backward(Tensor grad_output, Tensor self) -> Tensor
aten::silu_backward.grad_input(Tensor grad_output, Tensor self, *, Tensor(a!) grad_input) -> Tensor(a!)
quantized::embedding_bag_byte_prepack(Tensor weight) -> Tensor
aten::fft_rfft2(Tensor self, int[1]? s=None, int[1] dim=[-2, -1], str? norm=None) -> Tensor
aten::fft_rfft2.out(Tensor self, int[1]? s=None, int[1] dim=[-2, -1], str? norm=None, *, Tensor(a!) out) -> Tensor(a!)
aten::fft_irfft(Tensor self, int? n=None, int dim=-1, str? norm=None) -> Tensor
aten::fft_irfft.out(Tensor self, int? n=None, int dim=-1, str? norm=None, *, Tensor(a!) out) -> Tensor(a!)
aten::fft_rfft(Tensor self, int? n=None, int dim=-1, str? norm=None) -> Tensor
aten::fft_rfft.out(Tensor self, int? n=None, int dim=-1, str? norm=None, *, Tensor(a!) out) -> Tensor(a!)
aten::fft_ifftn(Tensor self, int[1]? s=None, int[1]? dim=None, str? norm=None) -> Tensor
aten::fft_ifftn.out(Tensor self, int[1]? s=None, int[1]? dim=None, str? norm=None, *, Tensor(a!) out) -> Tensor(a!)
aten::fft_fftn(Tensor self, int[1]? s=None, int[1]? dim=None, str? norm=None) -> Tensor
aten::fft_fftn.out(Tensor self, int[1]? s=None, int[1]? dim=None, str? norm=None, *, Tensor(a!) out) -> Tensor(a!)
aten::fft_ifft2(Tensor self, int[1]? s=None, int[1] dim=[-2, -1], str? norm=None) -> Tensor
aten::fft_ifft2.out(Tensor self, int[1]? s=None, int[1] dim=[-2, -1], str? norm=None, *, Tensor(a!) out) -> Tensor(a!)
aten::fft_ifft(Tensor self, int? n=None, int dim=-1, str? norm=None) -> Tensor
aten::fft_ifft.out(Tensor self, int? n=None, int dim=-1, str? norm=None, *, Tensor(a!) out) -> Tensor(a!)
aten::ctc_loss.IntList(Tensor log_probs, Tensor targets, int[] input_lengths, int[] target_lengths, int blank=0, int reduction=1, bool zero_infinity=False) -> Tensor
aten::ctc_loss.Tensor(Tensor log_probs, Tensor targets, Tensor input_lengths, Tensor target_lengths, int blank=0, int reduction=1, bool zero_infinity=False) -> Tensor
aten::cross_entropy_loss(Tensor self, Tensor target, Tensor? weight=None, int reduction=1, SymInt ignore_index=-100, float label_smoothing=0.) -> Tensor
aten::reflection_pad2d(Tensor self, SymInt[4] padding) -> Tensor
aten::reflection_pad2d.out(Tensor self, SymInt[4] padding, *, Tensor(a!) out) -> Tensor(a!)
aten::max_unpool3d(Tensor self, Tensor indices, int[3] output_size, int[3] stride, int[3] padding) -> Tensor
aten::max_unpool3d.out(Tensor self, Tensor indices, int[3] output_size, int[3] stride, int[3] padding, *, Tensor(a!) out) -> Tensor(a!)
aten::max_unpool2d(Tensor self, Tensor indices, int[2] output_size) -> Tensor
aten::max_unpool2d.out(Tensor self, Tensor indices, int[2] output_size, *, Tensor(a!) out) -> Tensor(a!)
aten::max_pool3d(Tensor self, int[3] kernel_size, int[3] stride=[], int[3] padding=0, int[3] dilation=1, bool ceil_mode=False) -> Tensor
aten::orgqr(Tensor self, Tensor input2) -> Tensor
aten::orgqr.out(Tensor self, Tensor input2, *, Tensor(a!) out) -> Tensor(a!)
aten::lu_solve(Tensor self, Tensor LU_data, Tensor LU_pivots) -> Tensor
aten::lu_solve.out(Tensor self, Tensor LU_data, Tensor LU_pivots, *, Tensor(a!) out) -> Tensor(a!)
aten::inverse(Tensor self) -> Tensor
aten::inverse.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::cholesky_solve(Tensor self, Tensor input2, bool upper=False) -> Tensor
aten::cholesky_solve.out(Tensor self, Tensor input2, bool upper=False, *, Tensor(a!) out) -> Tensor(a!)
aten::cholesky_inverse(Tensor self, bool upper=False) -> Tensor
aten::cholesky_inverse.out(Tensor self, bool upper=False, *, Tensor(a!) out) -> Tensor(a!)
aten::negative(Tensor self) -> Tensor
aten::negative.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::cholesky(Tensor self, bool upper=False) -> Tensor
aten::cholesky.out(Tensor self, bool upper=False, *, Tensor(a!) out) -> Tensor(a!)
aten::grid_sampler_3d(Tensor input, Tensor grid, int interpolation_mode, int padding_mode, bool align_corners) -> Tensor
aten::grid_sampler_3d.out(Tensor input, Tensor grid, int interpolation_mode, int padding_mode, bool align_corners, *, Tensor(a!) out) -> Tensor(a!)
c10d::_allgather_base_(Tensor output_tensor, Tensor input_tensor, __torch__.torch.classes.c10d.ProcessGroup process_group) -> (Tensor, __torch__.torch.classes.c10d.Work)
aten::_lu_with_info(Tensor self, bool pivot=True, bool check_errors=True) -> (Tensor LU, Tensor pivots, Tensor info)
aten::special_round(Tensor self, *, int decimals=0) -> Tensor
aten::special_round.out(Tensor self, *, int decimals=0, Tensor(a!) out) -> Tensor(a!)
aten::_efficient_attention_forward(Tensor query, Tensor key, Tensor value, Tensor? cu_seqlens_q, Tensor? cu_seqlens_k, int? max_seqlen_q, bool compute_log_sumexp=False, bool causal=False) -> (Tensor, Tensor)
mkldnn::_convolution_transpose_pointwise(Tensor X, Tensor W, Tensor? B, int[] padding, int[] output_padding, int[] stride, int[] dilation, int groups, str attr, Scalar?[] scalars, str? algorithm) -> Tensor Y
aten::grid_sampler_2d(Tensor input, Tensor grid, int interpolation_mode, int padding_mode, bool align_corners) -> Tensor
aten::grid_sampler_2d.out(Tensor input, Tensor grid, int interpolation_mode, int padding_mode, bool align_corners, *, Tensor(a!) out) -> Tensor(a!)
aten::index_select_backward(Tensor grad, SymInt[] self_sizes, int dim, Tensor index) -> Tensor
aten::stft(Tensor self, int n_fft, int? hop_length=None, int? win_length=None, Tensor? window=None, bool normalized=False, bool? onesided=None, bool? return_complex=None) -> Tensor
aten::stft.center(Tensor self, int n_fft, int? hop_length=None, int? win_length=None, Tensor? window=None, bool center=True, str pad_mode="reflect", bool normalized=False, bool? onesided=None, bool? return_complex=None) -> Tensor
aten::broadcast_tensors(Tensor[] tensors) -> Tensor[]
aten::nanquantile(Tensor self, Tensor q, int? dim=None, bool keepdim=False, *, str interpolation="linear") -> Tensor
aten::nanquantile.scalar(Tensor self, float q, int? dim=None, bool keepdim=False, *, str interpolation="linear") -> Tensor
aten::nanquantile.out(Tensor self, Tensor q, int? dim=None, bool keepdim=False, *, str interpolation="linear", Tensor(a!) out) -> Tensor(a!)
aten::nanquantile.scalar_out(Tensor self, float q, int? dim=None, bool keepdim=False, *, str interpolation="linear", Tensor(a!) out) -> Tensor(a!)
aten::corrcoef(Tensor self) -> Tensor
aten::polar(Tensor abs, Tensor angle) -> Tensor
aten::polar.out(Tensor abs, Tensor angle, *, Tensor(a!) out) -> Tensor(a!)
aten::avg_pool3d(Tensor self, int[3] kernel_size, int[3] stride=[], int[3] padding=0, bool ceil_mode=False, bool count_include_pad=True, int? divisor_override=None) -> Tensor
aten::avg_pool3d.out(Tensor self, int[3] kernel_size, int[3] stride=[], int[3] padding=0, bool ceil_mode=False, bool count_include_pad=True, int? divisor_override=None, *, Tensor(a!) out) -> Tensor(a!)
aten::mkldnn_rnn_layer(Tensor input, Tensor weight0, Tensor weight1, Tensor weight2, Tensor weight3, Tensor hx_, Tensor cx_, bool reverse, int[] batch_sizes, int mode, int hidden_size, int num_layers, bool has_biases, bool bidirectional, bool batch_first, bool train) -> (Tensor, Tensor, Tensor, Tensor)
aten::mkldnn_rnn_layer.out(Tensor input, Tensor weight0, Tensor weight1, Tensor weight2, Tensor weight3, Tensor hx_, Tensor cx_, bool reverse, int[] batch_sizes, int mode, int hidden_size, int num_layers, bool has_biases, bool bidirectional, bool batch_first, bool train, *, Tensor(a!) out0, Tensor(b!) out1, Tensor(c!) out2, Tensor(d!) out3) -> (Tensor(a!), Tensor(b!), Tensor(c!), Tensor(d!))
aten::scatter_add(Tensor self, int dim, Tensor index, Tensor src) -> Tensor
aten::scatter_add.out(Tensor self, int dim, Tensor index, Tensor src, *, Tensor(a!) out) -> Tensor(a!)
aten::scatter_add.dimname(Tensor self, str dim, Tensor index, Tensor src) -> Tensor
quantized::conv_transpose1d_dynamic(Tensor qx, __torch__.torch.classes.quantized.Conv2dPackedParamsBase packed_weight, bool reduce_range=False) -> Tensor
aten::tensordot(Tensor self, Tensor other, int[] dims_self, int[] dims_other) -> Tensor
aten::tensordot.out(Tensor self, Tensor other, int[] dims_self, int[] dims_other, *, Tensor(a!) out) -> Tensor(a!)
aten::index_put(Tensor self, Tensor?[] indices, Tensor values, bool accumulate=False) -> Tensor
aten::index_put.out(Tensor self, Tensor?[] indices, Tensor values, bool accumulate=False, *, Tensor(a!) out) -> Tensor(a!)
aten::grid_sampler(Tensor input, Tensor grid, int interpolation_mode, int padding_mode, bool align_corners) -> Tensor
aten::cross(Tensor self, Tensor other, int? dim=None) -> Tensor
aten::cross.out(Tensor self, Tensor other, int? dim=None, *, Tensor(a!) out) -> Tensor(a!)
aten::bilinear(Tensor input1, Tensor input2, Tensor weight, Tensor? bias=None) -> Tensor
aten::atan2(Tensor self, Tensor other) -> Tensor
aten::atan2.out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
aten::logical_xor_(Tensor(a!) self, Tensor other) -> Tensor(a!)
aten::addcmul(Tensor self, Tensor tensor1, Tensor tensor2, *, Scalar value=1) -> Tensor
aten::addcmul.out(Tensor self, Tensor tensor1, Tensor tensor2, *, Scalar value=1, Tensor(a!) out) -> Tensor(a!)
aten::logical_or_(Tensor(a!) self, Tensor other) -> Tensor(a!)
aten::addcdiv(Tensor self, Tensor tensor1, Tensor tensor2, *, Scalar value=1) -> Tensor
aten::addcdiv.out(Tensor self, Tensor tensor1, Tensor tensor2, *, Scalar value=1, Tensor(a!) out) -> Tensor(a!)
aten::linalg_matrix_norm(Tensor self, Scalar ord, int[] dim=[-2, -1], bool keepdim=False, *, ScalarType? dtype=None) -> Tensor
aten::linalg_matrix_norm.str_ord(Tensor self, str ord="fro", int[] dim=[-2, -1], bool keepdim=False, *, ScalarType? dtype=None) -> Tensor
aten::linalg_matrix_norm.out(Tensor self, Scalar ord, int[] dim=[-2, -1], bool keepdim=False, *, ScalarType? dtype=None, Tensor(a!) out) -> Tensor(a!)
aten::linalg_matrix_norm.str_ord_out(Tensor self, str ord="fro", int[] dim=[-2, -1], bool keepdim=False, *, ScalarType? dtype=None, Tensor(a!) out) -> Tensor(a!)
aten::cumprod(Tensor self, int dim, *, ScalarType? dtype=None) -> Tensor
aten::cumprod.dimname(Tensor self, str dim, *, ScalarType? dtype=None) -> Tensor
aten::cumprod.dimname_out(Tensor self, str dim, *, ScalarType? dtype=None, Tensor(a!) out) -> Tensor(a!)
aten::cumprod.out(Tensor self, int dim, *, ScalarType? dtype=None, Tensor(a!) out) -> Tensor(a!)
aten::log_softmax.int(Tensor self, int dim, ScalarType? dtype=None) -> Tensor
aten::log_softmax.Dimname(Tensor self, str dim, *, ScalarType? dtype=None) -> Tensor
aten::log_softmax.int_out(Tensor self, int dim, ScalarType? dtype=None, *, Tensor(a!) out) -> Tensor(a!)
aten::prod(Tensor self, *, ScalarType? dtype=None) -> Tensor
aten::prod.dim_int(Tensor self, int dim, bool keepdim=False, *, ScalarType? dtype=None) -> Tensor
aten::prod.dim_Dimname(Tensor self, str dim, bool keepdim=False, *, ScalarType? dtype=None) -> Tensor
aten::prod.Dimname_out(Tensor self, str dim, bool keepdim=False, *, ScalarType? dtype=None, Tensor(a!) out) -> Tensor(a!)
aten::prod.int_out(Tensor self, int dim, bool keepdim=False, *, ScalarType? dtype=None, Tensor(a!) out) -> Tensor(a!)
aten::prod.out(Tensor self, *, ScalarType? dtype=None, Tensor(a!) out) -> Tensor(a!)
aten::logsumexp(Tensor self, int[1] dim, bool keepdim=False) -> Tensor
aten::logsumexp.names(Tensor self, str[1] dim, bool keepdim=False) -> Tensor
aten::logsumexp.names_out(Tensor self, str[1] dim, bool keepdim=False, *, Tensor(a!) out) -> Tensor(a!)
aten::logsumexp.out(Tensor self, int[1] dim, bool keepdim=False, *, Tensor(a!) out) -> Tensor(a!)
aten::cdist(Tensor x1, Tensor x2, float p=2., int? compute_mode=None) -> Tensor
aten::convolution_backward(Tensor grad_output, Tensor input, Tensor weight, SymInt[]? bias_sizes, int[] stride, SymInt[] padding, int[] dilation, bool transposed, SymInt[] output_padding, int groups, bool[3] output_mask) -> (Tensor, Tensor, Tensor)
aten::convolution_backward.out(Tensor grad_output, Tensor input, Tensor weight, SymInt[]? bias_sizes, int[] stride, SymInt[] padding, int[] dilation, bool transposed, SymInt[] output_padding, int groups, bool[3] output_mask, *, Tensor(a!) out0, Tensor(b!) out1, Tensor(c!) out2) -> (Tensor(a!), Tensor(b!), Tensor(c!))
aten::pdist(Tensor self, float p=2.) -> Tensor
aten::msort(Tensor self) -> Tensor
aten::msort.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::binary_cross_entropy_with_logits(Tensor self, Tensor target, Tensor? weight=None, Tensor? pos_weight=None, int reduction=1) -> Tensor
aten::binary_cross_entropy_with_logits.out(Tensor self, Tensor target, Tensor? weight=None, Tensor? pos_weight=None, int reduction=1, *, Tensor(a!) out) -> Tensor(a!)
aten::bitwise_and.Tensor(Tensor self, Tensor other) -> Tensor
aten::bitwise_and.Scalar(Tensor self, Scalar other) -> Tensor
aten::bitwise_and.Scalar_Tensor(Scalar self, Tensor other) -> Tensor
aten::bitwise_and.Tensor_out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
aten::bitwise_and.Scalar_out(Tensor self, Scalar other, *, Tensor(a!) out) -> Tensor(a!)
aten::bitwise_and.Scalar_Tensor_out(Scalar self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
aten::multi_margin_loss(Tensor self, Tensor target, Scalar p=1, Scalar margin=1, Tensor? weight=None, int reduction=1) -> Tensor
aten::multi_margin_loss.out(Tensor self, Tensor target, Scalar p=1, Scalar margin=1, Tensor? weight=None, int reduction=1, *, Tensor(a!) out) -> Tensor(a!)
aten::fmod.Tensor(Tensor self, Tensor other) -> Tensor
aten::fmod.Scalar(Tensor self, Scalar other) -> Tensor
aten::fmod.Tensor_out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
aten::fmod.Scalar_out(Tensor self, Scalar other, *, Tensor(a!) out) -> Tensor(a!)
aten::soft_margin_loss(Tensor self, Tensor target, int reduction=1) -> Tensor
aten::soft_margin_loss.out(Tensor self, Tensor target, int reduction=1, *, Tensor(a!) out) -> Tensor(a!)
aten::bitwise_left_shift.Tensor(Tensor self, Tensor other) -> Tensor
aten::bitwise_left_shift.Tensor_Scalar(Tensor self, Scalar other) -> Tensor
aten::bitwise_left_shift.Scalar_Tensor(Scalar self, Tensor other) -> Tensor
aten::bitwise_left_shift.Tensor_out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
aten::bitwise_left_shift.Tensor_Scalar_out(Tensor self, Scalar other, *, Tensor(a!) out) -> Tensor(a!)
aten::bitwise_left_shift.Scalar_Tensor_out(Scalar self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
aten::multilabel_margin_loss(Tensor self, Tensor target, int reduction=1) -> Tensor
aten::multilabel_margin_loss.out(Tensor self, Tensor target, int reduction=1, *, Tensor(a!) out) -> Tensor(a!)
aten::margin_ranking_loss(Tensor input1, Tensor input2, Tensor target, float margin=0., int reduction=1) -> Tensor
aten::binary_cross_entropy(Tensor self, Tensor target, Tensor? weight=None, int reduction=1) -> Tensor
aten::binary_cross_entropy.out(Tensor self, Tensor target, Tensor? weight=None, int reduction=1, *, Tensor(a!) out) -> Tensor(a!)
aten::mse_loss(Tensor self, Tensor target, int reduction=1) -> Tensor
aten::mse_loss.out(Tensor self, Tensor target, int reduction=1, *, Tensor(a!) out) -> Tensor(a!)
aten::huber_loss(Tensor self, Tensor target, int reduction=1, float delta=1.) -> Tensor
aten::huber_loss.out(Tensor self, Tensor target, int reduction=1, float delta=1., *, Tensor(a!) out) -> Tensor(a!)
aten::fmax(Tensor self, Tensor other) -> Tensor
aten::fmax.out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
aten::smooth_l1_loss(Tensor self, Tensor target, int reduction=1, float beta=1.) -> Tensor
aten::smooth_l1_loss.out(Tensor self, Tensor target, int reduction=1, float beta=1., *, Tensor(a!) out) -> Tensor(a!)
aten::_adaptive_avg_pool2d_backward(Tensor grad_output, Tensor self) -> Tensor
aten::_adaptive_avg_pool2d_backward.out(Tensor grad_output, Tensor self, *, Tensor(a!) out) -> Tensor(a!)
_quantized::linear_dynamic(Tensor X, __torch__.torch.classes.quantized.LinearPackedParamsBase W_prepack, bool reduce_range=False) -> Tensor Y
aten::l1_loss(Tensor self, Tensor target, int reduction=1) -> Tensor
aten::kl_div(Tensor self, Tensor target, int reduction=1, *, bool log_target=False) -> Tensor
aten::hinge_embedding_loss(Tensor self, Tensor target, float margin=1., int reduction=1) -> Tensor
aten::clip(Tensor self, Scalar? min=None, Scalar? max=None) -> Tensor
aten::clip.Tensor(Tensor self, Tensor? min=None, Tensor? max=None) -> Tensor
aten::clip.out(Tensor self, Scalar? min=None, Scalar? max=None, *, Tensor(a!) out) -> Tensor(a!)
aten::clip.Tensor_out(Tensor self, Tensor? min=None, Tensor? max=None, *, Tensor(a!) out) -> Tensor(a!)
aten::nll_loss2d(Tensor self, Tensor target, Tensor? weight=None, int reduction=1, SymInt ignore_index=-100) -> Tensor
aten::nll_loss2d.out(Tensor self, Tensor target, Tensor? weight=None, int reduction=1, SymInt ignore_index=-100, *, Tensor(a!) out) -> Tensor(a!)
aten::clamp_min_(Tensor(a!) self, Scalar min) -> Tensor(a!)
aten::clamp_min_.Tensor(Tensor(a!) self, Tensor min) -> Tensor(a!)
aten::nll_loss(Tensor self, Tensor target, Tensor? weight=None, int reduction=1, SymInt ignore_index=-100) -> Tensor
aten::nll_loss.out(Tensor self, Tensor target, Tensor? weight=None, int reduction=1, SymInt ignore_index=-100, *, Tensor(a!) out) -> Tensor(a!)
aten::pow_.Scalar(Tensor(a!) self, Scalar exponent) -> Tensor(a!)
aten::pow_.Tensor(Tensor(a!) self, Tensor exponent) -> Tensor(a!)
aten::cosine_embedding_loss(Tensor input1, Tensor input2, Tensor target, float margin=0., int reduction=1) -> Tensor
aten::poisson_nll_loss(Tensor input, Tensor target, bool log_input, bool full, float eps, int reduction) -> Tensor
aten::prelu(Tensor self, Tensor weight) -> Tensor
aten::nuclear_norm(Tensor self, bool keepdim=False) -> Tensor
aten::nuclear_norm.dim(Tensor self, int[2] dim, bool keepdim=False) -> Tensor
aten::nuclear_norm.out(Tensor self, bool keepdim=False, *, Tensor(a!) out) -> Tensor(a!)
aten::nuclear_norm.dim_out(Tensor self, int[2] dim, bool keepdim=False, *, Tensor(a!) out) -> Tensor(a!)
aten::frobenius_norm.dim(Tensor self, int[1] dim, bool keepdim=False) -> Tensor
aten::frobenius_norm.out(Tensor self, int[1] dim, bool keepdim=False, *, Tensor(a!) out) -> Tensor(a!)
aten::group_norm(Tensor input, int num_groups, Tensor? weight=None, Tensor? bias=None, float eps=1.0000000000000001e-05, bool cudnn_enabled=True) -> Tensor
aten::layer_norm(Tensor input, SymInt[] normalized_shape, Tensor? weight=None, Tensor? bias=None, float eps=1.0000000000000001e-05, bool cudnn_enable=True) -> Tensor
aten::softplus(Tensor self, Scalar beta=1, Scalar threshold=20) -> Tensor
aten::softplus.out(Tensor self, Scalar beta=1, Scalar threshold=20, *, Tensor(a!) out) -> Tensor(a!)
aten::empty_strided(SymInt[] size, SymInt[] stride, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
aten::empty_strided.out(SymInt[] size, SymInt[] stride, *, Tensor(a!) out) -> Tensor(a!)
aten::reflection_pad3d_backward(Tensor grad_output, Tensor self, SymInt[6] padding) -> Tensor
aten::reflection_pad3d_backward.grad_input(Tensor grad_output, Tensor self, SymInt[6] padding, *, Tensor(a!) grad_input) -> Tensor(a!)
aten::conj(Tensor(a) self) -> Tensor(a)
aten::ne.Tensor(Tensor self, Tensor other) -> Tensor
aten::ne.Scalar(Tensor self, Scalar other) -> Tensor
aten::ne.Scalar_out(Tensor self, Scalar other, *, Tensor(a!) out) -> Tensor(a!)
aten::ne.Tensor_out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
aten::adjoint(Tensor(a) self) -> Tensor(a)
aten::lstm_cell(Tensor input, Tensor[] hx, Tensor w_ih, Tensor w_hh, Tensor? b_ih=None, Tensor? b_hh=None) -> (Tensor, Tensor)
aten::hsplit.int(Tensor(a -> *) self, int sections) -> Tensor(a)[]
aten::hsplit.array(Tensor(a -> *) self, int[] indices) -> Tensor(a)[]
aten::alias(Tensor(a) self) -> Tensor(a)
aten::xlogy.Tensor(Tensor self, Tensor other) -> Tensor
aten::xlogy.Scalar_Other(Tensor self, Scalar other) -> Tensor
aten::xlogy.Scalar_Self(Scalar self, Tensor other) -> Tensor
aten::xlogy.OutTensor(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
aten::xlogy.OutScalar_Self(Scalar self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
aten::xlogy.OutScalar_Other(Tensor self, Scalar other, *, Tensor(a!) out) -> Tensor(a!)
aten::log_normal_(Tensor(a!) self, float mean=1., float std=2., *, Generator? generator=None) -> Tensor(a!)
aten::_reshape_alias(Tensor(a) self, SymInt[] size, SymInt[] stride) -> Tensor(a)
aten::tan_(Tensor(a!) self) -> Tensor(a!)
aten::unsqueeze_(Tensor(a!) self, int dim) -> Tensor(a!)
aten::_test_check_tensor(Tensor self) -> Tensor
aten::exponential_(Tensor(a!) self, float lambd=1., *, Generator? generator=None) -> Tensor(a!)
aten::linalg_eigvals(Tensor self) -> Tensor
aten::linalg_eigvals.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::unfold(Tensor(a) self, int dimension, int size, int step) -> Tensor(a)
aten::erfinv(Tensor self) -> Tensor
aten::erfinv.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::split_with_sizes(Tensor(a -> *) self, SymInt[] split_sizes, int dim=0) -> Tensor(a)[]
aten::_fake_quantize_per_tensor_affine_cachemask_tensor_qparams(Tensor self, Tensor scale, Tensor zero_point, Tensor fake_quant_enabled, int quant_min, int quant_max) -> (Tensor output, Tensor mask)
aten::_fake_quantize_per_tensor_affine_cachemask_tensor_qparams.out(Tensor self, Tensor scale, Tensor zero_point, Tensor fake_quant_enabled, int quant_min, int quant_max, *, Tensor(a!) out0, Tensor(b!) out1) -> (Tensor(a!), Tensor(b!))
prepacked::conv2d_transpose_clamp_prepack(Tensor W, Tensor? B, int[2] stride, int[2] padding, int[2] output_padding, int[2] dilation, int groups, Scalar? output_min=None, Scalar? output_max=None) -> __torch__.torch.classes.xnnpack.TransposeConv2dOpContext
aten::imag(Tensor(a) self) -> Tensor(a)
aten::real(Tensor(a) self) -> Tensor(a)
aten::abs(Tensor self) -> Tensor
aten::abs.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::transpose_(Tensor(a!) self, int dim0, int dim1) -> Tensor(a!)
aten::_softmax(Tensor self, int dim, bool half_to_float) -> Tensor
aten::_softmax.out(Tensor self, int dim, bool half_to_float, *, Tensor(a!) out) -> Tensor(a!)
aten::transpose.int(Tensor(a) self, int dim0, int dim1) -> Tensor(a)
aten::transpose.Dimname(Tensor(a) self, str dim0, str dim1) -> Tensor(a)
aten::randn_like(Tensor self, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None, MemoryFormat? memory_format=None) -> Tensor
aten::randn_like.out(Tensor self, *, MemoryFormat? memory_format=None, Tensor(a!) out) -> Tensor(a!)
aten::is_floating_point(Tensor self) -> bool
aten::split.Tensor(Tensor(a -> *) self, SymInt split_size, int dim=0) -> Tensor(a)[]
aten::split.sizes(Tensor(a -> *) self, SymInt[] split_size, int dim=0) -> Tensor(a)[]
c10d::recv_any_source_(Tensor[] tensors, __torch__.torch.classes.c10d.ProcessGroup process_group, int tag) -> __torch__.torch.classes.c10d.Work
aten::_native_batch_norm_legit(Tensor input, Tensor? weight, Tensor? bias, Tensor(a!) running_mean, Tensor(b!) running_var, bool training, float momentum, float eps) -> (Tensor, Tensor, Tensor)
aten::_native_batch_norm_legit.no_stats(Tensor input, Tensor? weight, Tensor? bias, bool training, float momentum, float eps) -> (Tensor, Tensor, Tensor)
aten::_native_batch_norm_legit.out(Tensor input, Tensor? weight, Tensor? bias, Tensor(a!) running_mean, Tensor(b!) running_var, bool training, float momentum, float eps, *, Tensor(d!) out, Tensor(e!) save_mean, Tensor(f!) save_invstd) -> (Tensor(d!), Tensor(e!), Tensor(f!))
aten::_native_batch_norm_legit.no_stats_out(Tensor input, Tensor? weight, Tensor? bias, bool training, float momentum, float eps, *, Tensor(a!) out, Tensor(b!) save_mean, Tensor(c!) save_invstd) -> (Tensor(a!), Tensor(b!), Tensor(c!))
aten::_fake_quantize_learnable_per_tensor_affine(Tensor self, Tensor scale, Tensor zero_point, int quant_min, int quant_max, float grad_factor=1.) -> Tensor
aten::_fake_quantize_learnable_per_tensor_affine.out(Tensor self, Tensor scale, Tensor zero_point, int quant_min, int quant_max, float grad_factor=1., *, Tensor(a!) out) -> Tensor(a!)
prepacked::linear_clamp_run(Tensor X, __torch__.torch.classes.xnnpack.LinearOpContext W_prepack) -> Tensor Y
aten::min.other(Tensor self, Tensor other) -> Tensor
aten::min(Tensor self) -> Tensor
aten::min.dim(Tensor self, int dim, bool keepdim=False) -> (Tensor values, Tensor indices)
aten::min.dim_min(Tensor self, int dim, bool keepdim=False, *, Tensor(a!) min, Tensor(b!) min_indices) -> (Tensor(a!) values, Tensor(b!) indices)
aten::min.names_dim(Tensor self, str dim, bool keepdim=False) -> (Tensor values, Tensor indices)
aten::min.names_dim_min(Tensor self, str dim, bool keepdim=False, *, Tensor(a!) min, Tensor(b!) min_indices) -> (Tensor(a!) values, Tensor(b!) indices)
aten::min.out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
aten::as_strided_(Tensor(a!) self, SymInt[] size, SymInt[] stride, SymInt? storage_offset=None) -> Tensor(a!)
aten::rad2deg(Tensor self) -> Tensor
aten::rad2deg.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::randint_like(Tensor self, int high, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None, MemoryFormat? memory_format=None) -> Tensor
aten::randint_like.low_dtype(Tensor self, int low, int high, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None, MemoryFormat? memory_format=None) -> Tensor
aten::randint_like.out(Tensor self, int high, *, MemoryFormat? memory_format=None, Tensor(a!) out) -> Tensor(a!)
aten::randint_like.low_dtype_out(Tensor self, int low, int high, *, MemoryFormat? memory_format=None, Tensor(a!) out) -> Tensor(a!)
aten::bmm(Tensor self, Tensor mat2) -> Tensor
aten::bmm.out(Tensor self, Tensor mat2, *, Tensor(a!) out) -> Tensor(a!)
aten::linalg_eig(Tensor self) -> (Tensor eigenvalues, Tensor eigenvectors)
aten::linalg_eig.out(Tensor self, *, Tensor(a!) eigenvalues, Tensor(b!) eigenvectors) -> (Tensor(a!) eigenvalues, Tensor(b!) eigenvectors)
aten::unflatten.int(Tensor(a) self, int dim, int[] sizes) -> Tensor(a)
aten::unflatten.Dimname(Tensor(a) self, str dim, int[] sizes, str[] names) -> Tensor(a)
aten::logit_backward(Tensor grad_output, Tensor self, float? eps=None) -> Tensor
aten::logit_backward.grad_input(Tensor grad_output, Tensor self, float? eps=None, *, Tensor(a!) grad_input) -> Tensor(a!)
aten::addmm_(Tensor(a!) self, Tensor mat1, Tensor mat2, *, Scalar beta=1, Scalar alpha=1) -> Tensor(a!)
aten::expand(Tensor(a) self, SymInt[] size, *, bool implicit=False) -> Tensor(a)
aten::addmm(Tensor self, Tensor mat1, Tensor mat2, *, Scalar beta=1, Scalar alpha=1) -> Tensor
aten::addmm.out(Tensor self, Tensor mat1, Tensor mat2, *, Scalar beta=1, Scalar alpha=1, Tensor(a!) out) -> Tensor(a!)
aten::expm1(Tensor self) -> Tensor
aten::expm1.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::mm(Tensor self, Tensor mat2) -> Tensor
aten::mm.out(Tensor self, Tensor mat2, *, Tensor(a!) out) -> Tensor(a!)
aten::expand_as(Tensor(a) self, Tensor other) -> Tensor(a)
aten::round(Tensor self) -> Tensor
aten::round.decimals(Tensor self, *, int decimals) -> Tensor
aten::round.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::round.decimals_out(Tensor self, *, int decimals, Tensor(a!) out) -> Tensor(a!)
prepacked::unpack_prepacked_sizes_conv2d(Any W_prepack) -> Any
aten::_euclidean_dist(Tensor x1, Tensor x2) -> Tensor
aten::_euclidean_dist.out(Tensor x1, Tensor x2, *, Tensor(a!) out) -> Tensor(a!)
quantized::conv1d(Tensor qx, __torch__.torch.classes.quantized.Conv2dPackedParamsBase packed_weight, float output_scale, int output_zero_point) -> Tensor
aten::cumsum(Tensor self, int dim, *, ScalarType? dtype=None) -> Tensor
aten::cumsum.dimname(Tensor self, str dim, *, ScalarType? dtype=None) -> Tensor
aten::cumsum.dimname_out(Tensor self, str dim, *, ScalarType? dtype=None, Tensor(a!) out) -> Tensor(a!)
aten::cumsum.out(Tensor self, int dim, *, ScalarType? dtype=None, Tensor(a!) out) -> Tensor(a!)
quantized::quantized_rnn_relu_cell_dynamic(Tensor input, Tensor hx, __torch__.torch.classes.quantized.LinearPackedParamsBase w_ih, __torch__.torch.classes.quantized.LinearPackedParamsBase w_hh, Tensor b_ih, Tensor b_hh) -> Tensor
aten::rand(SymInt[] size, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
aten::rand.generator(SymInt[] size, *, Generator? generator, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
aten::rand.names(SymInt[] size, *, str[]? names, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
aten::rand.generator_with_names(SymInt[] size, *, Generator? generator, str[]? names, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
aten::rand.out(SymInt[] size, *, Tensor(a!) out) -> Tensor(a!)
aten::rand.generator_out(SymInt[] size, *, Generator? generator, Tensor(a!) out) -> Tensor(a!)
aten::rand.names_out(SymInt[] size, *, str[]? names, Tensor(a!) out) -> Tensor(a!)
aten::rand.generator_with_names_out(SymInt[] size, *, Generator? generator, str[]? names, Tensor(a!) out) -> Tensor(a!)
aten::narrow(Tensor(a) self, int dim, SymInt start, SymInt length) -> Tensor(a)
aten::narrow.Tensor(Tensor(a) self, int dim, Tensor start, SymInt length) -> Tensor(a)
aten::resolve_neg(Tensor(a) self) -> Tensor(a)
quantized::batch_norm2d_relu(Tensor qx, Tensor? weight, Tensor? bias, Tensor mean, Tensor var, float eps, float output_scale, int output_zero_point) -> Tensor
aten::resolve_conj(Tensor(a) self) -> Tensor(a)
quantized::batch_norm2d(Tensor qx, Tensor? weight, Tensor? bias, Tensor mean, Tensor var, float eps, float output_scale, int output_zero_point) -> Tensor
aten::repeat_interleave.Tensor(Tensor repeats, *, int? output_size=None) -> Tensor
aten::repeat_interleave.self_Tensor(Tensor self, Tensor repeats, int? dim=None, *, int? output_size=None) -> Tensor
aten::repeat_interleave.self_int(Tensor self, SymInt repeats, int? dim=None, *, int? output_size=None) -> Tensor
aten::repeat_interleave.Tensor_out(Tensor repeats, *, int? output_size=None, Tensor(a!) out) -> Tensor(a!)
sparse::qlinear_relu_dynamic(Tensor X, __torch__.torch.classes.sparse.LinearPackedParamsBase W_prepack) -> Tensor Y
aten::gather_backward(Tensor grad, Tensor self, int dim, Tensor index, bool sparse_grad) -> Tensor
aten::_has_same_storage_numel(Tensor self, Tensor other) -> bool
aten::renorm(Tensor self, Scalar p, int dim, Scalar maxnorm) -> Tensor
aten::renorm.out(Tensor self, Scalar p, int dim, Scalar maxnorm, *, Tensor(a!) out) -> Tensor(a!)
sparse::qlinear(Tensor X, __torch__.torch.classes.sparse.LinearPackedParamsBase W_prepack, float Y_scale_i, int Y_zero_point_i) -> Tensor Y
aten::dsplit.int(Tensor(a -> *) self, int sections) -> Tensor(a)[]
aten::dsplit.array(Tensor(a -> *) self, int[] indices) -> Tensor(a)[]
aten::matmul(Tensor self, Tensor other) -> Tensor
aten::matmul.out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
aten::dstack(Tensor[] tensors) -> Tensor
aten::dstack.out(Tensor[] tensors, *, Tensor(a!) out) -> Tensor(a!)
aten::randn(SymInt[] size, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
aten::randn.generator(SymInt[] size, *, Generator? generator, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
aten::randn.names(SymInt[] size, *, str[]? names, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
aten::randn.generator_with_names(SymInt[] size, *, Generator? generator, str[]? names, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
aten::randn.out(SymInt[] size, *, Tensor(a!) out) -> Tensor(a!)
aten::randn.generator_out(SymInt[] size, *, Generator? generator, Tensor(a!) out) -> Tensor(a!)
aten::randn.names_out(SymInt[] size, *, str[]? names, Tensor(a!) out) -> Tensor(a!)
aten::randn.generator_with_names_out(SymInt[] size, *, Generator? generator, str[]? names, Tensor(a!) out) -> Tensor(a!)
aten::fft_fft(Tensor self, int? n=None, int dim=-1, str? norm=None) -> Tensor
aten::fft_fft.out(Tensor self, int? n=None, int dim=-1, str? norm=None, *, Tensor(a!) out) -> Tensor(a!)
aten::select.Dimname(Tensor(a) self, str dim, int index) -> Tensor(a)
aten::select.int(Tensor(a) self, int dim, SymInt index) -> Tensor(a)
quantized::conv3d_prepack(Tensor weight, Tensor? bias, int[] stride, int[] padding, int[] dilation, int groups) -> __torch__.torch.classes.quantized.Conv3dPackedParamsBase
aten::_prelu_kernel(Tensor self, Tensor weight) -> Tensor
aten::sqrt(Tensor self) -> Tensor
aten::sqrt.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::_fft_c2r(Tensor self, int[] dim, int normalization, int last_dim_size) -> Tensor
aten::_fft_c2r.out(Tensor self, int[] dim, int normalization, int last_dim_size, *, Tensor(a!) out) -> Tensor(a!)
prepacked::conv2d_transpose_clamp_run(Tensor X, __torch__.torch.classes.xnnpack.TransposeConv2dOpContext W_prepack) -> Tensor Y
aten::einsum(str equation, Tensor[] tensors, *, int[]? path=None) -> Tensor
aten::matrix_H(Tensor(a) self) -> Tensor(a)
aten::atan(Tensor self) -> Tensor
aten::atan.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::fft_fft2(Tensor self, int[1]? s=None, int[1] dim=[-2, -1], str? norm=None) -> Tensor
aten::fft_fft2.out(Tensor self, int[1]? s=None, int[1] dim=[-2, -1], str? norm=None, *, Tensor(a!) out) -> Tensor(a!)
aten::select_backward(Tensor grad_output, SymInt[] input_sizes, int dim, SymInt index) -> Tensor
aten::select_backward.out(Tensor grad_output, SymInt[] input_sizes, int dim, SymInt index, *, Tensor(a!) out) -> Tensor(a!)
quantized::conv_transpose1d_prepack(Tensor weight, Tensor? bias, int[] stride, int[] padding, int[] output_padding, int[] dilation, int groups) -> __torch__.torch.classes.quantized.Conv2dPackedParamsBase
aten::linalg_vector_norm(Tensor self, Scalar ord=2, int[1]? dim=None, bool keepdim=False, *, ScalarType? dtype=None) -> Tensor
aten::linalg_vector_norm.out(Tensor self, Scalar ord=2, int[1]? dim=None, bool keepdim=False, *, ScalarType? dtype=None, Tensor(a!) out) -> Tensor(a!)
aten::log(Tensor self) -> Tensor
aten::log.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::view_as(Tensor(a) self, Tensor other) -> Tensor(a)
aten::_unique2(Tensor self, bool sorted=True, bool return_inverse=False, bool return_counts=False) -> (Tensor, Tensor, Tensor)
aten::_unique2.out(Tensor self, bool sorted=True, bool return_inverse=False, bool return_counts=False, *, Tensor(a!) out0, Tensor(b!) out1, Tensor(c!) out2) -> (Tensor(a!), Tensor(b!), Tensor(c!))
aten::linalg_lstsq(Tensor self, Tensor b, float? rcond=None, *, str? driver=None) -> (Tensor solution, Tensor residuals, Tensor rank, Tensor singular_values)
aten::linalg_lstsq.out(Tensor self, Tensor b, float? rcond=None, *, str? driver=None, Tensor(a!) solution, Tensor(b!) residuals, Tensor(c!) rank, Tensor(d!) singular_values) -> (Tensor(a!) solution, Tensor(b!) residuals, Tensor(c!) rank, Tensor(d!) singular_values)
aten::linspace(Scalar start, Scalar end, int steps, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
aten::linspace.out(Scalar start, Scalar end, int steps, *, Tensor(a!) out) -> Tensor(a!)
aten::squeeze(Tensor(a) self) -> Tensor(a)
aten::squeeze.dim(Tensor(a) self, int dim) -> Tensor(a)
aten::squeeze.dims(Tensor(a) self, int[] dim) -> Tensor(a)
aten::squeeze.dimname(Tensor(a) self, str dim) -> Tensor(a)
aten::relu6(Tensor self) -> Tensor
quantized::make_quantized_cell_params_fp16(__torch__.torch.classes.quantized.LinearPackedParamsBase w_ih, __torch__.torch.classes.quantized.LinearPackedParamsBase w_hh) -> __torch__.torch.classes.rnn.CellParamsBase
aten::multiply_.Tensor(Tensor(a!) self, Tensor other) -> Tensor(a!)
aten::multiply_.Scalar(Tensor(a!) self, Scalar other) -> Tensor(a!)
aten::rsqrt(Tensor self) -> Tensor
aten::rsqrt.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
_quantized::conv2d(Tensor qx, __torch__.torch.classes.quantized.Conv2dPackedParamsBase packed_weight, float output_scale, int output_zero_point) -> Tensor
aten::not_equal.Tensor(Tensor self, Tensor other) -> Tensor
aten::not_equal.Scalar(Tensor self, Scalar other) -> Tensor
aten::not_equal.Scalar_out(Tensor self, Scalar other, *, Tensor(a!) out) -> Tensor(a!)
aten::not_equal.Tensor_out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
aten::conj_physical(Tensor self) -> Tensor
aten::conj_physical.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::rand_like(Tensor self, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None, MemoryFormat? memory_format=None) -> Tensor
aten::rand_like.out(Tensor self, *, MemoryFormat? memory_format=None, Tensor(a!) out) -> Tensor(a!)
aten::mode(Tensor self, int dim=-1, bool keepdim=False) -> (Tensor values, Tensor indices)
aten::mode.dimname(Tensor self, str dim, bool keepdim=False) -> (Tensor values, Tensor indices)
aten::mode.dimname_out(Tensor self, str dim, bool keepdim=False, *, Tensor(a!) values, Tensor(b!) indices) -> (Tensor(a!) values, Tensor(b!) indices)
aten::mode.values(Tensor self, int dim=-1, bool keepdim=False, *, Tensor(a!) values, Tensor(b!) indices) -> (Tensor(a!) values, Tensor(b!) indices)
aten::asin(Tensor self) -> Tensor
aten::asin.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::permute(Tensor(a) self, int[] dims) -> Tensor(a)
aten::linalg_vander(Tensor x, *, int? N=None) -> Tensor
aten::logical_not_(Tensor(a!) self) -> Tensor(a!)
aten::trace(Tensor self) -> Tensor
aten::trace.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::le.Tensor(Tensor self, Tensor other) -> Tensor
aten::le.Scalar(Tensor self, Scalar other) -> Tensor
aten::le.Scalar_out(Tensor self, Scalar other, *, Tensor(a!) out) -> Tensor(a!)
aten::le.Tensor_out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
aten::linalg_solve_ex(Tensor A, Tensor B, *, bool left=True, bool check_errors=False) -> (Tensor result, Tensor info)
aten::linalg_solve_ex.out(Tensor A, Tensor B, *, bool left=True, bool check_errors=False, Tensor(a!) result, Tensor(b!) info) -> (Tensor(a!) result, Tensor(b!) info)
aten::replication_pad1d(Tensor self, SymInt[2] padding) -> Tensor
aten::replication_pad1d.out(Tensor self, SymInt[2] padding, *, Tensor(a!) out) -> Tensor(a!)
sparse::qlinear_prepack(Tensor W, Tensor? B, int out_features_block_size, int in_features_block_size) -> __torch__.torch.classes.sparse.LinearPackedParamsBase W_prepack
aten::random_.from(Tensor(a!) self, int from, int? to, *, Generator? generator=None) -> Tensor(a!)
aten::random_.to(Tensor(a!) self, int to, *, Generator? generator=None) -> Tensor(a!)
aten::random_(Tensor(a!) self, *, Generator? generator=None) -> Tensor(a!)
aten::linalg_norm(Tensor self, Scalar? ord=None, int[1]? dim=None, bool keepdim=False, *, ScalarType? dtype=None) -> Tensor
aten::linalg_norm.ord_str(Tensor self, str ord, int[1]? dim=None, bool keepdim=False, *, ScalarType? dtype=None) -> Tensor
aten::linalg_norm.out(Tensor self, Scalar? ord=None, int[1]? dim=None, bool keepdim=False, *, ScalarType? dtype=None, Tensor(a!) out) -> Tensor(a!)
aten::linalg_norm.ord_str_out(Tensor self, str ord, int[1]? dim=None, bool keepdim=False, *, ScalarType? dtype=None, Tensor(a!) out) -> Tensor(a!)
aten::log_sigmoid(Tensor self) -> Tensor
aten::log_sigmoid.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::log2(Tensor self) -> Tensor
aten::log2.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::addmv(Tensor self, Tensor mat, Tensor vec, *, Scalar beta=1, Scalar alpha=1) -> Tensor
aten::addmv.out(Tensor self, Tensor mat, Tensor vec, *, Scalar beta=1, Scalar alpha=1, Tensor(a!) out) -> Tensor(a!)
aten::conj_physical_(Tensor(a!) self) -> Tensor(a!)
aten::neg(Tensor self) -> Tensor
aten::neg.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::dropout_(Tensor(a!) self, float p, bool train) -> Tensor(a!)
aten::randint(int high, SymInt[] size, *, ScalarType? dtype=4, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
aten::randint.generator(int high, SymInt[] size, *, Generator? generator, ScalarType? dtype=4, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
aten::randint.low(int low, int high, SymInt[] size, *, ScalarType? dtype=4, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
aten::randint.low_generator(int low, int high, SymInt[] size, *, Generator? generator, ScalarType? dtype=4, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
aten::randint.out(int high, SymInt[] size, *, Tensor(a!) out) -> Tensor(a!)
aten::randint.generator_out(int high, SymInt[] size, *, Generator? generator, Tensor(a!) out) -> Tensor(a!)
aten::randint.low_out(int low, int high, SymInt[] size, *, Tensor(a!) out) -> Tensor(a!)
aten::randint.low_generator_out(int low, int high, SymInt[] size, *, Generator? generator, Tensor(a!) out) -> Tensor(a!)
aten::linalg_vecdot(Tensor x, Tensor y, *, int dim=-1) -> Tensor
aten::linalg_vecdot.out(Tensor x, Tensor y, *, int dim=-1, Tensor(a!) out) -> Tensor(a!)
aten::swapaxes(Tensor(a) self, int axis0, int axis1) -> Tensor(a)
aten::is_complex(Tensor self) -> bool
aten::polygamma(int n, Tensor self) -> Tensor
aten::polygamma.out(int n, Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::cos(Tensor self) -> Tensor
aten::cos.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::squeeze_(Tensor(a!) self) -> Tensor(a!)
aten::squeeze_.dim(Tensor(a!) self, int dim) -> Tensor(a!)
aten::squeeze_.dims(Tensor(a!) self, int[] dim) -> Tensor(a!)
aten::squeeze_.dimname(Tensor(a!) self, str dim) -> Tensor(a!)
aten::div_.Tensor(Tensor(a!) self, Tensor other) -> Tensor(a!)
aten::div_.Scalar(Tensor(a!) self, Scalar other) -> Tensor(a!)
aten::div_.Tensor_mode(Tensor(a!) self, Tensor other, *, str? rounding_mode) -> Tensor(a!)
aten::div_.Scalar_mode(Tensor(a!) self, Scalar other, *, str? rounding_mode) -> Tensor(a!)
aten::meshgrid(Tensor[] tensors) -> Tensor[]
aten::meshgrid.indexing(Tensor[] tensors, *, str indexing) -> Tensor[]
aten::as_strided(Tensor(a) self, SymInt[] size, SymInt[] stride, SymInt? storage_offset=None) -> Tensor(a)
aten::linalg_svd(Tensor A, bool full_matrices=True, *, str? driver=None) -> (Tensor U, Tensor S, Tensor Vh)
aten::linalg_svd.U(Tensor A, bool full_matrices=True, *, str? driver=None, Tensor(a!) U, Tensor(b!) S, Tensor(c!) Vh) -> (Tensor(a!) U, Tensor(b!) S, Tensor(c!) Vh)
aten::logdet(Tensor self) -> Tensor
aten::swapdims(Tensor(a) self, int dim0, int dim1) -> Tensor(a)
aten::linalg_eigh(Tensor self, str UPLO="L") -> (Tensor eigenvalues, Tensor eigenvectors)
aten::linalg_eigh.eigvals(Tensor self, str UPLO="L", *, Tensor(a!) eigvals, Tensor(b!) eigvecs) -> (Tensor(a!) eigenvalues, Tensor(b!) eigenvectors)
aten::_to_copy(Tensor self, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None, bool non_blocking=False, MemoryFormat? memory_format=None) -> Tensor
aten::_to_copy.out(Tensor self, *, bool non_blocking=False, MemoryFormat? memory_format=None, Tensor(a!) out) -> Tensor(a!)
aten::upsample_trilinear3d.vec(Tensor input, SymInt[]? output_size, bool align_corners, float[]? scale_factors) -> Tensor
aten::upsample_trilinear3d(Tensor self, SymInt[3] output_size, bool align_corners, float? scales_d=None, float? scales_h=None, float? scales_w=None) -> Tensor
aten::upsample_trilinear3d.out(Tensor self, SymInt[3] output_size, bool align_corners, float? scales_d=None, float? scales_h=None, float? scales_w=None, *, Tensor(a!) out) -> Tensor(a!)
aten::elu_backward(Tensor grad_output, Scalar alpha, Scalar scale, Scalar input_scale, bool is_result, Tensor self_or_result) -> Tensor
aten::elu_backward.grad_input(Tensor grad_output, Scalar alpha, Scalar scale, Scalar input_scale, bool is_result, Tensor self_or_result, *, Tensor(a!) grad_input) -> Tensor(a!)
aten::randperm(int n, *, ScalarType? dtype=4, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
aten::randperm.generator(int n, *, Generator? generator, ScalarType? dtype=4, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
aten::randperm.out(int n, *, Tensor(a!) out) -> Tensor(a!)
aten::randperm.generator_out(int n, *, Generator? generator, Tensor(a!) out) -> Tensor(a!)
aten::minimum(Tensor self, Tensor other) -> Tensor
aten::minimum.out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
aten::log1p(Tensor self) -> Tensor
aten::log1p.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::view_as_real(Tensor(a) self) -> Tensor(a)
aten::linalg_tensorinv(Tensor self, int ind=2) -> Tensor
aten::linalg_tensorinv.out(Tensor self, int ind=2, *, Tensor(a!) out) -> Tensor(a!)
aten::logical_and_(Tensor(a!) self, Tensor other) -> Tensor(a!)
aten::t(Tensor(a) self) -> Tensor(a)
aten::log10(Tensor self) -> Tensor
aten::log10.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::baddbmm(Tensor self, Tensor batch1, Tensor batch2, *, Scalar beta=1, Scalar alpha=1) -> Tensor
aten::baddbmm.out(Tensor self, Tensor batch1, Tensor batch2, *, Scalar beta=1, Scalar alpha=1, Tensor(a!) out) -> Tensor(a!)
aten::linear(Tensor input, Tensor weight, Tensor? bias=None) -> Tensor
aten::linear.out(Tensor input, Tensor weight, Tensor? bias=None, *, Tensor(a!) out) -> Tensor(a!)
aten::linalg_svdvals(Tensor A, *, str? driver=None) -> Tensor
aten::linalg_svdvals.out(Tensor A, *, str? driver=None, Tensor(a!) out) -> Tensor(a!)
aten::pow.Tensor_Tensor(Tensor self, Tensor exponent) -> Tensor
aten::pow.Tensor_Scalar(Tensor self, Scalar exponent) -> Tensor
aten::pow.Scalar(Scalar self, Tensor exponent) -> Tensor
aten::pow.Scalar_out(Scalar self, Tensor exponent, *, Tensor(a!) out) -> Tensor(a!)
aten::pow.Tensor_Scalar_out(Tensor self, Scalar exponent, *, Tensor(a!) out) -> Tensor(a!)
aten::pow.Tensor_Tensor_out(Tensor self, Tensor exponent, *, Tensor(a!) out) -> Tensor(a!)
aten::tanh(Tensor self) -> Tensor
aten::tanh.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::dot(Tensor self, Tensor tensor) -> Tensor
aten::dot.out(Tensor self, Tensor tensor, *, Tensor(a!) out) -> Tensor(a!)
aten::fill_.Scalar(Tensor(a!) self, Scalar value) -> Tensor(a!)
aten::fill_.Tensor(Tensor(a!) self, Tensor value) -> Tensor(a!)
aten::linalg_tensorsolve(Tensor self, Tensor other, int[]? dims=None) -> Tensor
aten::linalg_tensorsolve.out(Tensor self, Tensor other, int[]? dims=None, *, Tensor(a!) out) -> Tensor(a!)
aten::logical_not(Tensor self) -> Tensor
aten::logical_not.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::t_(Tensor(a!) self) -> Tensor(a!)
aten::cosine_similarity(Tensor x1, Tensor x2, int dim=1, float eps=1e-08) -> Tensor
aten::logit(Tensor self, float? eps=None) -> Tensor
aten::logit.out(Tensor self, float? eps=None, *, Tensor(a!) out) -> Tensor(a!)
aten::view(Tensor(a) self, SymInt[] size) -> Tensor(a)
aten::view.dtype(Tensor(a) self, ScalarType dtype) -> Tensor(a)
aten::unsqueeze(Tensor(a) self, int dim) -> Tensor(a)
aten::log10_(Tensor(a!) self) -> Tensor(a!)
aten::_unsafe_view(Tensor self, SymInt[] size) -> Tensor
aten::_unsafe_view.out(Tensor self, SymInt[] size, *, Tensor(a!) out) -> Tensor(a!)
aten::tensor_split.sections(Tensor(a -> *) self, SymInt sections, int dim=0) -> Tensor(a)[]
aten::tensor_split.indices(Tensor(a -> *) self, SymInt[] indices, int dim=0) -> Tensor(a)[]
aten::tensor_split.tensor_indices_or_sections(Tensor(a -> *) self, Tensor tensor_indices_or_sections, int dim=0) -> Tensor(a)[]
aten::replication_pad2d(Tensor self, SymInt[4] padding) -> Tensor
aten::replication_pad2d.out(Tensor self, SymInt[4] padding, *, Tensor(a!) out) -> Tensor(a!)
quantized::add(Tensor qa, Tensor qb, float scale, int zero_point) -> Tensor qc
quantized::add.out(Tensor qa, Tensor qb, Tensor(a!) out) -> Tensor(a!) out
quantized::add.Scalar(Tensor qa, Scalar b) -> Tensor qc
quantized::add.Scalar2(Scalar b, Tensor qa) -> Tensor qc
quantized::add.Scalar_out(Tensor qa, Scalar b, Tensor(a!) out) -> Tensor(a!) out
aten::range.step(Scalar start, Scalar end, Scalar step=1, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
aten::range(Scalar start, Scalar end, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
aten::range.out(Scalar start, Scalar end, Scalar step=1, *, Tensor(a!) out) -> Tensor(a!)
aten::range.out_(Scalar start, Scalar end, *, Tensor(a!) out) -> Tensor(a!)
aten::detach(Tensor(a) self) -> Tensor(a)
aten::embedding_backward(Tensor grad, Tensor indices, SymInt num_weights, SymInt padding_idx, bool scale_grad_by_freq, bool sparse) -> Tensor
aten::ravel(Tensor(a) self) -> Tensor(a)
aten::native_layer_norm(Tensor input, SymInt[] normalized_shape, Tensor? weight, Tensor? bias, float eps) -> (Tensor, Tensor, Tensor)
aten::native_layer_norm.out(Tensor input, SymInt[] normalized_shape, Tensor? weight, Tensor? bias, float eps, *, Tensor(a!) out0, Tensor(b!) out1, Tensor(c!) out2) -> (Tensor(a!), Tensor(b!), Tensor(c!))
aten::ceil(Tensor self) -> Tensor
aten::ceil.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::detach_(Tensor(a!) self) -> Tensor(a!)
aten::replication_pad3d(Tensor self, SymInt[6] padding) -> Tensor
aten::replication_pad3d.out(Tensor self, SymInt[6] padding, *, Tensor(a!) out) -> Tensor(a!)
quantized::add_out(Tensor qa, Tensor qb, Tensor(a!) out) -> Tensor(a!) out
aten::fft_hfftn(Tensor self, int[1]? s=None, int[1]? dim=None, str? norm=None) -> Tensor
aten::fft_hfftn.out(Tensor self, int[1]? s=None, int[1]? dim=None, str? norm=None, *, Tensor(a!) out) -> Tensor(a!)
aten::set_.source_Storage_storage_offset(Tensor(a!) self, Storage source, SymInt storage_offset, SymInt[] size, SymInt[] stride=[]) -> Tensor(a!)
aten::set_.source_Tensor(Tensor(a!) self, Tensor source) -> Tensor(a!)
aten::set_(Tensor(a!) self) -> Tensor(a!)
aten::set_.source_Storage(Tensor(a!) self, Storage source) -> Tensor(a!)
aten::set_.source_Tensor_storage_offset(Tensor(a!) self, Tensor source, SymInt storage_offset, SymInt[] size, SymInt[] stride=[]) -> Tensor(a!)
_quantized::conv_transpose2d_prepack(Tensor weight, Tensor? bias, int[] stride, int[] padding, int[] output_padding, int[] dilation, int groups) -> __torch__.torch.classes.quantized.Conv2dPackedParamsBase
aten::poisson(Tensor self, Generator? generator=None) -> Tensor
aten::poisson.out(Tensor self, Generator? generator=None, *, Tensor(a!) out) -> Tensor(a!)
aten::gt.Tensor(Tensor self, Tensor other) -> Tensor
aten::gt.Scalar(Tensor self, Scalar other) -> Tensor
aten::gt.Scalar_out(Tensor self, Scalar other, *, Tensor(a!) out) -> Tensor(a!)
aten::gt.Tensor_out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
aten::_grid_sampler_2d_cpu_fallback(Tensor input, Tensor grid, int interpolation_mode, int padding_mode, bool align_corners) -> Tensor
aten::_grid_sampler_2d_cpu_fallback.out(Tensor input, Tensor grid, int interpolation_mode, int padding_mode, bool align_corners, *, Tensor(a!) out) -> Tensor(a!)
aten::special_gammainc(Tensor self, Tensor other) -> Tensor
aten::special_gammainc.out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
aten::_convert_indices_from_csr_to_coo(Tensor crow_indices, Tensor col_indices, *, bool out_int32=False, bool transpose=False) -> Tensor
aten::_convert_indices_from_csr_to_coo.out(Tensor crow_indices, Tensor col_indices, *, bool out_int32=False, bool transpose=False, Tensor(a!) out) -> Tensor(a!)
quantized::conv3d_groups(__torch__.torch.classes.quantized.Conv3dPackedParamsBase packed_weights) -> int
aten::full_like(Tensor self, Scalar fill_value, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None, MemoryFormat? memory_format=None) -> Tensor
aten::full_like.out(Tensor self, Scalar fill_value, *, MemoryFormat? memory_format=None, Tensor(a!) out) -> Tensor(a!)
aten::fix(Tensor self) -> Tensor
aten::fix.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::size.int(Tensor self, int dim) -> int
aten::size.Dimname(Tensor self, str dim) -> int
quantized::embedding_bag_unpack(__torch__.torch.classes.quantized.EmbeddingPackedParamsBase W_prepack) -> Tensor W_origin
aten::movedim.int(Tensor(a) self, int source, int destination) -> Tensor(a)
aten::movedim.intlist(Tensor(a) self, int[] source, int[] destination) -> Tensor(a)
aten::bernoulli(Tensor self, *, Generator? generator=None) -> Tensor
aten::bernoulli.out(Tensor self, *, Generator? generator=None, Tensor(a!) out) -> Tensor(a!)
aten::bernoulli.p(Tensor self, float p, *, Generator? generator=None) -> Tensor
aten::bernoulli.Tensor(Tensor self, Tensor p, *, Generator? generator=None) -> Tensor
aten::bernoulli.Tensor_out(Tensor self, Tensor p, *, Generator? generator=None, Tensor(a!) out) -> Tensor(a!)
aten::bernoulli.float_out(Tensor self, float p=0.5, *, Generator? generator=None, Tensor(a!) out) -> Tensor(a!)
aten::floor(Tensor self) -> Tensor
aten::floor.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::_new_zeros_with_same_feature_meta(Tensor self, Tensor other, *, int self_num_batch_dims=0) -> Tensor
aten::_new_zeros_with_same_feature_meta.out(Tensor self, Tensor other, *, int self_num_batch_dims=0, Tensor(a!) out) -> Tensor(a!)
aten::subtract.Tensor(Tensor self, Tensor other, *, Scalar alpha=1) -> Tensor
aten::subtract.out(Tensor self, Tensor other, *, Scalar alpha=1, Tensor(a!) out) -> Tensor(a!)
aten::subtract.Scalar(Tensor self, Scalar other, Scalar alpha=1) -> Tensor
aten::cauchy_(Tensor(a!) self, float median=0., float sigma=1., *, Generator? generator=None) -> Tensor(a!)
aten::combinations(Tensor self, int r=2, bool with_replacement=False) -> Tensor
aten::norm.Scalar(Tensor self, Scalar p=2) -> Tensor
aten::norm.ScalarOpt_dim(Tensor self, Scalar? p, int[1] dim, bool keepdim=False) -> Tensor
aten::norm.names_ScalarOpt_dim(Tensor self, Scalar? p, str[1] dim, bool keepdim=False) -> Tensor
aten::norm.ScalarOpt_dim_dtype(Tensor self, Scalar? p, int[1] dim, bool keepdim, *, ScalarType dtype) -> Tensor
aten::norm.dtype_out(Tensor self, Scalar? p, int[1] dim, bool keepdim, *, ScalarType dtype, Tensor(a!) out) -> Tensor(a!)
aten::norm.out(Tensor self, Scalar? p, int[1] dim, bool keepdim=False, *, Tensor(a!) out) -> Tensor(a!)
aten::norm.ScalarOpt_dtype(Tensor self, Scalar? p, *, ScalarType dtype) -> Tensor
aten::norm.ScalarOpt_dtype_out(Tensor self, Scalar? p, *, ScalarType dtype, Tensor(a!) out) -> Tensor(a!)
aten::norm.Scalar_out(Tensor self, Scalar p=2, *, Tensor(a!) out) -> Tensor(a!)
aten::norm.names_ScalarOpt_dim_dtype(Tensor self, Scalar? p, str[1] dim, bool keepdim, *, ScalarType dtype) -> Tensor
aten::norm.names_dtype_out(Tensor self, Scalar? p, str[1] dim, bool keepdim, *, ScalarType dtype, Tensor(a!) out) -> Tensor(a!)
aten::norm.names_out(Tensor self, Scalar? p, str[1] dim, bool keepdim=False, *, Tensor(a!) out) -> Tensor(a!)
aten::mul.Tensor(Tensor self, Tensor other) -> Tensor
aten::mul.Scalar(Tensor self, Scalar other) -> Tensor
aten::mul.out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
aten::mul.Scalar_out(Tensor self, Scalar other, *, Tensor(a!) out) -> Tensor(a!)
aten::linalg_qr(Tensor A, str mode="reduced") -> (Tensor Q, Tensor R)
aten::linalg_qr.out(Tensor A, str mode="reduced", *, Tensor(a!) Q, Tensor(b!) R) -> (Tensor(a!) Q, Tensor(b!) R)
aten::log_sigmoid_forward(Tensor self) -> (Tensor output, Tensor buffer)
aten::log_sigmoid_forward.output(Tensor self, *, Tensor(a!) output, Tensor(b!) buffer) -> (Tensor(a!), Tensor(b!))
aten::sum.dim_IntList(Tensor self, int[1]? dim, bool keepdim=False, *, ScalarType? dtype=None) -> Tensor
aten::sum(Tensor self, *, ScalarType? dtype=None) -> Tensor
aten::sum.dim_DimnameList(Tensor self, str[1] dim, bool keepdim=False, *, ScalarType? dtype=None) -> Tensor
aten::sum.DimnameList_out(Tensor self, str[1] dim, bool keepdim=False, *, ScalarType? dtype=None, Tensor(a!) out) -> Tensor(a!)
aten::sum.IntList_out(Tensor self, int[1]? dim, bool keepdim=False, *, ScalarType? dtype=None, Tensor(a!) out) -> Tensor(a!)
aten::sum.out(Tensor self, *, ScalarType? dtype=None, Tensor(a!) out) -> Tensor(a!)
aten::linalg_cond(Tensor self, Scalar? p=None) -> Tensor
aten::linalg_cond.p_str(Tensor self, str p) -> Tensor
aten::linalg_cond.out(Tensor self, Scalar? p=None, *, Tensor(a!) out) -> Tensor(a!)
aten::linalg_cond.p_str_out(Tensor self, str p, *, Tensor(a!) out) -> Tensor(a!)
aten::_thnn_fused_gru_cell(Tensor input_gates, Tensor hidden_gates, Tensor hx, Tensor? input_bias=None, Tensor? hidden_bias=None) -> (Tensor, Tensor)
aten::_thnn_fused_gru_cell.out(Tensor input_gates, Tensor hidden_gates, Tensor hx, Tensor? input_bias=None, Tensor? hidden_bias=None, *, Tensor(a!) out0, Tensor(b!) out1) -> (Tensor(a!), Tensor(b!))
aten::upsample_nearest1d_backward(Tensor grad_output, SymInt[1] output_size, SymInt[3] input_size, float? scales=None) -> Tensor
aten::upsample_nearest1d_backward.grad_input(Tensor grad_output, SymInt[1] output_size, SymInt[3] input_size, float? scales=None, *, Tensor(a!) grad_input) -> Tensor(a!)
aten::concat(Tensor[] tensors, int dim=0) -> Tensor
aten::concat.out(Tensor[] tensors, int dim=0, *, Tensor(a!) out) -> Tensor(a!)
aten::concat.names(Tensor[] tensors, str dim) -> Tensor
aten::concat.names_out(Tensor[] tensors, str dim, *, Tensor(a!) out) -> Tensor(a!)
aten::normal.Tensor_float(Tensor mean, float std=1., *, Generator? generator=None) -> Tensor
aten::normal.Tensor_float_out(Tensor mean, float std=1., *, Generator? generator=None, Tensor(a!) out) -> Tensor(a!)
aten::normal.float_Tensor_out(float mean, Tensor std, *, Generator? generator=None, Tensor(a!) out) -> Tensor(a!)
aten::normal.float_Tensor(float mean, Tensor std, *, Generator? generator=None) -> Tensor
aten::normal.Tensor_Tensor(Tensor mean, Tensor std, *, Generator? generator=None) -> Tensor
aten::normal.Tensor_Tensor_out(Tensor mean, Tensor std, *, Generator? generator=None, Tensor(a!) out) -> Tensor(a!)
aten::normal.float_float(float mean, float std, SymInt[] size, *, Generator? generator=None, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
aten::normal.float_float_out(float mean, float std, SymInt[] size, *, Generator? generator=None, Tensor(a!) out) -> Tensor(a!)
aten::normal.out(Tensor self, float mean=0., float std=1., *, Generator? generator=None, Tensor(a!) out) -> Tensor(a!)
aten::linalg_solve(Tensor A, Tensor B, *, bool left=True) -> Tensor
aten::linalg_solve.out(Tensor A, Tensor B, *, bool left=True, Tensor(a!) out) -> Tensor(a!)
aten::logaddexp(Tensor self, Tensor other) -> Tensor
aten::logaddexp.out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
aten::linalg_det(Tensor A) -> Tensor
aten::linalg_det.out(Tensor A, *, Tensor(a!) out) -> Tensor(a!)
aten::unbind.int(Tensor(a -> *) self, int dim=0) -> Tensor(a)[]
aten::unbind.Dimname(Tensor(a -> *) self, str dim) -> Tensor(a)[]
aten::_thnn_fused_lstm_cell(Tensor input_gates, Tensor hidden_gates, Tensor cx, Tensor? input_bias=None, Tensor? hidden_bias=None) -> (Tensor, Tensor, Tensor)
aten::_thnn_fused_lstm_cell.out(Tensor input_gates, Tensor hidden_gates, Tensor cx, Tensor? input_bias=None, Tensor? hidden_bias=None, *, Tensor(a!) out0, Tensor(b!) out1, Tensor(c!) out2) -> (Tensor(a!), Tensor(b!), Tensor(c!))
aten::upsample_nearest2d_backward(Tensor grad_output, SymInt[2] output_size, SymInt[4] input_size, float? scales_h=None, float? scales_w=None) -> Tensor
aten::upsample_nearest2d_backward.grad_input(Tensor grad_output, SymInt[2] output_size, SymInt[4] input_size, float? scales_h=None, float? scales_w=None, *, Tensor(a!) grad_input) -> Tensor(a!)
aten::requires_grad_(Tensor(a!) self, bool requires_grad=True) -> Tensor(a!)
quantized::add_scalar_relu(Tensor qa, Scalar b) -> Tensor qc
quantized::add_scalar_relu.Tensor(Tensor qa, Tensor b) -> Tensor qc
aten::linalg_matrix_power(Tensor self, int n) -> Tensor
aten::linalg_matrix_power.out(Tensor self, int n, *, Tensor(a!) out) -> Tensor(a!)
aten::log_(Tensor(a!) self) -> Tensor(a!)
aten::stride.int(Tensor self, int dim) -> int
aten::stride.Dimname(Tensor self, str dim) -> int
aten::linalg_matrix_rank(Tensor self, float tol, bool hermitian=False) -> Tensor
aten::linalg_matrix_rank.tol_tensor(Tensor input, Tensor tol, bool hermitian=False) -> Tensor
aten::linalg_matrix_rank.atol_rtol_tensor(Tensor input, *, Tensor? atol=None, Tensor? rtol=None, bool hermitian=False) -> Tensor
aten::linalg_matrix_rank.atol_rtol_float(Tensor self, *, float? atol=None, float? rtol=None, bool hermitian=False) -> Tensor
aten::linalg_matrix_rank.atol_rtol_tensor_out(Tensor input, *, Tensor? atol=None, Tensor? rtol=None, bool hermitian=False, Tensor(a!) out) -> Tensor(a!)
aten::linalg_matrix_rank.atol_rtol_float_out(Tensor self, *, float? atol=None, float? rtol=None, bool hermitian=False, Tensor(a!) out) -> Tensor(a!)
aten::linalg_matrix_rank.out(Tensor self, float tol, bool hermitian=False, *, Tensor(a!) out) -> Tensor(a!)
aten::linalg_matrix_rank.out_tol_tensor(Tensor input, Tensor tol, bool hermitian=False, *, Tensor(a!) out) -> Tensor(a!)
aten::sub.Tensor(Tensor self, Tensor other, *, Scalar alpha=1) -> Tensor
aten::sub.Scalar(Tensor self, Scalar other, Scalar alpha=1) -> Tensor
aten::sub.out(Tensor self, Tensor other, *, Scalar alpha=1, Tensor(a!) out) -> Tensor(a!)
aten::sub.Scalar_out(Tensor self, Scalar other, Scalar alpha=1, *, Tensor(a!) out) -> Tensor(a!)
aten::cudnn_convolution_transpose(Tensor self, Tensor weight, int[] padding, int[] output_padding, int[] stride, int[] dilation, int groups, bool benchmark, bool deterministic, bool allow_tf32) -> Tensor
aten::cudnn_convolution_transpose.out(Tensor self, Tensor weight, int[] padding, int[] output_padding, int[] stride, int[] dilation, int groups, bool benchmark, bool deterministic, bool allow_tf32, *, Tensor(a!) out) -> Tensor(a!)
aten::reshape(Tensor(a) self, SymInt[] shape) -> Tensor(a)
quantized::add_scalar_out(Tensor qa, Scalar b, Tensor(a!) out) -> Tensor(a!) out
quantized::add_scalar_out.Tensor(Tensor qa, Tensor b, Tensor(a!) out) -> Tensor(a!) out
aten::refine_names(Tensor(a) self, str[] names) -> Tensor(a)
aten::fft_ifftshift(Tensor self, int[1]? dim=None) -> Tensor
aten::sigmoid(Tensor self) -> Tensor
aten::sigmoid.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
quantized::celu(Tensor self, float output_scale, int output_zero_point, Scalar alpha=1) -> Tensor
aten::diagonal(Tensor(a) self, int offset=0, int dim1=0, int dim2=1) -> Tensor(a)
aten::diagonal.Dimname(Tensor(a) self, *, str outdim, str dim1, str dim2, int offset=0) -> Tensor(a)
aten::linalg_solve_triangular(Tensor self, Tensor B, *, bool upper, bool left=True, bool unitriangular=False) -> Tensor
aten::linalg_solve_triangular.out(Tensor self, Tensor B, *, bool upper, bool left=True, bool unitriangular=False, Tensor(a!) out) -> Tensor(a!)
aten::logcumsumexp(Tensor self, int dim) -> Tensor
aten::logcumsumexp.dimname(Tensor self, str dim) -> Tensor
aten::logcumsumexp.dimname_out(Tensor self, str dim, *, Tensor(a!) out) -> Tensor(a!)
aten::logcumsumexp.out(Tensor self, int dim, *, Tensor(a!) out) -> Tensor(a!)
aten::clone(Tensor self, *, MemoryFormat? memory_format=None) -> Tensor
aten::clone.out(Tensor self, *, MemoryFormat? memory_format=None, Tensor(a!) out) -> Tensor(a!)
aten::empty_like(Tensor self, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None, MemoryFormat? memory_format=None) -> Tensor
aten::empty_like.out(Tensor self, *, MemoryFormat? memory_format=None, Tensor(a!) out) -> Tensor(a!)
aten::reflection_pad1d_backward(Tensor grad_output, Tensor self, SymInt[2] padding) -> Tensor
aten::reflection_pad1d_backward.grad_input(Tensor grad_output, Tensor self, SymInt[2] padding, *, Tensor(a!) grad_input) -> Tensor(a!)
aten::sigmoid_backward(Tensor grad_output, Tensor output) -> Tensor
aten::sigmoid_backward.grad_input(Tensor grad_output, Tensor output, *, Tensor(a!) grad_input) -> Tensor(a!)
quantized::embedding_bag_4bit(__torch__.torch.classes.quantized.EmbeddingPackedParamsBase weight, Tensor indices, Tensor? offsets=None, bool scale_grad_by_freq=False, int mode=0, bool pruned_weights=False, Tensor? per_sample_weights=None, Tensor? compressed_indices_mapping=None, bool include_last_offset=False) -> Tensor
aten::resize_(Tensor(a!) self, SymInt[] size, *, MemoryFormat? memory_format=None) -> Tensor(a!)
_quantized::add(Tensor qa, Tensor qb, float scale, int zero_point) -> Tensor qc
aten::sign(Tensor self) -> Tensor
aten::sign.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
quantized::embedding_byte(__torch__.torch.classes.quantized.EmbeddingPackedParamsBase weight, Tensor indices, bool pruned_weights=False) -> Tensor
aten::baddbmm_(Tensor(a!) self, Tensor batch1, Tensor batch2, *, Scalar beta=1, Scalar alpha=1) -> Tensor(a!)
aten::softmax.int(Tensor self, int dim, ScalarType? dtype=None) -> Tensor
aten::softmax.Dimname(Tensor self, str dim, *, ScalarType? dtype=None) -> Tensor
aten::softmax.int_out(Tensor self, int dim, ScalarType? dtype=None, *, Tensor(a!) out) -> Tensor(a!)
aten::frac(Tensor self) -> Tensor
aten::frac.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::vdot(Tensor self, Tensor other) -> Tensor
aten::vdot.out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
aten::remainder.Tensor(Tensor self, Tensor other) -> Tensor
aten::remainder.Scalar(Tensor self, Scalar other) -> Tensor
aten::remainder.Scalar_Tensor(Scalar self, Tensor other) -> Tensor
aten::remainder.Tensor_out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
aten::remainder.Scalar_out(Tensor self, Scalar other, *, Tensor(a!) out) -> Tensor(a!)
aten::remainder.Scalar_Tensor_out(Scalar self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
quantized::quantized_gru_cell_dynamic(Tensor input, Tensor hx, __torch__.torch.classes.quantized.LinearPackedParamsBase w_ih, __torch__.torch.classes.quantized.LinearPackedParamsBase w_hh, Tensor b_ih, Tensor b_hh) -> Tensor
aten::rad2deg_(Tensor(a!) self) -> Tensor(a!)
aten::pinverse(Tensor self, float rcond=1.0000000000000001e-15) -> Tensor
aten::copy_(Tensor(a!) self, Tensor src, bool non_blocking=False) -> Tensor(a!)
aten::lift(Tensor self) -> Tensor
aten::lift.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::threshold_backward(Tensor grad_output, Tensor self, Scalar threshold) -> Tensor
aten::threshold_backward.grad_input(Tensor grad_output, Tensor self, Scalar threshold, *, Tensor(a!) grad_input) -> Tensor(a!)
aten::reflection_pad1d(Tensor self, SymInt[2] padding) -> Tensor
aten::reflection_pad1d.out(Tensor self, SymInt[2] padding, *, Tensor(a!) out) -> Tensor(a!)
aten::diagonal_backward(Tensor grad_output, SymInt[] input_sizes, int offset, int dim1, int dim2) -> Tensor
aten::diagonal_backward.out(Tensor grad_output, SymInt[] input_sizes, int offset, int dim1, int dim2, *, Tensor(a!) out) -> Tensor(a!)
aten::lift_fresh(Tensor(a) self) -> Tensor(a)
aten::lift_fresh_copy(Tensor self) -> Tensor
aten::lift_fresh_copy.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::to.device(Tensor(a) self, Device device, ScalarType dtype, bool non_blocking=False, bool copy=False, MemoryFormat? memory_format=None) -> Tensor(a)
aten::to.dtype(Tensor(a) self, ScalarType dtype, bool non_blocking=False, bool copy=False, MemoryFormat? memory_format=None) -> Tensor(a)
aten::to.other(Tensor(a) self, Tensor other, bool non_blocking=False, bool copy=False, MemoryFormat? memory_format=None) -> Tensor(a)
aten::to.dtype_layout(Tensor(a) self, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None, bool non_blocking=False, bool copy=False, MemoryFormat? memory_format=None) -> Tensor(a)
aten::index_copy(Tensor self, int dim, Tensor index, Tensor source) -> Tensor
aten::index_copy.dimname(Tensor self, str dim, Tensor index, Tensor source) -> Tensor
aten::index_copy.out(Tensor self, int dim, Tensor index, Tensor source, *, Tensor(a!) out) -> Tensor(a!)
aten::_remove_batch_dim(Tensor self, int level, int batch_size, int out_dim) -> Tensor
aten::tan(Tensor self) -> Tensor
aten::tan.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
c10d::allgather_coalesced_(Tensor[][] output_lists, Tensor[] input_list, __torch__.torch.classes.c10d.ProcessGroup process_group) -> __torch__.torch.classes.c10d.Work
aten::_make_dual(Tensor(a) primal, Tensor tangent, int level) -> Tensor(a)
aten::is_same_size(Tensor self, Tensor other) -> bool
aten::adaptive_avg_pool3d(Tensor self, SymInt[3] output_size) -> Tensor
aten::adaptive_avg_pool3d.out(Tensor self, SymInt[3] output_size, *, Tensor(a!) out) -> Tensor(a!)
aten::zero_(Tensor(a!) self) -> Tensor(a!)
aten::mH(Tensor(a) self) -> Tensor(a)
aten::mT(Tensor(a) self) -> Tensor(a)
aten::scaled_dot_product_attention(Tensor query, Tensor key, Tensor value, Tensor? attn_mask=None, float dropout_p=0., bool is_causal=False) -> Tensor
quantized::conv1d_dynamic(Tensor qx, __torch__.torch.classes.quantized.Conv2dPackedParamsBase packed_weight, bool reduce_range=False) -> Tensor
aten::empty.memory_format(SymInt[] size, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None, MemoryFormat? memory_format=None) -> Tensor
aten::empty.out(SymInt[] size, *, MemoryFormat? memory_format=None, Tensor(a!) out) -> Tensor(a!)
aten::empty.names(int[] size, *, str[]? names, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None, MemoryFormat? memory_format=None) -> Tensor
aten::empty.names_out(int[] size, *, str[]? names, MemoryFormat? memory_format=None, Tensor(a!) out) -> Tensor(a!)
aten::reshape_as(Tensor(a) self, Tensor other) -> Tensor(a)
quantized::add_scalar_relu_out(Tensor qa, Scalar b, Tensor(a!) out) -> Tensor(a!) out
quantized::add_scalar_relu_out.Tensor(Tensor qa, Tensor b, Tensor(a!) out) -> Tensor(a!) out
aten::slice.Tensor(Tensor(a) self, int dim=0, SymInt? start=None, SymInt? end=None, SymInt step=1) -> Tensor(a)
quantized::hardswish(Tensor input, float output_scale, int output_zero_point) -> Tensor
aten::bernoulli_.Tensor(Tensor(a!) self, Tensor p, *, Generator? generator=None) -> Tensor(a!)
aten::bernoulli_.float(Tensor(a!) self, float p=0.5, *, Generator? generator=None) -> Tensor(a!)
aten::clamp(Tensor self, Scalar? min=None, Scalar? max=None) -> Tensor
aten::clamp.Tensor(Tensor self, Tensor? min=None, Tensor? max=None) -> Tensor
aten::clamp.out(Tensor self, Scalar? min=None, Scalar? max=None, *, Tensor(a!) out) -> Tensor(a!)
aten::clamp.Tensor_out(Tensor self, Tensor? min=None, Tensor? max=None, *, Tensor(a!) out) -> Tensor(a!)
aten::clamp_min(Tensor self, Scalar min) -> Tensor
aten::clamp_min.Tensor(Tensor self, Tensor min) -> Tensor
aten::clamp_min.out(Tensor self, Scalar min, *, Tensor(a!) out) -> Tensor(a!)
aten::clamp_min.Tensor_out(Tensor self, Tensor min, *, Tensor(a!) out) -> Tensor(a!)
aten::vsplit.int(Tensor(a -> *) self, int sections) -> Tensor(a)[]
aten::vsplit.array(Tensor(a -> *) self, int[] indices) -> Tensor(a)[]
aten::acos(Tensor self) -> Tensor
aten::acos.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::positive(Tensor(a) self) -> Tensor(a)
aten::cosh(Tensor self) -> Tensor
aten::cosh.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::digamma(Tensor self) -> Tensor
aten::digamma.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::rnn_relu_cell(Tensor input, Tensor hx, Tensor w_ih, Tensor w_hh, Tensor? b_ih=None, Tensor? b_hh=None) -> Tensor
quantized::cat(Tensor[] qx, int dim, float? scale, int? zero_point) -> Tensor
aten::exp(Tensor self) -> Tensor
aten::exp.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::triplet_margin_loss(Tensor anchor, Tensor positive, Tensor negative, float margin=1., float p=2., float eps=9.9999999999999995e-07, bool swap=False, int reduction=1) -> Tensor
aten::_sparse_coo_tensor_unsafe(Tensor indices, Tensor values, SymInt[] size, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
aten::lgamma(Tensor self) -> Tensor
aten::lgamma.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::diag(Tensor self, int diagonal=0) -> Tensor
aten::diag.out(Tensor self, int diagonal=0, *, Tensor(a!) out) -> Tensor(a!)
aten::dist(Tensor self, Tensor other, Scalar p=2) -> Tensor
aten::dist.out(Tensor self, Tensor other, Scalar p=2, *, Tensor(a!) out) -> Tensor(a!)
aten::relu(Tensor self) -> Tensor
aten::relu.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
quantized::make_quantized_cell_params_dynamic(__torch__.torch.classes.quantized.LinearPackedParamsBase w_ih, __torch__.torch.classes.quantized.LinearPackedParamsBase w_hh, Tensor bias_ih, Tensor bias_hh, bool reduce_range=False) -> __torch__.torch.classes.rnn.CellParamsBase
aten::sin(Tensor self) -> Tensor
aten::sin.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
quantized::embedding_bag_4bit_prepack(Tensor weight, bool optimized_qparams=False, int nbins=200, float ratio=0.16) -> Tensor
aten::sinh(Tensor self) -> Tensor
aten::sinh.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
quantized::embedding_bag_4bit_unpack(Tensor weight) -> Tensor
aten::linalg_cholesky_ex(Tensor self, *, bool upper=False, bool check_errors=False) -> (Tensor L, Tensor info)
aten::linalg_cholesky_ex.L(Tensor self, *, bool upper=False, bool check_errors=False, Tensor(a!) L, Tensor(b!) info) -> (Tensor(a!) L, Tensor(b!) info)
aten::trunc(Tensor self) -> Tensor
aten::trunc.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::_sparse_csr_tensor_unsafe(Tensor crow_indices, Tensor col_indices, Tensor values, int[] size, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
aten::eq.Tensor(Tensor self, Tensor other) -> Tensor
aten::eq.Scalar(Tensor self, Scalar other) -> Tensor
aten::eq.Scalar_out(Tensor self, Scalar other, *, Tensor(a!) out) -> Tensor(a!)
aten::eq.Tensor_out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
aten::add.Tensor(Tensor self, Tensor other, *, Scalar alpha=1) -> Tensor
aten::add.Scalar(Tensor self, Scalar other, Scalar alpha=1) -> Tensor
aten::add.out(Tensor self, Tensor other, *, Scalar alpha=1, Tensor(a!) out) -> Tensor(a!)
aten::add.Scalar_out(Tensor self, Scalar other, Scalar alpha=1, *, Tensor(a!) out) -> Tensor(a!)
aten::rsub.Tensor(Tensor self, Tensor other, *, Scalar alpha=1) -> Tensor
aten::rsub.Scalar(Tensor self, Scalar other, Scalar alpha=1) -> Tensor
aten::rsub.Tensor_out(Tensor self, Tensor other, *, Scalar alpha=1, Tensor(a!) out) -> Tensor(a!)
aten::rsub.Scalar_out(Tensor self, Scalar other, Scalar alpha=1, *, Tensor(a!) out) -> Tensor(a!)
_quantized::conv_transpose1d(Tensor qx, __torch__.torch.classes.quantized.Conv2dPackedParamsBase packed_weight, float output_scale, int output_zero_point) -> Tensor
aten::div.Tensor(Tensor self, Tensor other) -> Tensor
aten::div.Scalar(Tensor self, Scalar other) -> Tensor
aten::div.Tensor_mode(Tensor self, Tensor other, *, str? rounding_mode) -> Tensor
aten::div.Scalar_mode(Tensor self, Scalar other, *, str? rounding_mode) -> Tensor
aten::div.out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
aten::div.out_mode(Tensor self, Tensor other, *, str? rounding_mode, Tensor(a!) out) -> Tensor(a!)
aten::div.Scalar_out(Tensor self, Scalar other, *, Tensor(a!) out) -> Tensor(a!)
aten::div.Scalar_mode_out(Tensor self, Scalar other, *, str? rounding_mode, Tensor(a!) out) -> Tensor(a!)
aten::result_type.Tensor(Tensor tensor, Tensor other) -> ScalarType
aten::result_type.Scalar(Tensor tensor, Scalar other) -> ScalarType
aten::result_type.Scalar_Tensor(Scalar scalar, Tensor tensor) -> ScalarType
aten::result_type.Scalar_Scalar(Scalar scalar1, Scalar scalar2) -> ScalarType
quantized::batch_norm3d(Tensor qx, Tensor? weight, Tensor? bias, Tensor mean, Tensor var, float eps, float output_scale, int output_zero_point) -> Tensor
mkldnn::_linear_pointwise(Tensor X, Tensor W, Tensor? B, str attr, Scalar?[] scalars, str? algorithm) -> Tensor Y
mkldnn::_linear_pointwise.binary(Tensor X, Tensor other, Tensor W, Tensor? B, str attr) -> Tensor Y
aten::_efficientzerotensor(int[] size, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
aten::_efficientzerotensor.out(int[] size, *, Tensor(a!) out) -> Tensor(a!)
aten::view_as_complex(Tensor(a) self) -> Tensor(a)
aten::bitwise_right_shift.Tensor(Tensor self, Tensor other) -> Tensor
aten::bitwise_right_shift.Tensor_Scalar(Tensor self, Scalar other) -> Tensor
aten::bitwise_right_shift.Scalar_Tensor(Scalar self, Tensor other) -> Tensor
aten::bitwise_right_shift.Tensor_out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
aten::bitwise_right_shift.Tensor_Scalar_out(Tensor self, Scalar other, *, Tensor(a!) out) -> Tensor(a!)
aten::bitwise_right_shift.Scalar_Tensor_out(Scalar self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
aten::mv(Tensor self, Tensor vec) -> Tensor
aten::mv.out(Tensor self, Tensor vec, *, Tensor(a!) out) -> Tensor(a!)
aten::cat(Tensor[] tensors, int dim=0) -> Tensor
aten::cat.names(Tensor[] tensors, str dim) -> Tensor
aten::cat.names_out(Tensor[] tensors, str dim, *, Tensor(a!) out) -> Tensor(a!)
aten::cat.out(Tensor[] tensors, int dim=0, *, Tensor(a!) out) -> Tensor(a!)
aten::stack(Tensor[] tensors, int dim=0) -> Tensor
aten::stack.out(Tensor[] tensors, int dim=0, *, Tensor(a!) out) -> Tensor(a!)
aten::slice_backward(Tensor grad_output, SymInt[] input_sizes, int dim, SymInt start, SymInt end, SymInt step) -> Tensor
aten::slice_backward.out(Tensor grad_output, SymInt[] input_sizes, int dim, SymInt start, SymInt end, SymInt step, *, Tensor(a!) out) -> Tensor(a!)
aten::__and__.Scalar(Tensor self, Scalar other) -> Tensor
aten::__and__.Tensor(Tensor self, Tensor other) -> Tensor
quantized::linear(Tensor X, __torch__.torch.classes.quantized.LinearPackedParamsBase W_prepack, float Y_scale_i, int Y_zero_point_i) -> Tensor Y
aten::trace_backward(Tensor grad, SymInt[] sizes) -> Tensor
aten::new_empty(Tensor self, SymInt[] size, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
aten::new_empty.out(Tensor self, SymInt[] size, *, Tensor(a!) out) -> Tensor(a!)
aten::conv3d(Tensor input, Tensor weight, Tensor? bias=None, int[3] stride=1, int[3] padding=0, int[3] dilation=1, int groups=1) -> Tensor
aten::conv3d.padding(Tensor input, Tensor weight, Tensor? bias=None, int[3] stride=1, str padding="valid", int[3] dilation=1, int groups=1) -> Tensor
aten::chunk(Tensor(a -> *) self, int chunks, int dim=0) -> Tensor(a)[]
aten::new_empty_strided(Tensor self, SymInt[] size, SymInt[] stride, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
aten::new_empty_strided.out(Tensor self, SymInt[] size, SymInt[] stride, *, Tensor(a!) out) -> Tensor(a!)
aten::clamp_max(Tensor self, Scalar max) -> Tensor
aten::clamp_max.Tensor(Tensor self, Tensor max) -> Tensor
aten::clamp_max.out(Tensor self, Scalar max, *, Tensor(a!) out) -> Tensor(a!)
aten::clamp_max.Tensor_out(Tensor self, Tensor max, *, Tensor(a!) out) -> Tensor(a!)
aten::new_zeros(Tensor self, SymInt[] size, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
aten::new_zeros.out(Tensor self, SymInt[] size, *, Tensor(a!) out) -> Tensor(a!)
aten::conv_transpose1d(Tensor input, Tensor weight, Tensor? bias=None, int[1] stride=[1], int[1] padding=[0], int[1] output_padding=[0], int groups=1, int[1] dilation=[1]) -> Tensor
aten::numpy_T(Tensor(a) self) -> Tensor(a)
aten::contiguous(Tensor(a) self, *, MemoryFormat memory_format=0) -> Tensor(a)
aten::ge.Tensor(Tensor self, Tensor other) -> Tensor
aten::ge.Scalar(Tensor self, Scalar other) -> Tensor
aten::ge.Scalar_out(Tensor self, Scalar other, *, Tensor(a!) out) -> Tensor(a!)
aten::ge.Tensor_out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
aten::lt.Tensor(Tensor self, Tensor other) -> Tensor
aten::lt.Scalar(Tensor self, Scalar other) -> Tensor
aten::lt.Scalar_out(Tensor self, Scalar other, *, Tensor(a!) out) -> Tensor(a!)
aten::lt.Tensor_out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
aten::geometric_(Tensor(a!) self, float p, *, Generator? generator=None) -> Tensor(a!)
aten::multinomial(Tensor self, int num_samples, bool replacement=False, *, Generator? generator=None) -> Tensor
aten::multinomial.out(Tensor self, int num_samples, bool replacement=False, *, Generator? generator=None, Tensor(a!) out) -> Tensor(a!)
aten::concatenate(Tensor[] tensors, int dim=0) -> Tensor
aten::concatenate.out(Tensor[] tensors, int dim=0, *, Tensor(a!) out) -> Tensor(a!)
aten::concatenate.names(Tensor[] tensors, str dim) -> Tensor
aten::concatenate.names_out(Tensor[] tensors, str dim, *, Tensor(a!) out) -> Tensor(a!)
aten::normal_(Tensor(a!) self, float mean=0., float std=1., *, Generator? generator=None) -> Tensor(a!)
aten::det(Tensor self) -> Tensor
aten::cumulative_trapezoid.x(Tensor y, Tensor x, *, int dim=-1) -> Tensor
aten::cumulative_trapezoid.dx(Tensor y, *, Scalar dx=1, int dim=-1) -> Tensor
aten::linalg_inv_ex(Tensor A, *, bool check_errors=False) -> (Tensor inverse, Tensor info)
aten::linalg_inv_ex.inverse(Tensor A, *, bool check_errors=False, Tensor(a!) inverse, Tensor(b!) info) -> (Tensor(a!) inverse, Tensor(b!) info)
aten::uniform_(Tensor(a!) self, float from=0., float to=1., *, Generator? generator=None) -> Tensor(a!)
aten::adaptive_max_pool1d(Tensor self, int[1] output_size) -> (Tensor, Tensor)
aten::zeros_like(Tensor self, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None, MemoryFormat? memory_format=None) -> Tensor
aten::zeros_like.out(Tensor self, *, MemoryFormat? memory_format=None, Tensor(a!) out) -> Tensor(a!)
aten::conv1d(Tensor input, Tensor weight, Tensor? bias=None, int[1] stride=[1], int[1] padding=[0], int[1] dilation=[1], int groups=1) -> Tensor
aten::conv1d.padding(Tensor input, Tensor weight, Tensor? bias=None, int[1] stride=[1], str padding="valid", int[1] dilation=[1], int groups=1) -> Tensor
aten::conv2d(Tensor input, Tensor weight, Tensor? bias=None, int[2] stride=1, int[2] padding=0, int[2] dilation=1, int groups=1) -> Tensor
aten::conv2d.padding(Tensor input, Tensor weight, Tensor? bias=None, int[2] stride=1, str padding="valid", int[2] dilation=1, int groups=1) -> Tensor
aten::ormqr(Tensor self, Tensor input2, Tensor input3, bool left=True, bool transpose=False) -> Tensor
aten::ormqr.out(Tensor self, Tensor input2, Tensor input3, bool left=True, bool transpose=False, *, Tensor(a!) out) -> Tensor(a!)
aten::conv_tbc(Tensor self, Tensor weight, Tensor bias, int pad=0) -> Tensor
aten::conv_tbc.out(Tensor self, Tensor weight, Tensor bias, int pad=0, *, Tensor(a!) out) -> Tensor(a!)
aten::conv_transpose2d.input(Tensor input, Tensor weight, Tensor? bias=None, int[2] stride=1, int[2] padding=0, int[2] output_padding=0, int groups=1, int[2] dilation=1) -> Tensor
aten::conv_transpose3d.input(Tensor input, Tensor weight, Tensor? bias=None, int[3] stride=1, int[3] padding=0, int[3] output_padding=0, int groups=1, int[3] dilation=1) -> Tensor
aten::pairwise_distance(Tensor x1, Tensor x2, float p=2., float eps=9.9999999999999995e-07, bool keepdim=False) -> Tensor
aten::convolution(Tensor input, Tensor weight, Tensor? bias, int[] stride, SymInt[] padding, int[] dilation, bool transposed, SymInt[] output_padding, int groups) -> Tensor
aten::convolution.out(Tensor input, Tensor weight, Tensor? bias, int[] stride, SymInt[] padding, int[] dilation, bool transposed, SymInt[] output_padding, int groups, *, Tensor(a!) out) -> Tensor(a!)
aten::quantile(Tensor self, Tensor q, int? dim=None, bool keepdim=False, *, str interpolation="linear") -> Tensor
aten::quantile.scalar(Tensor self, float q, int? dim=None, bool keepdim=False, *, str interpolation="linear") -> Tensor
aten::quantile.out(Tensor self, Tensor q, int? dim=None, bool keepdim=False, *, str interpolation="linear", Tensor(a!) out) -> Tensor(a!)
aten::quantile.scalar_out(Tensor self, float q, int? dim=None, bool keepdim=False, *, str interpolation="linear", Tensor(a!) out) -> Tensor(a!)
quantized::linear_prepack_legacy(Tensor W, Tensor? B=None) -> Tensor W_prepack
aten::_adaptive_avg_pool3d_backward(Tensor grad_output, Tensor self) -> Tensor
aten::_adaptive_avg_pool3d_backward.out(Tensor grad_output, Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::cudnn_convolution(Tensor self, Tensor weight, int[] padding, int[] stride, int[] dilation, int groups, bool benchmark, bool deterministic, bool allow_tf32) -> Tensor
aten::cudnn_convolution.out(Tensor self, Tensor weight, int[] padding, int[] stride, int[] dilation, int groups, bool benchmark, bool deterministic, bool allow_tf32, *, Tensor(a!) out) -> Tensor(a!)
aten::addr(Tensor self, Tensor vec1, Tensor vec2, *, Scalar beta=1, Scalar alpha=1) -> Tensor
aten::addr.out(Tensor self, Tensor vec1, Tensor vec2, *, Scalar beta=1, Scalar alpha=1, Tensor(a!) out) -> Tensor(a!)
aten::addbmm(Tensor self, Tensor batch1, Tensor batch2, *, Scalar beta=1, Scalar alpha=1) -> Tensor
aten::addbmm.out(Tensor self, Tensor batch1, Tensor batch2, *, Scalar beta=1, Scalar alpha=1, Tensor(a!) out) -> Tensor(a!)
aten::chain_matmul(Tensor[] matrices) -> Tensor
aten::chain_matmul.out(Tensor[] matrices, *, Tensor(a!) out) -> Tensor(a!)
aten::linalg_multi_dot(Tensor[] tensors) -> Tensor
aten::linalg_multi_dot.out(Tensor[] tensors, *, Tensor(a!) out) -> Tensor(a!)
aten::gru_cell(Tensor input, Tensor hx, Tensor w_ih, Tensor w_hh, Tensor? b_ih=None, Tensor? b_hh=None) -> Tensor
aten::rnn_tanh_cell(Tensor input, Tensor hx, Tensor w_ih, Tensor w_hh, Tensor? b_ih=None, Tensor? b_hh=None) -> Tensor
quantized::cat_out(Tensor[] qx, int dim, Tensor(a!) out) -> Tensor(a!)
aten::instance_norm(Tensor input, Tensor? weight, Tensor? bias, Tensor? running_mean, Tensor? running_var, bool use_input_stats, float momentum, float eps, bool cudnn_enabled) -> Tensor
aten::_scaled_dot_product_flash_attention(Tensor query, Tensor key, Tensor value, float dropout_p=0., bool is_causal=False, bool return_debug_mask=False) -> (Tensor ouput, Tensor logsumexp, Tensor cum_seq_q, Tensor cum_seq_k, int max_q, int max_k, int philox_seed, int philox_offset, Tensor debug_attn_mask)
aten::rrelu(Tensor self, Scalar lower=0.125, Scalar upper=0.33333333333333331, bool training=False, Generator? generator=None) -> Tensor
quantized::conv2d_add_relu(Tensor qx, Tensor qaccum, __torch__.torch.classes.quantized.Conv2dPackedParamsBase packed_weight, float output_scale, int output_zero_point) -> Tensor
aten::rrelu_(Tensor(a!) self, Scalar lower=0.125, Scalar upper=0.33333333333333331, bool training=False, Generator? generator=None) -> Tensor(a!)
quantized::conv3d.new(Tensor qx, __torch__.torch.classes.quantized.Conv3dPackedParamsBase packed_weight, float output_scale, int output_zero_point) -> Tensor
quantized::conv3d(Tensor qx, __torch__.torch.classes.quantized.Conv3dPackedParamsBase weight, int[] stride, int[] padding, int[] dilation, int groups, float output_scale, int output_zero_point) -> Tensor
aten::relu6_(Tensor(a!) self) -> Tensor(a!)
quantized::make_quantized_cell_params(Tensor w_ih, Tensor w_hh, Tensor b_ih, Tensor b_hh) -> __torch__.torch.classes.rnn.CellParamsBase
aten::special_gammaincc(Tensor self, Tensor other) -> Tensor
aten::special_gammaincc.out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
aten::_convolution.deprecated(Tensor input, Tensor weight, Tensor? bias, int[] stride, int[] padding, int[] dilation, bool transposed, int[] output_padding, int groups, bool benchmark, bool deterministic, bool cudnn_enabled) -> Tensor
aten::_convolution(Tensor input, Tensor weight, Tensor? bias, int[] stride, SymInt[] padding, int[] dilation, bool transposed, SymInt[] output_padding, int groups, bool benchmark, bool deterministic, bool cudnn_enabled, bool allow_tf32) -> Tensor
aten::_convolution.out(Tensor input, Tensor weight, Tensor? bias, int[] stride, SymInt[] padding, int[] dilation, bool transposed, SymInt[] output_padding, int groups, bool benchmark, bool deterministic, bool cudnn_enabled, bool allow_tf32, *, Tensor(a!) out) -> Tensor(a!)
quantized::conv3d_transpose(__torch__.torch.classes.quantized.Conv3dPackedParamsBase packed_weights) -> int
aten::special_logit(Tensor self, float? eps=None) -> Tensor
aten::special_logit.out(Tensor self, float? eps=None, *, Tensor(a!) out) -> Tensor(a!)
aten::_linalg_check_errors(Tensor info, str api_name, *, bool is_matrix) -> ()
aten::_cufft_get_plan_cache_max_size(int device_index) -> int
quantized::conv_transpose3d_dilation(__torch__.torch.classes.quantized.Conv3dPackedParamsBase packed_weights) -> int[]
aten::special_log_softmax(Tensor self, int dim, *, ScalarType? dtype=None) -> Tensor
aten::_cufft_clear_plan_cache(int device_index) -> ()
quantized::conv_transpose3d_output_padding(__torch__.torch.classes.quantized.Conv3dPackedParamsBase packed_weights) -> int[]
aten::special_logsumexp(Tensor self, int[1] dim, bool keepdim=False) -> Tensor
aten::special_logsumexp.out(Tensor self, int[1] dim, bool keepdim=False, *, Tensor(a!) out) -> Tensor(a!)
aten::_linalg_det(Tensor A) -> (Tensor result, Tensor LU, Tensor pivots)
aten::_linalg_det.result(Tensor A, *, Tensor(a!) result, Tensor(b!) LU, Tensor(c!) pivots) -> (Tensor(a!) result, Tensor(b!) LU, Tensor(c!) pivots)
aten::_cufft_get_plan_cache_size(int device_index) -> int
quantized::conv_transpose3d_groups(__torch__.torch.classes.quantized.Conv3dPackedParamsBase packed_weights) -> int
aten::special_multigammaln(Tensor self, int p) -> Tensor
aten::special_multigammaln.out(Tensor self, int p, *, Tensor(a!) out) -> Tensor(a!)
aten::_local_scalar_dense(Tensor self) -> Scalar
aten::_dimI(Tensor self) -> int
_quantized::conv3d_relu(Tensor qx, __torch__.torch.classes.quantized.Conv3dPackedParamsBase packed_weight, float output_scale, int output_zero_point) -> Tensor
aten::special_polygamma(int n, Tensor self) -> Tensor
aten::special_polygamma.out(int n, Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::_dirichlet_grad(Tensor x, Tensor alpha, Tensor total) -> Tensor
aten::_dirichlet_grad.out(Tensor x, Tensor alpha, Tensor total, *, Tensor(a!) out) -> Tensor(a!)
mkldnn::_convolution_pointwise(Tensor X, Tensor W, Tensor? B, int[] padding, int[] stride, int[] dilation, int groups, str attr, Scalar?[] scalars, str? algorithm) -> Tensor Y
mkldnn::_convolution_pointwise.binary(Tensor X, Tensor other, Tensor W, Tensor? B, int[] padding, int[] stride, int[] dilation, int groups, str binary_attr, Scalar? alpha, str? unary_attr, Scalar?[] unary_scalars, str? unary_algorithm) -> Tensor Y
aten::special_softmax(Tensor self, int dim, ScalarType? dtype=None) -> Tensor
aten::special_digamma(Tensor self) -> Tensor
aten::special_digamma.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::_coalesce.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::_coalesce(Tensor self) -> Tensor
quantized::conv2d_padding(__torch__.torch.classes.quantized.Conv2dPackedParamsBase packed_weights) -> int[]
aten::special_erf(Tensor self) -> Tensor
aten::special_erf.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::_fused_dropout(Tensor self, float p, Generator? generator=None) -> (Tensor, Tensor)
aten::_fused_dropout.out(Tensor self, float p, Generator? generator=None, *, Tensor(a!) out0, Tensor(b!) out1) -> (Tensor(a!), Tensor(b!))
aten::_coalesced_(Tensor(a!) self, bool coalesced) -> Tensor(a!)
quantized::conv2d_dilation(__torch__.torch.classes.quantized.Conv2dPackedParamsBase packed_weights) -> int[]
aten::special_erfc(Tensor self) -> Tensor
aten::special_erfc.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::_compute_linear_combination(Tensor input, Tensor coefficients) -> Tensor
aten::_compute_linear_combination.out(Tensor input, Tensor coefficients, *, Tensor(a!) out) -> Tensor(a!)
quantized::conv2d_groups(__torch__.torch.classes.quantized.Conv2dPackedParamsBase packed_weights) -> int
aten::special_erfinv(Tensor self) -> Tensor
aten::special_erfinv.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::_conj_copy.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::_conj_copy(Tensor self) -> Tensor
quantized::conv3d_stride(__torch__.torch.classes.quantized.Conv3dPackedParamsBase packed_weights) -> int[]
aten::special_exp2(Tensor self) -> Tensor
aten::special_exp2.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::_fw_primal(Tensor(a) self, int level) -> Tensor(a)
aten::_conj_physical(Tensor self) -> Tensor
aten::_conj_physical.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
quantized::conv3d_padding(__torch__.torch.classes.quantized.Conv3dPackedParamsBase packed_weights) -> int[]
aten::special_expm1(Tensor self) -> Tensor
aten::special_expm1.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::_convert_indices_from_coo_to_csr(Tensor self, int size, *, bool out_int32=False) -> Tensor
aten::_convert_indices_from_coo_to_csr.out(Tensor self, int size, *, bool out_int32=False, Tensor(a!) out) -> Tensor(a!)
quantized::conv3d_dilation(__torch__.torch.classes.quantized.Conv3dPackedParamsBase packed_weights) -> int[]
aten::special_expit(Tensor self) -> Tensor
aten::special_expit.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::_conv_depthwise2d.out(Tensor self, Tensor weight, int[2] kernel_size, Tensor? bias, int[2] stride, SymInt[2] padding, int[2] dilation, *, Tensor(a!) out) -> Tensor(a!)
aten::_conv_depthwise2d(Tensor self, Tensor weight, int[2] kernel_size, Tensor? bias, int[2] stride, SymInt[2] padding, int[2] dilation) -> Tensor
quantized::conv3d_output_padding(__torch__.torch.classes.quantized.Conv3dPackedParamsBase packed_weights) -> int[]
aten::special_gammaln(Tensor self) -> Tensor
aten::special_gammaln.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::_has_compatible_shallow_copy_type(Tensor self, Tensor from) -> bool
aten::special_i0(Tensor self) -> Tensor
aten::special_i0.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::_copy_from_and_resize.out(Tensor self, Tensor dst, *, Tensor(a!) out) -> Tensor(a!)
aten::_copy_from_and_resize(Tensor self, Tensor dst) -> Tensor
quantized::conv_transpose2d_padding(__torch__.torch.classes.quantized.Conv2dPackedParamsBase packed_weights) -> int[]
aten::special_log1p(Tensor self) -> Tensor
aten::special_log1p.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::_is_all_true(Tensor self) -> Tensor
aten::_cudnn_rnn_backward.out(Tensor input, Tensor[] weight, int weight_stride0, Tensor weight_buf, Tensor hx, Tensor? cx, Tensor output, Tensor? grad_output, Tensor? grad_hy, Tensor? grad_cy, int mode, SymInt hidden_size, SymInt proj_size, int num_layers, bool batch_first, float dropout, bool train, bool bidirectional, SymInt[] batch_sizes, Tensor? dropout_state, Tensor reserve, bool[4] output_mask, *, Tensor(a!) out0, Tensor(b!) out1, Tensor(c!) out2, Tensor(d!)[] out3) -> ()
aten::_cudnn_rnn_backward(Tensor input, Tensor[] weight, int weight_stride0, Tensor weight_buf, Tensor hx, Tensor? cx, Tensor output, Tensor? grad_output, Tensor? grad_hy, Tensor? grad_cy, int mode, SymInt hidden_size, SymInt proj_size, int num_layers, bool batch_first, float dropout, bool train, bool bidirectional, SymInt[] batch_sizes, Tensor? dropout_state, Tensor reserve, bool[4] output_mask) -> (Tensor, Tensor, Tensor, Tensor[])
quantized::conv_transpose3d_stride(__torch__.torch.classes.quantized.Conv3dPackedParamsBase packed_weights) -> int[]
aten::special_ndtr(Tensor self) -> Tensor
aten::special_ndtr.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
c10d::broadcast_(Tensor[] tensors, __torch__.torch.classes.c10d.ProcessGroup process_group, int root_rank, int root_tensor, int timeout) -> (Tensor[], __torch__.torch.classes.c10d.Work)
aten::_log_softmax(Tensor self, int dim, bool half_to_float) -> Tensor
aten::_log_softmax.out(Tensor self, int dim, bool half_to_float, *, Tensor(a!) out) -> Tensor(a!)
aten::_dimV(Tensor self) -> int
_quantized::linear_prepack_legacy(Tensor W, Tensor? B=None) -> Tensor W_prepack
aten::special_psi(Tensor self) -> Tensor
aten::special_psi.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::_efficient_attention_backward(Tensor grad_out_, Tensor query, Tensor key, Tensor value, Tensor out, Tensor logsumexp, bool is_causal=False, bool chunk_grad_outputs=False) -> (Tensor, Tensor, Tensor)
mkldnn::_convolution_pointwise_.binary(Tensor X, Tensor(a!) other, Tensor W, Tensor? B, int[] padding, int[] stride, int[] dilation, int groups, str binary_attr, Scalar? alpha, str? unary_attr, Scalar?[] unary_scalars, str? unary_algorithm) -> Tensor(a!) Y
aten::special_sinc(Tensor self) -> Tensor
aten::special_sinc.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::_embedding_bag_sparse_backward(Tensor grad, Tensor indices, Tensor offsets, Tensor offset2bag, Tensor bag_size, SymInt num_weights, bool scale_grad_by_freq, int mode, Tensor? per_sample_weights, int padding_idx=-1) -> Tensor
mkldnn_prepacked::conv2d_prepack(Tensor W, Tensor? B, int[2] stride, int[2] padding, int[2] dilation, int groups, int[4] input_size, str attr) -> __torch__.torch.classes.mkldnn.ConvOpContext
aten::square(Tensor self) -> Tensor
aten::square.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::slogdet(Tensor self) -> (Tensor sign, Tensor logabsdet)
aten::slogdet.out(Tensor self, *, Tensor(a!) sign, Tensor(b!) logabsdet) -> (Tensor(a!) sign, Tensor(b!) logabsdet)
aten::__ior__.Tensor(Tensor(a!) self, Tensor other) -> Tensor(a!)
aten::__ior__.Scalar(Tensor(a!) self, Scalar other) -> Tensor(a!)
quantized::linear_tanh(Tensor X, __torch__.torch.classes.quantized.LinearPackedParamsBase W_prepack, float Y_scale_i, int Y_zero_point_i) -> Tensor Y
aten::std(Tensor self, bool unbiased=True) -> Tensor
aten::std.dim(Tensor self, int[1]? dim, bool unbiased=True, bool keepdim=False) -> Tensor
aten::std.correction(Tensor self, int[1]? dim=None, *, int? correction=None, bool keepdim=False) -> Tensor
aten::std.names_dim(Tensor self, str[1] dim, bool unbiased=True, bool keepdim=False) -> Tensor
aten::std.names_out(Tensor self, str[1] dim, bool unbiased=True, bool keepdim=False, *, Tensor(a!) out) -> Tensor(a!)
aten::std.out(Tensor self, int[1]? dim, bool unbiased=True, bool keepdim=False, *, Tensor(a!) out) -> Tensor(a!)
aten::std.correction_out(Tensor self, int[1]? dim=None, *, int? correction=None, bool keepdim=False, Tensor(a!) out) -> Tensor(a!)
aten::std.correction_names(Tensor self, str[1] dim, *, int? correction=None, bool keepdim=False) -> Tensor
aten::std.correction_names_out(Tensor self, str[1] dim, *, int? correction=None, bool keepdim=False, Tensor(a!) out) -> Tensor(a!)
aten::selu(Tensor self) -> Tensor
_quantized::conv2d_prepack(Tensor weight, Tensor? bias, int[] stride, int[] padding, int[] dilation, int groups) -> __torch__.torch.classes.quantized.Conv2dPackedParamsBase
aten::selu_(Tensor(a!) self) -> Tensor(a!)
_quantized::conv3d_prepack(Tensor weight, Tensor? bias, int[] stride, int[] padding, int[] dilation, int groups) -> __torch__.torch.classes.quantized.Conv3dPackedParamsBase
aten::std_mean(Tensor self, bool unbiased=True) -> (Tensor, Tensor)
aten::std_mean.dim(Tensor self, int[1]? dim, bool unbiased=True, bool keepdim=False) -> (Tensor, Tensor)
aten::std_mean.correction(Tensor self, int[1]? dim=None, *, int? correction=None, bool keepdim=False) -> (Tensor, Tensor)
aten::std_mean.names_dim(Tensor self, str[1] dim, bool unbiased=True, bool keepdim=False) -> (Tensor, Tensor)
aten::std_mean.correction_names(Tensor self, str[1] dim, *, int? correction=None, bool keepdim=False) -> (Tensor, Tensor)
aten::std_mean.correction_out(Tensor self, int[1]? dim=None, *, int? correction=None, bool keepdim=False, Tensor(a!) out0, Tensor(b!) out1) -> (Tensor(a!), Tensor(b!))
aten::sum_to_size(Tensor self, int[] size) -> Tensor
aten::tile(Tensor self, int[] dims) -> Tensor
aten::trapezoid.x(Tensor y, Tensor x, *, int dim=-1) -> Tensor
aten::trapezoid.dx(Tensor y, *, Scalar dx=1, int dim=-1) -> Tensor
aten::trapz.x(Tensor y, Tensor x, *, int dim=-1) -> Tensor
aten::trapz.dx(Tensor y, *, float dx=1., int dim=-1) -> Tensor
aten::value_selecting_reduction_backward(Tensor grad, int dim, Tensor indices, SymInt[] sizes, bool keepdim) -> Tensor
aten::var(Tensor self, bool unbiased=True) -> Tensor
aten::var.dim(Tensor self, int[1]? dim, bool unbiased=True, bool keepdim=False) -> Tensor
aten::var.correction(Tensor self, int[1]? dim=None, *, int? correction=None, bool keepdim=False) -> Tensor
aten::var.names_dim(Tensor self, str[1] dim, bool unbiased=True, bool keepdim=False) -> Tensor
aten::var.names_out(Tensor self, str[1] dim, bool unbiased=True, bool keepdim=False, *, Tensor(a!) out) -> Tensor(a!)
aten::var.out(Tensor self, int[1]? dim, bool unbiased=True, bool keepdim=False, *, Tensor(a!) out) -> Tensor(a!)
aten::var.correction_out(Tensor self, int[1]? dim=None, *, int? correction=None, bool keepdim=False, Tensor(a!) out) -> Tensor(a!)
aten::var.correction_names(Tensor self, str[1] dim, *, int? correction=None, bool keepdim=False) -> Tensor
aten::var.correction_names_out(Tensor self, str[1] dim, *, int? correction=None, bool keepdim=False, Tensor(a!) out) -> Tensor(a!)
aten::var_mean(Tensor self, bool unbiased=True) -> (Tensor, Tensor)
aten::var_mean.dim(Tensor self, int[1]? dim, bool unbiased=True, bool keepdim=False) -> (Tensor, Tensor)
aten::var_mean.correction(Tensor self, int[1]? dim=None, *, int? correction=None, bool keepdim=False) -> (Tensor, Tensor)
aten::var_mean.names_dim(Tensor self, str[1] dim, bool unbiased=True, bool keepdim=False) -> (Tensor, Tensor)
aten::var_mean.correction_names(Tensor self, str[1] dim, *, int? correction=None, bool keepdim=False) -> (Tensor, Tensor)
aten::var_mean.correction_out(Tensor self, int[1]? dim=None, *, int? correction=None, bool keepdim=False, Tensor(a!) out0, Tensor(b!) out1) -> (Tensor(a!), Tensor(b!))
aten::vstack(Tensor[] tensors) -> Tensor
aten::vstack.out(Tensor[] tensors, *, Tensor(a!) out) -> Tensor(a!)
quantized::conv_transpose1d_unpack(__torch__.torch.classes.quantized.Conv2dPackedParamsBase packed_weights) -> (Tensor unpacked_weights, Tensor? B_origin)
aten::_convolution_double_backward(Tensor? ggI, Tensor? ggW, Tensor? ggb, Tensor gO, Tensor weight, Tensor self, int[] stride, SymInt[] padding, int[] dilation, bool transposed, SymInt[] output_padding, int groups, bool[3] output_mask) -> (Tensor, Tensor, Tensor)
aten::rename(Tensor(a) self, str[]? names) -> Tensor(a)
quantized::quantized_rnn_tanh_cell_dynamic(Tensor input, Tensor hx, __torch__.torch.classes.quantized.LinearPackedParamsBase w_ih, __torch__.torch.classes.quantized.LinearPackedParamsBase w_hh, Tensor b_ih, Tensor b_hh) -> Tensor
quantized::conv_transpose2d_unpack(__torch__.torch.classes.quantized.Conv2dPackedParamsBase packed_weights) -> (Tensor unpacked_weights, Tensor? B_origin)
aten::_convolution_mode(Tensor input, Tensor weight, Tensor? bias, int[] stride, str padding, int[] dilation, int groups) -> Tensor
aten::rename_(Tensor(a!) self, str[]? names) -> Tensor(a!)
aten::type_as(Tensor self, Tensor other) -> Tensor
aten::linalg_diagonal(Tensor(a) A, *, int offset=0, int dim1=-2, int dim2=-1) -> Tensor(a)
aten::diagonal_copy(Tensor self, int offset=0, int dim1=0, int dim2=1) -> Tensor
aten::diagonal_copy.out(Tensor self, int offset=0, int dim1=0, int dim2=1, *, Tensor(a!) out) -> Tensor(a!)
aten::pad(Tensor self, SymInt[] pad, str mode="constant", float? value=None) -> Tensor
aten::_pad_circular(Tensor self, SymInt[] pad) -> Tensor
aten::swapaxes_(Tensor(a!) self, int axis0, int axis1) -> Tensor(a!)
aten::swapdims_(Tensor(a!) self, int dim0, int dim1) -> Tensor(a!)
aten::unfold_copy(Tensor self, int dimension, int size, int step) -> Tensor
aten::unfold_copy.out(Tensor self, int dimension, int size, int step, *, Tensor(a!) out) -> Tensor(a!)
aten::divide.Tensor(Tensor self, Tensor other) -> Tensor
aten::divide.Scalar(Tensor self, Scalar other) -> Tensor
aten::divide.Tensor_mode(Tensor self, Tensor other, *, str? rounding_mode) -> Tensor
aten::divide.Scalar_mode(Tensor self, Scalar other, *, str? rounding_mode) -> Tensor
aten::divide.out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
aten::divide.out_mode(Tensor self, Tensor other, *, str? rounding_mode, Tensor(a!) out) -> Tensor(a!)
aten::divide_.Tensor(Tensor(a!) self, Tensor other) -> Tensor(a!)
aten::divide_.Tensor_mode(Tensor(a!) self, Tensor other, *, str? rounding_mode) -> Tensor(a!)
aten::divide_.Scalar_mode(Tensor(a!) self, Scalar other, *, str? rounding_mode) -> Tensor(a!)
aten::divide_.Scalar(Tensor(a!) self, Scalar other) -> Tensor(a!)
aten::true_divide.Tensor(Tensor self, Tensor other) -> Tensor
aten::true_divide.Scalar(Tensor self, Scalar other) -> Tensor
aten::true_divide.out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
aten::true_divide_.Tensor(Tensor(a!) self, Tensor other) -> Tensor(a!)
aten::true_divide_.Scalar(Tensor(a!) self, Scalar other) -> Tensor(a!)
aten::multiply.Tensor(Tensor self, Tensor other) -> Tensor
aten::multiply.Scalar(Tensor self, Scalar other) -> Tensor
aten::multiply.out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
aten::nonzero(Tensor self) -> Tensor
aten::nonzero.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::unique_dim(Tensor self, int dim, bool sorted=True, bool return_inverse=False, bool return_counts=False) -> (Tensor, Tensor, Tensor)
aten::unique_dim.out(Tensor self, int dim, bool sorted=True, bool return_inverse=False, bool return_counts=False, *, Tensor(a!) out0, Tensor(b!) out1, Tensor(c!) out2) -> (Tensor(a!), Tensor(b!), Tensor(c!))
aten::_standard_gamma(Tensor self, Generator? generator=None) -> Tensor
aten::_standard_gamma.out(Tensor self, Generator? generator=None, *, Tensor(a!) out) -> Tensor(a!)
aten::unique_consecutive(Tensor self, bool return_inverse=False, bool return_counts=False, int? dim=None) -> (Tensor, Tensor, Tensor)
aten::unique_consecutive.out(Tensor self, bool return_inverse=False, bool return_counts=False, int? dim=None, *, Tensor(a!) out0, Tensor(b!) out1, Tensor(c!) out2) -> (Tensor(a!), Tensor(b!), Tensor(c!))
aten::unique_dim_consecutive(Tensor self, int dim, bool return_inverse=False, bool return_counts=False) -> (Tensor, Tensor, Tensor)
aten::unique_dim_consecutive.out(Tensor self, int dim, bool return_inverse=False, bool return_counts=False, *, Tensor(a!) out0, Tensor(b!) out1, Tensor(c!) out2) -> (Tensor(a!), Tensor(b!), Tensor(c!))
aten::item(Tensor self) -> Scalar
aten::is_nonzero(Tensor self) -> bool
aten::allclose(Tensor self, Tensor other, float rtol=1.0000000000000001e-05, float atol=1e-08, bool equal_nan=False) -> bool
aten::ones_like(Tensor self, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None, MemoryFormat? memory_format=None) -> Tensor
aten::ones_like.out(Tensor self, *, MemoryFormat? memory_format=None, Tensor(a!) out) -> Tensor(a!)
aten::new_ones(Tensor self, SymInt[] size, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
aten::new_ones.out(Tensor self, SymInt[] size, *, Tensor(a!) out) -> Tensor(a!)
aten::new_full(Tensor self, SymInt[] size, Scalar fill_value, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
aten::new_full.out(Tensor self, SymInt[] size, Scalar fill_value, *, Tensor(a!) out) -> Tensor(a!)
aten::linalg_ldl_factor_ex(Tensor self, *, bool hermitian=False, bool check_errors=False) -> (Tensor LD, Tensor pivots, Tensor info)
aten::linalg_ldl_factor_ex.out(Tensor self, *, bool hermitian=False, bool check_errors=False, Tensor(a!) LD, Tensor(b!) pivots, Tensor(c!) info) -> (Tensor(a!) LD, Tensor(b!) pivots, Tensor(c!) info)
aten::linalg_pinv(Tensor self, float rcond, bool hermitian=False) -> Tensor
aten::linalg_pinv.atol_rtol_float(Tensor self, *, float? atol=None, float? rtol=None, bool hermitian=False) -> Tensor
aten::linalg_pinv.atol_rtol_tensor(Tensor self, *, Tensor? atol=None, Tensor? rtol=None, bool hermitian=False) -> Tensor
aten::linalg_pinv.atol_rtol_tensor_out(Tensor self, *, Tensor? atol=None, Tensor? rtol=None, bool hermitian=False, Tensor(a!) out) -> Tensor(a!)
aten::linalg_pinv.atol_rtol_float_out(Tensor self, *, float? atol=None, float? rtol=None, bool hermitian=False, Tensor(a!) out) -> Tensor(a!)
aten::linalg_pinv.out(Tensor self, float rcond, bool hermitian=False, *, Tensor(a!) out) -> Tensor(a!)
aten::linalg_pinv.rcond_tensor(Tensor self, Tensor rcond, bool hermitian=False) -> Tensor
aten::linalg_pinv.out_rcond_tensor(Tensor self, Tensor rcond, bool hermitian=False, *, Tensor(a!) out) -> Tensor(a!)
aten::linalg_slogdet(Tensor A) -> (Tensor sign, Tensor logabsdet)
aten::linalg_slogdet.out(Tensor A, *, Tensor(a!) sign, Tensor(b!) logabsdet) -> (Tensor(a!) sign, Tensor(b!) logabsdet)
aten::_linalg_eigh(Tensor A, str UPLO="L", bool compute_v=True) -> (Tensor eigenvalues, Tensor eigenvectors)
aten::_linalg_eigh.eigenvalues(Tensor A, str UPLO="L", bool compute_v=True, *, Tensor(a!) eigenvalues, Tensor(b!) eigenvectors) -> (Tensor(a!) eigenvalues, Tensor(b!) eigenvectors)
aten::_cufft_set_plan_cache_max_size(int device_index, int max_size) -> ()
quantized::conv_transpose3d_transpose(__torch__.torch.classes.quantized.Conv3dPackedParamsBase packed_weights) -> int
aten::_linalg_slogdet(Tensor A) -> (Tensor sign, Tensor logabsdet, Tensor LU, Tensor pivots)
aten::_linalg_slogdet.sign(Tensor A, *, Tensor(a!) sign, Tensor(b!) logabsdet, Tensor(c!) LU, Tensor(d!) pivots) -> (Tensor(a!) sign, Tensor(b!) logabsdet, Tensor(c!) LU, Tensor(d!) pivots)
aten::_cummax_helper(Tensor self, Tensor(a!) values, Tensor(b!) indices, int dim) -> ()
quantized::linear_unpack(__torch__.torch.classes.quantized.LinearPackedParamsBase W_prepack) -> (Tensor W_origin, Tensor? B_origin)
quantized::linear_unpack.legacy(Tensor W_prepack) -> (Tensor W_origin, Tensor? B_origin)
aten::_linalg_svd(Tensor A, bool full_matrices=False, bool compute_uv=True, *, str? driver=None) -> (Tensor U, Tensor S, Tensor Vh)
aten::_linalg_svd.U(Tensor A, bool full_matrices=False, bool compute_uv=True, *, str? driver=None, Tensor(a!) U, Tensor(b!) S, Tensor(c!) Vh) -> (Tensor(a!) U, Tensor(b!) S, Tensor(c!) Vh)
aten::_debug_has_internal_overlap(Tensor self) -> int
_quantized::conv3d(Tensor qx, __torch__.torch.classes.quantized.Conv3dPackedParamsBase packed_weight, float output_scale, int output_zero_point) -> Tensor
aten::linalg_lu_solve(Tensor LU, Tensor pivots, Tensor B, *, bool left=True, bool adjoint=False) -> Tensor
aten::linalg_lu_solve.out(Tensor LU, Tensor pivots, Tensor B, *, bool left=True, bool adjoint=False, Tensor(a!) out) -> Tensor(a!)
aten::linalg_lu_factor_ex(Tensor A, *, bool pivot=True, bool check_errors=False) -> (Tensor LU, Tensor pivots, Tensor info)
aten::linalg_lu_factor_ex.out(Tensor A, *, bool pivot=True, bool check_errors=False, Tensor(a!) LU, Tensor(b!) pivots, Tensor(c!) info) -> (Tensor(a!) LU, Tensor(b!) pivots, Tensor(c!) info)
aten::linalg_matrix_exp(Tensor self) -> Tensor
aten::linalg_matrix_exp.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::_linalg_solve_ex(Tensor A, Tensor B, *, bool left=True, bool check_errors=False) -> (Tensor result, Tensor LU, Tensor pivots, Tensor info)
aten::_linalg_solve_ex.result(Tensor A, Tensor B, *, bool left=True, bool check_errors=False, Tensor(a!) result, Tensor(b!) LU, Tensor(c!) pivots, Tensor(d!) info) -> (Tensor(a!) result, Tensor(b!) LU, Tensor(c!) pivots, Tensor(d!) info)
aten::_cummin_helper(Tensor self, Tensor(a!) values, Tensor(b!) indices, int dim) -> ()
quantized::linear_unpack_fp16(__torch__.torch.classes.quantized.LinearPackedParamsBase W_prepack) -> (Tensor W_origin, Tensor? B_origin)
quantized::linear_unpack_fp16.legacy(Tensor W_prepack) -> (Tensor W_origin, Tensor? B_origin)
aten::linalg_cross(Tensor self, Tensor other, *, int dim=-1) -> Tensor
aten::linalg_cross.out(Tensor self, Tensor other, *, int dim=-1, Tensor(a!) out) -> Tensor(a!)
aten::nll_loss_forward(Tensor self, Tensor target, Tensor? weight, int reduction, SymInt ignore_index) -> (Tensor output, Tensor total_weight)
aten::nll_loss_forward.output(Tensor self, Tensor target, Tensor? weight, int reduction, SymInt ignore_index, *, Tensor(a!) output, Tensor(b!) total_weight) -> (Tensor(a!), Tensor(b!))
aten::nll_loss2d_forward(Tensor self, Tensor target, Tensor? weight, int reduction, SymInt ignore_index) -> (Tensor output, Tensor total_weight)
aten::nll_loss2d_forward.output(Tensor self, Tensor target, Tensor? weight, int reduction, SymInt ignore_index, *, Tensor(a!) output, Tensor(b!) total_weight) -> (Tensor(a!), Tensor(b!))
aten::nll_loss_backward(Tensor grad_output, Tensor self, Tensor target, Tensor? weight, int reduction, SymInt ignore_index, Tensor total_weight) -> Tensor
aten::nll_loss_backward.grad_input(Tensor grad_output, Tensor self, Tensor target, Tensor? weight, int reduction, SymInt ignore_index, Tensor total_weight, *, Tensor(a!) grad_input) -> Tensor(a!)
aten::nll_loss2d_backward(Tensor grad_output, Tensor self, Tensor target, Tensor? weight, int reduction, SymInt ignore_index, Tensor total_weight) -> Tensor
aten::nll_loss2d_backward.grad_input(Tensor grad_output, Tensor self, Tensor target, Tensor? weight, int reduction, SymInt ignore_index, Tensor total_weight, *, Tensor(a!) grad_input) -> Tensor(a!)
aten::binary_cross_entropy_backward(Tensor grad_output, Tensor self, Tensor target, Tensor? weight=None, int reduction=1) -> Tensor
aten::binary_cross_entropy_backward.grad_input(Tensor grad_output, Tensor self, Tensor target, Tensor? weight=None, int reduction=1, *, Tensor(a!) grad_input) -> Tensor(a!)
aten::im2col(Tensor self, int[2] kernel_size, int[2] dilation, int[2] padding, int[2] stride) -> Tensor
aten::im2col.out(Tensor self, int[2] kernel_size, int[2] dilation, int[2] padding, int[2] stride, *, Tensor(a!) out) -> Tensor(a!)
aten::col2im(Tensor self, SymInt[2] output_size, int[2] kernel_size, int[2] dilation, int[2] padding, int[2] stride) -> Tensor
aten::col2im.out(Tensor self, SymInt[2] output_size, int[2] kernel_size, int[2] dilation, int[2] padding, int[2] stride, *, Tensor(a!) out) -> Tensor(a!)
aten::embedding(Tensor weight, Tensor indices, SymInt padding_idx=-1, bool scale_grad_by_freq=False, bool sparse=False) -> Tensor
aten::embedding.out(Tensor weight, Tensor indices, SymInt padding_idx=-1, bool scale_grad_by_freq=False, bool sparse=False, *, Tensor(a!) out) -> Tensor(a!)
aten::embedding_dense_backward(Tensor grad_output, Tensor indices, SymInt num_weights, SymInt padding_idx, bool scale_grad_by_freq) -> Tensor
aten::embedding_dense_backward.out(Tensor grad_output, Tensor indices, SymInt num_weights, SymInt padding_idx, bool scale_grad_by_freq, *, Tensor(a!) out) -> Tensor(a!)
aten::grid_sampler_2d_backward(Tensor grad_output, Tensor input, Tensor grid, int interpolation_mode, int padding_mode, bool align_corners, bool[2] output_mask) -> (Tensor, Tensor)
aten::grid_sampler_2d_backward.out(Tensor grad_output, Tensor input, Tensor grid, int interpolation_mode, int padding_mode, bool align_corners, bool[2] output_mask, *, Tensor(a!) out0, Tensor(b!) out1) -> (Tensor(a!), Tensor(b!))
aten::grid_sampler_3d_backward(Tensor grad_output, Tensor input, Tensor grid, int interpolation_mode, int padding_mode, bool align_corners, bool[2] output_mask) -> (Tensor, Tensor)
aten::grid_sampler_3d_backward.out(Tensor grad_output, Tensor input, Tensor grid, int interpolation_mode, int padding_mode, bool align_corners, bool[2] output_mask, *, Tensor(a!) out0, Tensor(b!) out1) -> (Tensor(a!), Tensor(b!))
aten::cudnn_grid_sampler_backward(Tensor self, Tensor grid, Tensor grad_output) -> (Tensor grad_self, Tensor grad_grid)
aten::cudnn_grid_sampler_backward.out(Tensor self, Tensor grid, Tensor grad_output, *, Tensor(a!) out0, Tensor(b!) out1) -> (Tensor(a!), Tensor(b!))
aten::cudnn_grid_sampler(Tensor self, Tensor grid) -> Tensor output
aten::cudnn_grid_sampler.out(Tensor self, Tensor grid, *, Tensor(a!) out) -> Tensor(a!)
aten::pixel_shuffle(Tensor self, int upscale_factor) -> Tensor
aten::pixel_shuffle.out(Tensor self, int upscale_factor, *, Tensor(a!) out) -> Tensor(a!)
aten::pixel_unshuffle(Tensor self, int downscale_factor) -> Tensor
aten::pixel_unshuffle.out(Tensor self, int downscale_factor, *, Tensor(a!) out) -> Tensor(a!)
aten::constant_pad_nd(Tensor self, SymInt[] pad, Scalar value=0) -> Tensor
aten::constant_pad_nd.out(Tensor self, SymInt[] pad, Scalar value=0, *, Tensor(a!) out) -> Tensor(a!)
aten::reflection_pad3d(Tensor self, SymInt[6] padding) -> Tensor
aten::reflection_pad3d.out(Tensor self, SymInt[6] padding, *, Tensor(a!) out) -> Tensor(a!)
aten::quantized_gru.input(Tensor input, Tensor hx, __torch__.torch.classes.rnn.CellParamsBase[] params, bool has_biases, int num_layers, float dropout, bool train, bool bidirectional, bool batch_first) -> (Tensor, Tensor)
aten::quantized_gru.data(Tensor data, Tensor batch_sizes, Tensor hx, __torch__.torch.classes.rnn.CellParamsBase[] params, bool has_biases, int num_layers, float dropout, bool train, bool bidirectional) -> (Tensor, Tensor)
aten::quantized_gru.input_legacy(Tensor input, Tensor hx, Tensor[] params, bool has_biases, int num_layers, float dropout, bool train, bool bidirectional, bool batch_first) -> (Tensor, Tensor)
aten::quantized_gru.data_legacy(Tensor data, Tensor batch_sizes, Tensor hx, Tensor[] params, bool has_biases, int num_layers, float dropout, bool train, bool bidirectional) -> (Tensor, Tensor)
aten::replication_pad1d_backward(Tensor grad_output, Tensor self, SymInt[2] padding) -> Tensor
aten::replication_pad1d_backward.grad_input(Tensor grad_output, Tensor self, SymInt[2] padding, *, Tensor(a!) grad_input) -> Tensor(a!)
sparse::qlinear_unpack(__torch__.torch.classes.sparse.LinearPackedParamsBase W_prepack) -> (Tensor W_origin, Tensor? B_origin, int[] block_pattern)
aten::replication_pad2d_backward(Tensor grad_output, Tensor self, SymInt[4] padding) -> Tensor
aten::replication_pad2d_backward.grad_input(Tensor grad_output, Tensor self, SymInt[4] padding, *, Tensor(a!) grad_input) -> Tensor(a!)
quantized::add_relu(Tensor qa, Tensor qb, float scale, int zero_point) -> Tensor qc
quantized::add_relu.out(Tensor qa, Tensor qb, Tensor(a!) out) -> Tensor(a!) out
quantized::add_relu.Scalar(Tensor qa, Scalar b) -> Tensor qc
quantized::add_relu.Scalar2(Scalar b, Tensor qa) -> Tensor qc
quantized::add_relu.Scalar_out(Tensor qa, Scalar b, Tensor(a!) out) -> Tensor(a!) out
aten::replication_pad3d_backward(Tensor grad_output, Tensor self, SymInt[6] padding) -> Tensor
aten::replication_pad3d_backward.grad_input(Tensor grad_output, Tensor self, SymInt[6] padding, *, Tensor(a!) grad_input) -> Tensor(a!)
quantized::add_relu_out(Tensor qa, Tensor qb, Tensor(a!) out) -> Tensor(a!) out
aten::reflection_pad2d_backward(Tensor grad_output, Tensor self, SymInt[4] padding) -> Tensor
aten::reflection_pad2d_backward.grad_input(Tensor grad_output, Tensor self, SymInt[4] padding, *, Tensor(a!) grad_input) -> Tensor(a!)
aten::quantized_lstm.input(Tensor input, Tensor[] hx, __torch__.torch.classes.rnn.CellParamsBase[] params, bool has_biases, int num_layers, float dropout, bool train, bool bidirectional, bool batch_first, *, ScalarType? dtype=None, bool use_dynamic=False) -> (Tensor, Tensor, Tensor)
aten::quantized_lstm.data(Tensor data, Tensor batch_sizes, Tensor[] hx, __torch__.torch.classes.rnn.CellParamsBase[] params, bool has_biases, int num_layers, float dropout, bool train, bool bidirectional, *, ScalarType? dtype=None, bool use_dynamic=False) -> (Tensor, Tensor, Tensor)
aten::quantized_lstm.input_legacy(Tensor input, Tensor[] hx, Tensor[] params, bool has_biases, int num_layers, float dropout, bool train, bool bidirectional, bool batch_first, *, ScalarType? dtype=None, bool use_dynamic=False) -> (Tensor, Tensor, Tensor)
aten::quantized_lstm.data_legacy(Tensor data, Tensor batch_sizes, Tensor[] hx, Tensor[] params, bool has_biases, int num_layers, float dropout, bool train, bool bidirectional, *, ScalarType? dtype=None, bool use_dynamic=False) -> (Tensor, Tensor, Tensor)
aten::upsample_bicubic2d.vec(Tensor input, SymInt[]? output_size, bool align_corners, float[]? scale_factors) -> Tensor
aten::upsample_bicubic2d(Tensor self, SymInt[2] output_size, bool align_corners, float? scales_h=None, float? scales_w=None) -> Tensor
aten::upsample_bicubic2d.out(Tensor self, SymInt[2] output_size, bool align_corners, float? scales_h=None, float? scales_w=None, *, Tensor(a!) out) -> Tensor(a!)
aten::upsample_bilinear2d.vec(Tensor input, SymInt[]? output_size, bool align_corners, float[]? scale_factors) -> Tensor
aten::upsample_bilinear2d(Tensor self, SymInt[2] output_size, bool align_corners, float? scales_h=None, float? scales_w=None) -> Tensor
aten::upsample_bilinear2d.out(Tensor self, SymInt[2] output_size, bool align_corners, float? scales_h=None, float? scales_w=None, *, Tensor(a!) out) -> Tensor(a!)
aten::upsample_linear1d.vec(Tensor input, SymInt[]? output_size, bool align_corners, float[]? scale_factors) -> Tensor
aten::upsample_linear1d(Tensor self, SymInt[1] output_size, bool align_corners, float? scales=None) -> Tensor
aten::upsample_linear1d.out(Tensor self, SymInt[1] output_size, bool align_corners, float? scales=None, *, Tensor(a!) out) -> Tensor(a!)
aten::upsample_nearest1d.vec(Tensor input, SymInt[]? output_size, float[]? scale_factors) -> Tensor
aten::upsample_nearest1d(Tensor self, SymInt[1] output_size, float? scales=None) -> Tensor
aten::upsample_nearest1d.out(Tensor self, SymInt[1] output_size, float? scales=None, *, Tensor(a!) out) -> Tensor(a!)
aten::upsample_nearest2d.vec(Tensor input, SymInt[]? output_size, float[]? scale_factors) -> Tensor
aten::upsample_nearest2d(Tensor self, SymInt[2] output_size, float? scales_h=None, float? scales_w=None) -> Tensor
aten::upsample_nearest2d.out(Tensor self, SymInt[2] output_size, float? scales_h=None, float? scales_w=None, *, Tensor(a!) out) -> Tensor(a!)
aten::upsample_nearest3d.vec(Tensor input, SymInt[]? output_size, float[]? scale_factors) -> Tensor
aten::upsample_nearest3d(Tensor self, SymInt[3] output_size, float? scales_d=None, float? scales_h=None, float? scales_w=None) -> Tensor
aten::upsample_nearest3d.out(Tensor self, SymInt[3] output_size, float? scales_d=None, float? scales_h=None, float? scales_w=None, *, Tensor(a!) out) -> Tensor(a!)
aten::upsample_bicubic2d_backward(Tensor grad_output, SymInt[2] output_size, SymInt[4] input_size, bool align_corners, float? scales_h=None, float? scales_w=None) -> Tensor
aten::upsample_bicubic2d_backward.grad_input(Tensor grad_output, SymInt[2] output_size, SymInt[4] input_size, bool align_corners, float? scales_h=None, float? scales_w=None, *, Tensor(a!) grad_input) -> Tensor(a!)
aten::upsample_bilinear2d_backward(Tensor grad_output, SymInt[2] output_size, SymInt[4] input_size, bool align_corners, float? scales_h=None, float? scales_w=None) -> Tensor
aten::upsample_bilinear2d_backward.grad_input(Tensor grad_output, SymInt[2] output_size, SymInt[4] input_size, bool align_corners, float? scales_h=None, float? scales_w=None, *, Tensor(a!) grad_input) -> Tensor(a!)
aten::upsample_linear1d_backward(Tensor grad_output, SymInt[1] output_size, SymInt[3] input_size, bool align_corners, float? scales=None) -> Tensor
aten::upsample_linear1d_backward.grad_input(Tensor grad_output, SymInt[1] output_size, SymInt[3] input_size, bool align_corners, float? scales=None, *, Tensor(a!) grad_input) -> Tensor(a!)
aten::upsample_nearest3d_backward(Tensor grad_output, SymInt[3] output_size, SymInt[5] input_size, float? scales_d=None, float? scales_h=None, float? scales_w=None) -> Tensor
aten::upsample_nearest3d_backward.grad_input(Tensor grad_output, SymInt[3] output_size, SymInt[5] input_size, float? scales_d=None, float? scales_h=None, float? scales_w=None, *, Tensor(a!) grad_input) -> Tensor(a!)
aten::upsample_trilinear3d_backward(Tensor grad_output, SymInt[3] output_size, SymInt[5] input_size, bool align_corners, float? scales_d=None, float? scales_h=None, float? scales_w=None) -> Tensor
aten::upsample_trilinear3d_backward.grad_input(Tensor grad_output, SymInt[3] output_size, SymInt[5] input_size, bool align_corners, float? scales_d=None, float? scales_h=None, float? scales_w=None, *, Tensor(a!) grad_input) -> Tensor(a!)
aten::one_hot(Tensor self, int num_classes=-1) -> Tensor
aten::native_batch_norm(Tensor input, Tensor? weight, Tensor? bias, Tensor? running_mean, Tensor? running_var, bool training, float momentum, float eps) -> (Tensor, Tensor, Tensor)
aten::native_batch_norm.out(Tensor input, Tensor? weight, Tensor? bias, Tensor? running_mean, Tensor? running_var, bool training, float momentum, float eps, *, Tensor(a!) out, Tensor(b!) save_mean, Tensor(c!) save_invstd) -> (Tensor(a!), Tensor(b!), Tensor(c!))
aten::cudnn_batch_norm(Tensor input, Tensor weight, Tensor? bias, Tensor? running_mean, Tensor? running_var, bool training, float exponential_average_factor, float epsilon) -> (Tensor, Tensor, Tensor, Tensor)
aten::cudnn_batch_norm.out(Tensor input, Tensor weight, Tensor? bias, Tensor? running_mean, Tensor? running_var, bool training, float exponential_average_factor, float epsilon, *, Tensor(a!) out0, Tensor(b!) out1, Tensor(c!) out2, Tensor(d!) out3) -> (Tensor(a!), Tensor(b!), Tensor(c!), Tensor(d!))
aten::miopen_batch_norm(Tensor input, Tensor weight, Tensor? bias, Tensor? running_mean, Tensor? running_var, bool training, float exponential_average_factor, float epsilon) -> (Tensor, Tensor, Tensor)
aten::miopen_batch_norm.out(Tensor input, Tensor weight, Tensor? bias, Tensor? running_mean, Tensor? running_var, bool training, float exponential_average_factor, float epsilon, *, Tensor(a!) out0, Tensor(b!) out1, Tensor(c!) out2) -> (Tensor(a!), Tensor(b!), Tensor(c!))
aten::native_batch_norm_backward(Tensor grad_out, Tensor input, Tensor? weight, Tensor? running_mean, Tensor? running_var, Tensor? save_mean, Tensor? save_invstd, bool train, float eps, bool[3] output_mask) -> (Tensor, Tensor, Tensor)
aten::native_batch_norm_backward.out(Tensor grad_out, Tensor input, Tensor? weight, Tensor? running_mean, Tensor? running_var, Tensor? save_mean, Tensor? save_invstd, bool train, float eps, bool[3] output_mask, *, Tensor(a!) out0, Tensor(b!) out1, Tensor(c!) out2) -> (Tensor(a!), Tensor(b!), Tensor(c!))
aten::cudnn_batch_norm_backward(Tensor input, Tensor grad_output, Tensor weight, Tensor? running_mean, Tensor? running_var, Tensor? save_mean, Tensor? save_var, float epsilon, Tensor reserveSpace) -> (Tensor, Tensor, Tensor)
aten::cudnn_batch_norm_backward.out(Tensor input, Tensor grad_output, Tensor weight, Tensor? running_mean, Tensor? running_var, Tensor? save_mean, Tensor? save_var, float epsilon, Tensor reserveSpace, *, Tensor(a!) out0, Tensor(b!) out1, Tensor(c!) out2) -> (Tensor(a!), Tensor(b!), Tensor(c!))
aten::miopen_batch_norm_backward(Tensor input, Tensor grad_output, Tensor weight, Tensor? running_mean, Tensor? running_var, Tensor? save_mean, Tensor? save_var, float epsilon) -> (Tensor, Tensor, Tensor)
aten::miopen_batch_norm_backward.out(Tensor input, Tensor grad_output, Tensor weight, Tensor? running_mean, Tensor? running_var, Tensor? save_mean, Tensor? save_var, float epsilon, *, Tensor(a!) out0, Tensor(b!) out1, Tensor(c!) out2) -> (Tensor(a!), Tensor(b!), Tensor(c!))
aten::native_group_norm(Tensor input, Tensor? weight, Tensor? bias, SymInt N, SymInt C, SymInt HxW, int group, float eps) -> (Tensor, Tensor, Tensor)
aten::native_group_norm.out(Tensor input, Tensor? weight, Tensor? bias, SymInt N, SymInt C, SymInt HxW, int group, float eps, *, Tensor(a!) out0, Tensor(b!) out1, Tensor(c!) out2) -> (Tensor(a!), Tensor(b!), Tensor(c!))
aten::native_group_norm_backward(Tensor grad_out, Tensor input, Tensor mean, Tensor rstd, Tensor? weight, SymInt N, SymInt C, SymInt HxW, int group, bool[3] output_mask) -> (Tensor, Tensor, Tensor)
aten::native_group_norm_backward.out(Tensor grad_out, Tensor input, Tensor mean, Tensor rstd, Tensor? weight, SymInt N, SymInt C, SymInt HxW, int group, bool[3] output_mask, *, Tensor(a!) out0, Tensor(b!) out1, Tensor(c!) out2) -> (Tensor(a!), Tensor(b!), Tensor(c!))
aten::native_layer_norm_backward(Tensor grad_out, Tensor input, SymInt[] normalized_shape, Tensor mean, Tensor rstd, Tensor? weight, Tensor? bias, bool[3] output_mask) -> (Tensor, Tensor, Tensor)
aten::native_layer_norm_backward.out(Tensor grad_out, Tensor input, SymInt[] normalized_shape, Tensor mean, Tensor rstd, Tensor? weight, Tensor? bias, bool[3] output_mask, *, Tensor(a!) out0, Tensor(b!) out1, Tensor(c!) out2) -> (Tensor(a!), Tensor(b!), Tensor(c!))
aten::avg_pool2d(Tensor self, int[2] kernel_size, int[2] stride=[], int[2] padding=0, bool ceil_mode=False, bool count_include_pad=True, int? divisor_override=None) -> Tensor
aten::avg_pool2d.out(Tensor self, int[2] kernel_size, int[2] stride=[], int[2] padding=0, bool ceil_mode=False, bool count_include_pad=True, int? divisor_override=None, *, Tensor(a!) out) -> Tensor(a!)
aten::avg_pool2d_backward(Tensor grad_output, Tensor self, int[2] kernel_size, int[2] stride, int[2] padding, bool ceil_mode, bool count_include_pad, int? divisor_override) -> Tensor
aten::avg_pool2d_backward.grad_input(Tensor grad_output, Tensor self, int[2] kernel_size, int[2] stride, int[2] padding, bool ceil_mode, bool count_include_pad, int? divisor_override, *, Tensor(a!) grad_input) -> Tensor(a!)
aten::avg_pool3d_backward(Tensor grad_output, Tensor self, int[3] kernel_size, int[3] stride, int[3] padding, bool ceil_mode, bool count_include_pad, int? divisor_override) -> Tensor
aten::avg_pool3d_backward.grad_input(Tensor grad_output, Tensor self, int[3] kernel_size, int[3] stride, int[3] padding, bool ceil_mode, bool count_include_pad, int? divisor_override, *, Tensor(a!) grad_input) -> Tensor(a!)
aten::adaptive_max_pool2d(Tensor self, int[2] output_size) -> (Tensor, Tensor)
aten::adaptive_max_pool2d.out(Tensor self, int[2] output_size, *, Tensor(a!) out, Tensor(b!) indices) -> (Tensor(a!), Tensor(b!))
aten::adaptive_max_pool2d_backward(Tensor grad_output, Tensor self, Tensor indices) -> Tensor
aten::adaptive_max_pool2d_backward.grad_input(Tensor grad_output, Tensor self, Tensor indices, *, Tensor(a!) grad_input) -> Tensor(a!)
aten::adaptive_max_pool3d_backward(Tensor grad_output, Tensor self, Tensor indices) -> Tensor
aten::adaptive_max_pool3d_backward.grad_input(Tensor grad_output, Tensor self, Tensor indices, *, Tensor(a!) grad_input) -> Tensor(a!)
aten::max_pool2d_with_indices(Tensor self, int[2] kernel_size, int[2] stride=[], int[2] padding=0, int[2] dilation=1, bool ceil_mode=False) -> (Tensor, Tensor)
aten::max_pool2d_with_indices.out(Tensor self, int[2] kernel_size, int[2] stride=[], int[2] padding=0, int[2] dilation=1, bool ceil_mode=False, *, Tensor(a!) out, Tensor(b!) indices) -> (Tensor(a!), Tensor(b!))
aten::max_pool2d_with_indices_backward(Tensor grad_output, Tensor self, int[2] kernel_size, int[2] stride, int[2] padding, int[2] dilation, bool ceil_mode, Tensor indices) -> Tensor
aten::max_pool2d_with_indices_backward.grad_input(Tensor grad_output, Tensor self, int[2] kernel_size, int[2] stride, int[2] padding, int[2] dilation, bool ceil_mode, Tensor indices, *, Tensor(a!) grad_input) -> Tensor(a!)
aten::native_dropout(Tensor input, float p, bool? train) -> (Tensor, Tensor)
aten::native_dropout.out(Tensor input, float p, bool? train, *, Tensor(a!) out0, Tensor(b!) out1) -> (Tensor(a!), Tensor(b!))
aten::_sample_dirichlet(Tensor self, Generator? generator=None) -> Tensor
aten::_sample_dirichlet.out(Tensor self, Generator? generator=None, *, Tensor(a!) out) -> Tensor(a!)
aten::threshold(Tensor self, Scalar threshold, Scalar value) -> Tensor
aten::threshold.out(Tensor self, Scalar threshold, Scalar value, *, Tensor(a!) out) -> Tensor(a!)
aten::searchsorted.Tensor(Tensor sorted_sequence, Tensor self, *, bool out_int32=False, bool right=False, str? side=None, Tensor? sorter=None) -> Tensor
aten::searchsorted.Tensor_out(Tensor sorted_sequence, Tensor self, *, bool out_int32=False, bool right=False, str? side=None, Tensor? sorter=None, Tensor(a!) out) -> Tensor(a!)
aten::searchsorted.Scalar(Tensor sorted_sequence, Scalar self, *, bool out_int32=False, bool right=False, str? side=None, Tensor? sorter=None) -> Tensor
aten::searchsorted.Scalar_out(Tensor sorted_sequence, Scalar self, *, bool out_int32=False, bool right=False, str? side=None, Tensor? sorter=None, Tensor(a!) out) -> Tensor(a!)
quantized::conv1d_prepack(Tensor weight, Tensor? bias, int[] stride, int[] padding, int[] dilation, int groups) -> __torch__.torch.classes.quantized.Conv2dPackedParamsBase
aten::get_gradients(int context_id) -> Dict(Tensor, Tensor)
aten::_fft_r2c(Tensor self, int[] dim, int normalization, bool onesided) -> Tensor
aten::_fft_r2c.out(Tensor self, int[] dim, int normalization, bool onesided, *, Tensor(a!) out) -> Tensor(a!)
aten::rrelu_with_noise_(Tensor(a!) self, Tensor noise, Scalar lower=0.125, Scalar upper=0.33333333333333331, bool training=False, Generator? generator=None) -> Tensor(a!)
quantized::conv_transpose1d(Tensor qx, __torch__.torch.classes.quantized.Conv2dPackedParamsBase packed_weight, float output_scale, int output_zero_point) -> Tensor
aten::amax(Tensor self, int[1] dim=[], bool keepdim=False) -> Tensor
aten::amax.out(Tensor self, int[1] dim=[], bool keepdim=False, *, Tensor(a!) out) -> Tensor(a!)
aten::amin(Tensor self, int[1] dim=[], bool keepdim=False) -> Tensor
aten::amin.out(Tensor self, int[1] dim=[], bool keepdim=False, *, Tensor(a!) out) -> Tensor(a!)
aten::all(Tensor self) -> Tensor
aten::all.dim(Tensor self, int dim, bool keepdim=False) -> Tensor
aten::all.out(Tensor self, int dim, bool keepdim=False, *, Tensor(a!) out) -> Tensor(a!)
aten::all.all_out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::all.dimname(Tensor self, str dim, bool keepdim=False) -> Tensor
aten::all.dimname_out(Tensor self, str dim, bool keepdim=False, *, Tensor(a!) out) -> Tensor(a!)
aten::any(Tensor self) -> Tensor
aten::any.dim(Tensor self, int dim, bool keepdim=False) -> Tensor
aten::any.out(Tensor self, int dim, bool keepdim=False, *, Tensor(a!) out) -> Tensor(a!)
aten::any.all_out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::any.dimname(Tensor self, str dim, bool keepdim=False) -> Tensor
aten::any.dimname_out(Tensor self, str dim, bool keepdim=False, *, Tensor(a!) out) -> Tensor(a!)
aten::argmax(Tensor self, int? dim=None, bool keepdim=False) -> Tensor
aten::argmax.out(Tensor self, int? dim=None, bool keepdim=False, *, Tensor(a!) out) -> Tensor(a!)
aten::argmin(Tensor self, int? dim=None, bool keepdim=False) -> Tensor
aten::argmin.out(Tensor self, int? dim=None, bool keepdim=False, *, Tensor(a!) out) -> Tensor(a!)
aten::count_nonzero.dim_IntList(Tensor self, int[] dim) -> Tensor
aten::count_nonzero.dim_IntList_out(Tensor self, int[] dim, *, Tensor(a!) out) -> Tensor(a!)
aten::count_nonzero(Tensor self, int? dim=None) -> Tensor
aten::count_nonzero.out(Tensor self, int? dim=None, *, Tensor(a!) out) -> Tensor(a!)
aten::cummax(Tensor self, int dim) -> (Tensor values, Tensor indices)
aten::cummax.dimname(Tensor self, str dim) -> (Tensor values, Tensor indices)
aten::cummax.dimname_out(Tensor self, str dim, *, Tensor(a!) values, Tensor(b!) indices) -> (Tensor(a!) values, Tensor(b!) indices)
aten::cummax.out(Tensor self, int dim, *, Tensor(a!) values, Tensor(b!) indices) -> (Tensor(a!) values, Tensor(b!) indices)
aten::cummin(Tensor self, int dim) -> (Tensor values, Tensor indices)
aten::cummin.dimname(Tensor self, str dim) -> (Tensor values, Tensor indices)
aten::cummin.dimname_out(Tensor self, str dim, *, Tensor(a!) values, Tensor(b!) indices) -> (Tensor(a!) values, Tensor(b!) indices)
aten::cummin.out(Tensor self, int dim, *, Tensor(a!) values, Tensor(b!) indices) -> (Tensor(a!) values, Tensor(b!) indices)
aten::kthvalue(Tensor self, int k, int dim=-1, bool keepdim=False) -> (Tensor values, Tensor indices)
aten::kthvalue.dimname(Tensor self, int k, str dim, bool keepdim=False) -> (Tensor values, Tensor indices)
aten::kthvalue.dimname_out(Tensor self, int k, str dim, bool keepdim=False, *, Tensor(a!) values, Tensor(b!) indices) -> (Tensor(a!) values, Tensor(b!) indices)
aten::kthvalue.values(Tensor self, int k, int dim=-1, bool keepdim=False, *, Tensor(a!) values, Tensor(b!) indices) -> (Tensor(a!) values, Tensor(b!) indices)
aten::mean(Tensor self, *, ScalarType? dtype=None) -> Tensor
aten::mean.dim(Tensor self, int[1]? dim, bool keepdim=False, *, ScalarType? dtype=None) -> Tensor
aten::mean.names_dim(Tensor self, str[1] dim, bool keepdim=False, *, ScalarType? dtype=None) -> Tensor
aten::mean.names_out(Tensor self, str[1] dim, bool keepdim=False, *, ScalarType? dtype=None, Tensor(a!) out) -> Tensor(a!)
aten::mean.out(Tensor self, int[1]? dim, bool keepdim=False, *, ScalarType? dtype=None, Tensor(a!) out) -> Tensor(a!)
aten::median(Tensor self) -> Tensor
aten::median.dim(Tensor self, int dim, bool keepdim=False) -> (Tensor values, Tensor indices)
aten::median.dim_values(Tensor self, int dim, bool keepdim=False, *, Tensor(a!) values, Tensor(b!) indices) -> (Tensor(a!) values, Tensor(b!) indices)
aten::median.names_dim(Tensor self, str dim, bool keepdim=False) -> (Tensor values, Tensor indices)
aten::median.names_dim_values(Tensor self, str dim, bool keepdim=False, *, Tensor(a!) values, Tensor(b!) indices) -> (Tensor(a!) values, Tensor(b!) indices)
aten::median.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::nanmedian(Tensor self) -> Tensor
aten::nanmedian.dim(Tensor self, int dim, bool keepdim=False) -> (Tensor values, Tensor indices)
aten::nanmedian.dim_values(Tensor self, int dim, bool keepdim=False, *, Tensor(a!) values, Tensor(b!) indices) -> (Tensor(a!) values, Tensor(b!) indices)
aten::nanmedian.names_dim(Tensor self, str dim, bool keepdim=False) -> (Tensor values, Tensor indices)
aten::nanmedian.names_dim_values(Tensor self, str dim, bool keepdim=False, *, Tensor(a!) values, Tensor(b!) indices) -> (Tensor(a!) values, Tensor(b!) indices)
aten::nanmedian.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::nansum(Tensor self, int[1]? dim=None, bool keepdim=False, *, ScalarType? dtype=None) -> Tensor
aten::nansum.out(Tensor self, int[1]? dim=None, bool keepdim=False, *, ScalarType? dtype=None, Tensor(a!) out) -> Tensor(a!)
aten::sort(Tensor self, int dim=-1, bool descending=False) -> (Tensor values, Tensor indices)
aten::sort.stable(Tensor self, *, bool? stable, int dim=-1, bool descending=False) -> (Tensor values, Tensor indices)
aten::sort.values_stable(Tensor self, *, bool? stable, int dim=-1, bool descending=False, Tensor(a!) values, Tensor(b!) indices) -> (Tensor(a!) values, Tensor(b!) indices)
aten::sort.values(Tensor self, int dim=-1, bool descending=False, *, Tensor(a!) values, Tensor(b!) indices) -> (Tensor(a!) values, Tensor(b!) indices)
aten::sort.dimname(Tensor self, str dim, bool descending=False) -> (Tensor values, Tensor indices)
aten::sort.dimname_values(Tensor self, str dim, bool descending=False, *, Tensor(a!) values, Tensor(b!) indices) -> (Tensor(a!) values, Tensor(b!) indices)
aten::sort.dimname_stable(Tensor self, *, bool? stable, str dim, bool descending=False) -> (Tensor values, Tensor indices)
aten::sort.dimname_values_stable(Tensor self, *, bool? stable, str dim, bool descending=False, Tensor(a!) values, Tensor(b!) indices) -> (Tensor(a!) values, Tensor(b!) indices)
aten::_amp_foreach_non_finite_check_and_unscale_(Tensor(a!)[] self, Tensor(b!) found_inf, Tensor inv_scale) -> ()
quantized::mul(Tensor qa, Tensor qb, float scale, int zero_point) -> Tensor qc
quantized::mul.out(Tensor qa, Tensor qb, Tensor(a!) out) -> Tensor(a!) out
quantized::mul.Scalar(Tensor qa, Scalar b) -> Tensor qc
quantized::mul.Scalar2(Scalar b, Tensor qa) -> Tensor qc
quantized::mul.Scalar_out(Tensor qa, Scalar b, Tensor(a!) out) -> Tensor(a!) out
aten::topk(Tensor self, int k, int dim=-1, bool largest=True, bool sorted=True) -> (Tensor values, Tensor indices)
aten::topk.values(Tensor self, int k, int dim=-1, bool largest=True, bool sorted=True, *, Tensor(a!) values, Tensor(b!) indices) -> (Tensor(a!) values, Tensor(b!) indices)
aten::rot90(Tensor self, int k=1, int[] dims=[0, 1]) -> Tensor
aten::rot90.out(Tensor self, int k=1, int[] dims=[0, 1], *, Tensor(a!) out) -> Tensor(a!)
quantized::clamp(Tensor qx, Scalar? min=None, Scalar? max=None) -> Tensor qy
aten::_empty_per_channel_affine_quantized(int[] size, *, Tensor scales, Tensor zero_points, int axis, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None, MemoryFormat? memory_format=0) -> Tensor
aten::_empty_per_channel_affine_quantized.out(int[] size, *, Tensor scales, Tensor zero_points, int axis, MemoryFormat? memory_format=0, Tensor(a!) out) -> Tensor(a!)
aten::aminmax(Tensor self, *, int? dim=None, bool keepdim=False) -> (Tensor min, Tensor max)
aten::aminmax.out(Tensor self, *, int? dim=None, bool keepdim=False, Tensor(a!) min, Tensor(b!) max) -> (Tensor(a!) min, Tensor(b!) max)
c10d::allreduce_(Tensor[] tensors, __torch__.torch.classes.c10d.ProcessGroup process_group, __torch__.torch.classes.c10d.ReduceOp reduce_op, int timeout) -> (Tensor[], __torch__.torch.classes.c10d.Work)
aten::_log_softmax_backward_data(Tensor grad_output, Tensor output, int dim, ScalarType input_dtype) -> Tensor
aten::_log_softmax_backward_data.out(Tensor grad_output, Tensor output, int dim, ScalarType input_dtype, *, Tensor(a!) out) -> Tensor(a!)
aten::special_ndtri(Tensor self) -> Tensor
aten::special_ndtri.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::_softmax_backward_data(Tensor grad_output, Tensor output, int dim, ScalarType input_dtype) -> Tensor
aten::_softmax_backward_data.out(Tensor grad_output, Tensor output, int dim, ScalarType input_dtype, *, Tensor(a!) grad_input) -> Tensor(a!)
aten::_is_any_true(Tensor self) -> Tensor
aten::_cudnn_rnn_flatten_weight.out(Tensor[] weight_arr, int weight_stride0, SymInt input_size, int mode, SymInt hidden_size, SymInt proj_size, int num_layers, bool batch_first, bool bidirectional, *, Tensor(a!) out) -> Tensor(a!)
aten::_cudnn_rnn_flatten_weight(Tensor[] weight_arr, int weight_stride0, SymInt input_size, int mode, SymInt hidden_size, SymInt proj_size, int num_layers, bool batch_first, bool bidirectional) -> Tensor
quantized::conv_transpose3d_padding(__torch__.torch.classes.quantized.Conv3dPackedParamsBase packed_weights) -> int[]
aten::index.Tensor(Tensor self, Tensor?[] indices) -> Tensor
aten::index.Tensor_out(Tensor self, Tensor?[] indices, *, Tensor(a!) out) -> Tensor(a!)
aten::index_put_(Tensor(a!) self, Tensor?[] indices, Tensor values, bool accumulate=False) -> Tensor(a!)
_test::cat(Tensor[] inputs) -> Tensor
aten::_index_put_impl_(Tensor(a!) self, Tensor?[] indices, Tensor values, bool accumulate=False, bool unsafe=False) -> Tensor(a!)
aten::special_i1e(Tensor self) -> Tensor
aten::special_i1e.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::_cudnn_ctc_loss.out(Tensor log_probs, Tensor targets, int[] input_lengths, int[] target_lengths, int blank, bool deterministic, bool zero_infinity, *, Tensor(a!) out0, Tensor(b!) out1) -> (Tensor(a!), Tensor(b!))
aten::_cudnn_ctc_loss(Tensor log_probs, Tensor targets, int[] input_lengths, int[] target_lengths, int blank, bool deterministic, bool zero_infinity) -> (Tensor, Tensor)
aten::_cudnn_ctc_loss.Tensor(Tensor log_probs, Tensor targets, Tensor input_lengths, Tensor target_lengths, int blank, bool deterministic, bool zero_infinity) -> (Tensor, Tensor)
quantized::conv_transpose2d_groups(__torch__.torch.classes.quantized.Conv2dPackedParamsBase packed_weights) -> int
aten::slice_scatter(Tensor self, Tensor src, int dim=0, SymInt? start=None, SymInt? end=None, SymInt step=1) -> Tensor
aten::slice_scatter.out(Tensor self, Tensor src, int dim=0, SymInt? start=None, SymInt? end=None, SymInt step=1, *, Tensor(a!) out) -> Tensor(a!)
aten::__ilshift__.Tensor(Tensor(a!) self, Tensor other) -> Tensor(a!)
aten::__ilshift__.Scalar(Tensor(a!) self, Scalar other) -> Tensor(a!)
quantized::linear_leaky_relu(Tensor X, __torch__.torch.classes.quantized.LinearPackedParamsBase W_prepack, float Y_scale_i, int Y_zero_point_i, float negative_slope) -> Tensor Y
aten::select_scatter(Tensor self, Tensor src, int dim, SymInt index) -> Tensor
aten::select_scatter.out(Tensor self, Tensor src, int dim, SymInt index, *, Tensor(a!) out) -> Tensor(a!)
quantized::conv_transpose3d_prepack(Tensor weight, Tensor? bias, int[] stride, int[] padding, int[] output_padding, int[] dilation, int groups) -> __torch__.torch.classes.quantized.Conv3dPackedParamsBase
aten::index_select(Tensor self, int dim, Tensor index) -> Tensor
aten::index_select.out(Tensor self, int dim, Tensor index, *, Tensor(a!) out) -> Tensor(a!)
aten::index_select.dimname(Tensor self, str dim, Tensor index) -> Tensor
aten::index_select.dimname_out(Tensor self, str dim, Tensor index, *, Tensor(a!) out) -> Tensor(a!)
aten::masked_fill.Scalar(Tensor self, Tensor mask, Scalar value) -> Tensor
aten::masked_fill.Tensor(Tensor self, Tensor mask, Tensor value) -> Tensor
aten::masked_fill.Scalar_out(Tensor self, Tensor mask, Scalar value, *, Tensor(a!) out) -> Tensor(a!)
aten::masked_fill.Tensor_out(Tensor self, Tensor mask, Tensor value, *, Tensor(a!) out) -> Tensor(a!)
aten::index_fill_.int_Tensor(Tensor(a!) self, int dim, Tensor index, Tensor value) -> Tensor(a!)
aten::index_fill_.int_Scalar(Tensor(a!) self, int dim, Tensor index, Scalar value) -> Tensor(a!)
aten::index_fill_.Dimname_Scalar(Tensor(a!) self, str dim, Tensor index, Scalar value) -> Tensor(a!)
aten::index_fill_.Dimname_Tensor(Tensor(a!) self, str dim, Tensor index, Tensor value) -> Tensor(a!)
aten::index_fill.int_Tensor(Tensor self, int dim, Tensor index, Tensor value) -> Tensor
aten::index_fill.int_Scalar(Tensor self, int dim, Tensor index, Scalar value) -> Tensor
aten::index_fill.Dimname_Scalar(Tensor self, str dim, Tensor index, Scalar value) -> Tensor
aten::index_fill.Dimname_Tensor(Tensor self, str dim, Tensor index, Tensor value) -> Tensor
aten::index_fill.int_Scalar_out(Tensor self, int dim, Tensor index, Scalar value, *, Tensor(a!) out) -> Tensor(a!)
aten::index_fill.int_Tensor_out(Tensor self, int dim, Tensor index, Tensor value, *, Tensor(a!) out) -> Tensor(a!)
aten::index_add(Tensor self, int dim, Tensor index, Tensor source, *, Scalar alpha=1) -> Tensor
aten::index_add.out(Tensor self, int dim, Tensor index, Tensor source, *, Scalar alpha=1, Tensor(a!) out) -> Tensor(a!)
aten::index_add.dimname(Tensor self, str dim, Tensor index, Tensor source, *, Scalar alpha=1) -> Tensor
aten::diagonal_scatter(Tensor self, Tensor src, int offset=0, int dim1=0, int dim2=1) -> Tensor
aten::diagonal_scatter.out(Tensor self, Tensor src, int offset=0, int dim1=0, int dim2=1, *, Tensor(a!) out) -> Tensor(a!)
aten::gather(Tensor self, int dim, Tensor index, *, bool sparse_grad=False) -> Tensor
aten::gather.out(Tensor self, int dim, Tensor index, *, bool sparse_grad=False, Tensor(a!) out) -> Tensor(a!)
aten::gather.dimname(Tensor self, str dim, Tensor index, *, bool sparse_grad=False) -> Tensor
aten::gather.dimname_out(Tensor self, str dim, Tensor index, *, bool sparse_grad=False, Tensor(a!) out) -> Tensor(a!)
aten::scatter.value(Tensor self, int dim, Tensor index, Scalar value) -> Tensor
aten::scatter.src(Tensor self, int dim, Tensor index, Tensor src) -> Tensor
aten::scatter.reduce(Tensor self, int dim, Tensor index, Tensor src, *, str reduce) -> Tensor
aten::scatter.value_reduce(Tensor self, int dim, Tensor index, Scalar value, *, str reduce) -> Tensor
aten::scatter.src_out(Tensor self, int dim, Tensor index, Tensor src, *, Tensor(a!) out) -> Tensor(a!)
aten::scatter.value_out(Tensor self, int dim, Tensor index, Scalar value, *, Tensor(a!) out) -> Tensor(a!)
aten::scatter.reduce_out(Tensor self, int dim, Tensor index, Tensor src, *, str reduce, Tensor(a!) out) -> Tensor(a!)
aten::scatter.value_reduce_out(Tensor self, int dim, Tensor index, Scalar value, *, str reduce, Tensor(a!) out) -> Tensor(a!)
aten::scatter.dimname_src(Tensor self, str dim, Tensor index, Tensor src) -> Tensor
aten::scatter.dimname_value(Tensor self, str dim, Tensor index, Scalar value) -> Tensor
quantized::conv2d_dynamic(Tensor qx, __torch__.torch.classes.quantized.Conv2dPackedParamsBase packed_weight, bool reduce_range=False) -> Tensor
aten::as_strided_scatter(Tensor self, Tensor src, SymInt[] size, SymInt[] stride, SymInt? storage_offset=None) -> Tensor
aten::as_strided_scatter.out(Tensor self, Tensor src, SymInt[] size, SymInt[] stride, SymInt? storage_offset=None, *, Tensor(a!) out) -> Tensor(a!)
aten::abs_(Tensor(a!) self) -> Tensor(a!)
aten::acos_(Tensor(a!) self) -> Tensor(a!)
aten::acosh_(Tensor(a!) self) -> Tensor(a!)
aten::acosh(Tensor self) -> Tensor
aten::acosh.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::angle(Tensor self) -> Tensor
aten::angle.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::asin_(Tensor(a!) self) -> Tensor(a!)
aten::asinh_(Tensor(a!) self) -> Tensor(a!)
aten::asinh(Tensor self) -> Tensor
aten::asinh.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::atan_(Tensor(a!) self) -> Tensor(a!)
aten::atanh_(Tensor(a!) self) -> Tensor(a!)
aten::atanh(Tensor self) -> Tensor
aten::atanh.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::bitwise_not_(Tensor(a!) self) -> Tensor(a!)
aten::bitwise_not(Tensor self) -> Tensor
aten::bitwise_not.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::ceil_(Tensor(a!) self) -> Tensor(a!)
aten::cos_(Tensor(a!) self) -> Tensor(a!)
aten::cosh_(Tensor(a!) self) -> Tensor(a!)
aten::deg2rad_(Tensor(a!) self) -> Tensor(a!)
aten::deg2rad(Tensor self) -> Tensor
aten::deg2rad.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::digamma_(Tensor(a!) self) -> Tensor(a!)
aten::erf_(Tensor(a!) self) -> Tensor(a!)
aten::erf(Tensor self) -> Tensor
aten::erf.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::exp_(Tensor(a!) self) -> Tensor(a!)
aten::expm1_(Tensor(a!) self) -> Tensor(a!)
aten::floor_(Tensor(a!) self) -> Tensor(a!)
aten::frac_(Tensor(a!) self) -> Tensor(a!)
aten::isfinite(Tensor self) -> Tensor
aten::isnan(Tensor self) -> Tensor
aten::isnan.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::isinf(Tensor self) -> Tensor
aten::isinf.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::isposinf(Tensor self) -> Tensor
aten::isposinf.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::isneginf(Tensor self) -> Tensor
aten::isneginf.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::isreal(Tensor self) -> Tensor
aten::lgamma_(Tensor(a!) self) -> Tensor(a!)
aten::log1p_(Tensor(a!) self) -> Tensor(a!)
aten::log2_(Tensor(a!) self) -> Tensor(a!)
aten::logit_(Tensor(a!) self, float? eps=None) -> Tensor(a!)
aten::mish_(Tensor(a!) self) -> Tensor(a!)
aten::mish(Tensor self) -> Tensor
aten::mish.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::mvlgamma_(Tensor(a!) self, int p) -> Tensor(a!)
aten::mvlgamma(Tensor self, int p) -> Tensor
aten::mvlgamma.out(Tensor self, int p, *, Tensor(a!) out) -> Tensor(a!)
aten::nan_to_num_(Tensor(a!) self, float? nan=None, float? posinf=None, float? neginf=None) -> Tensor(a!)
aten::nan_to_num(Tensor self, float? nan=None, float? posinf=None, float? neginf=None) -> Tensor
aten::nan_to_num.out(Tensor self, float? nan=None, float? posinf=None, float? neginf=None, *, Tensor(a!) out) -> Tensor(a!)
aten::neg_(Tensor(a!) self) -> Tensor(a!)
aten::round_(Tensor(a!) self) -> Tensor(a!)
aten::round_.decimals(Tensor(a!) self, *, int decimals) -> Tensor(a!)
quantized::conv1d_relu(Tensor qx, __torch__.torch.classes.quantized.Conv2dPackedParamsBase packed_weight, float output_scale, int output_zero_point) -> Tensor
aten::rsqrt_(Tensor(a!) self) -> Tensor(a!)
_quantized::conv2d_relu(Tensor qx, __torch__.torch.classes.quantized.Conv2dPackedParamsBase packed_weight, float output_scale, int output_zero_point) -> Tensor
aten::sgn_(Tensor(a!) self) -> Tensor(a!)
quantized::elu(Tensor self, float output_scale, int output_zero_point, Scalar alpha=1, Scalar scale=1, Scalar input_scale=1) -> Tensor
aten::sgn(Tensor self) -> Tensor
aten::sgn.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
quantized::dropout(Tensor self, float output_scale, int output_zero_point, Scalar p=0.5, bool training=False) -> Tensor
aten::sign_(Tensor(a!) self) -> Tensor(a!)
quantized::embedding_4bit(__torch__.torch.classes.quantized.EmbeddingPackedParamsBase weight, Tensor indices, bool pruned_weights=False) -> Tensor
aten::signbit(Tensor self) -> Tensor
aten::signbit.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
quantized::embedding_bag_byte_rowwise_offsets(Tensor weight, Tensor indices, Tensor? offsets=None, bool scale_grad_by_freq=False, int mode=0, bool pruned_weights=False, Tensor? per_sample_weights=None, Tensor? compressed_indices_mapping=None, bool include_last_offset=False) -> Tensor
aten::sin_(Tensor(a!) self) -> Tensor(a!)
quantized::embedding_bag_2bit_prepack(Tensor weight, bool optimized_qparams=False, int nbins=200, float ratio=0.16) -> Tensor
aten::sinc_(Tensor(a!) self) -> Tensor(a!)
quantized::embedding_bag_byte_unpack(Tensor weight) -> Tensor
aten::sinc(Tensor self) -> Tensor
aten::sinc.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
quantized::embedding_bag_prepack(Tensor weight) -> __torch__.torch.classes.quantized.EmbeddingPackedParamsBase W_prepack
aten::sinh_(Tensor(a!) self) -> Tensor(a!)
quantized::embedding_bag_2bit_unpack(Tensor weight) -> Tensor
aten::sqrt_(Tensor(a!) self) -> Tensor(a!)
aten::threshold_(Tensor(a!) self, Scalar threshold, Scalar value) -> Tensor(a!)
aten::trunc_(Tensor(a!) self) -> Tensor(a!)
aten::_sparse_log_softmax.Dimname(Tensor self, str dim, *, ScalarType? dtype=None) -> Tensor
aten::_sparse_log_softmax.int(Tensor self, int dim, ScalarType? dtype=None) -> Tensor
aten::_sparse_log_softmax.out(Tensor self, int dim, bool half_to_float, *, Tensor(a!) out) -> Tensor(a!)
aten::_sparse_log_softmax(Tensor self, int dim, bool half_to_float) -> Tensor
aten::i0_(Tensor(a!) self) -> Tensor(a!)
aten::i0(Tensor self) -> Tensor
aten::i0.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::erfc_(Tensor(a!) self) -> Tensor(a!)
aten::erfc(Tensor self) -> Tensor
aten::erfc.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::erfinv_(Tensor(a!) self) -> Tensor(a!)
aten::exp2_(Tensor(a!) self) -> Tensor(a!)
aten::exp2(Tensor self) -> Tensor
aten::exp2.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::special_entr(Tensor self) -> Tensor
aten::special_entr.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::_coalesced(Tensor self, bool coalesced) -> Tensor
aten::_coalesced.out(Tensor self, bool coalesced, *, Tensor(a!) out) -> Tensor(a!)
quantized::conv2d_output_padding(__torch__.torch.classes.quantized.Conv2dPackedParamsBase packed_weights) -> int[]
aten::special_erfcx(Tensor self) -> Tensor
aten::special_erfcx.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::_conj(Tensor(a) self) -> Tensor(a)
quantized::conv2d_transpose(__torch__.torch.classes.quantized.Conv2dPackedParamsBase packed_weights) -> int
aten::special_i0e(Tensor self) -> Tensor
aten::special_i0e.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::_ctc_loss(Tensor log_probs, Tensor targets, int[] input_lengths, int[] target_lengths, int blank=0, bool zero_infinity=False) -> (Tensor, Tensor)
aten::_ctc_loss.Tensor(Tensor log_probs, Tensor targets, Tensor input_lengths, Tensor target_lengths, int blank=0, bool zero_infinity=False) -> (Tensor, Tensor)
aten::_ctc_loss.out(Tensor log_probs, Tensor targets, int[] input_lengths, int[] target_lengths, int blank=0, bool zero_infinity=False, *, Tensor(a!) out0, Tensor(b!) out1) -> (Tensor(a!), Tensor(b!))
aten::_ctc_loss.Tensor_out(Tensor log_probs, Tensor targets, Tensor input_lengths, Tensor target_lengths, int blank=0, bool zero_infinity=False, *, Tensor(a!) out0, Tensor(b!) out1) -> (Tensor(a!), Tensor(b!))
quantized::conv_transpose2d_output_padding(__torch__.torch.classes.quantized.Conv2dPackedParamsBase packed_weights) -> int[]
aten::special_i1(Tensor self) -> Tensor
aten::special_i1.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::_ctc_loss_backward(Tensor grad, Tensor log_probs, Tensor targets, int[] input_lengths, int[] target_lengths, Tensor neg_log_likelihood, Tensor log_alpha, int blank, bool zero_infinity=False) -> Tensor
aten::_ctc_loss_backward.Tensor(Tensor grad, Tensor log_probs, Tensor targets, Tensor input_lengths, Tensor target_lengths, Tensor neg_log_likelihood, Tensor log_alpha, int blank, bool zero_infinity=False) -> Tensor
aten::_ctc_loss_backward.out(Tensor grad, Tensor log_probs, Tensor targets, int[] input_lengths, int[] target_lengths, Tensor neg_log_likelihood, Tensor log_alpha, int blank, bool zero_infinity=False, *, Tensor(a!) out) -> Tensor(a!)
quantized::conv_transpose2d_dilation(__torch__.torch.classes.quantized.Conv2dPackedParamsBase packed_weights) -> int[]
aten::elu_(Tensor(a!) self, Scalar alpha=1, Scalar scale=1, Scalar input_scale=1) -> Tensor(a!)
aten::elu(Tensor self, Scalar alpha=1, Scalar scale=1, Scalar input_scale=1) -> Tensor
aten::elu.out(Tensor self, Scalar alpha=1, Scalar scale=1, Scalar input_scale=1, *, Tensor(a!) out) -> Tensor(a!)
aten::hardshrink(Tensor self, Scalar lambd=0.5) -> Tensor
aten::hardshrink.out(Tensor self, Scalar lambd=0.5, *, Tensor(a!) out) -> Tensor(a!)
aten::hardsigmoid_(Tensor(a!) self) -> Tensor(a!)
aten::hardsigmoid(Tensor self) -> Tensor
aten::hardsigmoid.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::hardtanh_(Tensor(a!) self, Scalar min_val=-1, Scalar max_val=1) -> Tensor(a!)
aten::hardtanh(Tensor self, Scalar min_val=-1, Scalar max_val=1) -> Tensor
aten::hardtanh.out(Tensor self, Scalar min_val=-1, Scalar max_val=1, *, Tensor(a!) out) -> Tensor(a!)
aten::hardswish_(Tensor(a!) self) -> Tensor(a!)
aten::hardswish(Tensor self) -> Tensor
aten::hardswish.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
aten::leaky_relu_(Tensor(a!) self, Scalar negative_slope=0.01) -> Tensor(a!)
aten::leaky_relu(Tensor self, Scalar negative_slope=0.01) -> Tensor
aten::leaky_relu.out(Tensor self, Scalar negative_slope=0.01, *, Tensor(a!) out) -> Tensor(a!)
aten::relu_(Tensor(a!) self) -> Tensor(a!)
quantized::quantized_lstm_cell_dynamic(Tensor input, Tensor[] hx, __torch__.torch.classes.quantized.LinearPackedParamsBase w_ih, __torch__.torch.classes.quantized.LinearPackedParamsBase w_hh, Tensor bias_ih, Tensor bias_hh) -> (Tensor, Tensor)
aten::celu_(Tensor(a!) self, Scalar alpha=1.) -> Tensor(a!)
aten::celu(Tensor self, Scalar alpha=1.) -> Tensor
aten::celu.out(Tensor self, Scalar alpha=1., *, Tensor(a!) out) -> Tensor(a!)
aten::gelu(Tensor self, *, str approximate="none") -> Tensor
aten::gelu.out(Tensor self, *, str approximate="none", Tensor(a!) out) -> Tensor(a!)
aten::sigmoid_(Tensor(a!) self) -> Tensor(a!)
quantized::embedding_bag_byte(__torch__.torch.classes.quantized.EmbeddingPackedParamsBase weight, Tensor indices, Tensor? offsets=None, bool scale_grad_by_freq=False, int mode=0, bool pruned_weights=False, Tensor? per_sample_weights=None, Tensor? compressed_indices_mapping=None, bool include_last_offset=False) -> Tensor
aten::silu_(Tensor(a!) self) -> Tensor(a!)
quantized::embedding_bag_2bit_rowwise_offsets(Tensor weight, Tensor indices, Tensor? offsets=None, bool scale_grad_by_freq=False, int mode=0, bool pruned_weights=False, Tensor? per_sample_weights=None, Tensor? compressed_indices_mapping=None, bool include_last_offset=False) -> Tensor
aten::silu(Tensor self) -> Tensor
aten::silu.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
quantized::embedding_bag_4bit_rowwise_offsets(Tensor weight, Tensor indices, Tensor? offsets=None, bool scale_grad_by_freq=False, int mode=0, bool pruned_weights=False, Tensor? per_sample_weights=None, Tensor? compressed_indices_mapping=None, bool include_last_offset=False) -> Tensor
aten::softshrink(Tensor self, Scalar lambd=0.5) -> Tensor
aten::softshrink.out(Tensor self, Scalar lambd=0.5, *, Tensor(a!) out) -> Tensor(a!)
aten::_aminmax(Tensor self) -> (Tensor, Tensor)
aten::_aminmax.dim(Tensor self, int dim, bool keepdim=False) -> (Tensor, Tensor)
aten::_aminmax.out(Tensor self, *, Tensor(a!) out0, Tensor(b!) out1) -> (Tensor(a!), Tensor(b!))
aten::_aminmax.dim_out(Tensor self, int dim, bool keepdim=False, *, Tensor(a!) out0, Tensor(b!) out1) -> (Tensor(a!), Tensor(b!))
_quantized::linear_prepack_fp16_legacy(Tensor W, Tensor? B=None) -> Tensor W_prepack
aten::tanh_(Tensor(a!) self) -> Tensor(a!)
aten::flatten.using_ints(Tensor(a) self, int start_dim=0, int end_dim=-1) -> Tensor(a)
aten::flatten.DimnameList(Tensor(a) self, str[] dims, str out_dim) -> Tensor(a)
aten::flatten.named_out_dim(Tensor(a) self, int start_dim, int end_dim, str out_dim) -> Tensor(a)
aten::flatten.using_names(Tensor(a) self, str start_dim, str end_dim, str out_dim) -> Tensor(a)
aten::flip(Tensor self, int[] dims) -> Tensor
aten::flip.out(Tensor self, int[] dims, *, Tensor(a!) out) -> Tensor(a!)
aten::tril(Tensor self, int diagonal=0) -> Tensor
aten::tril.out(Tensor self, int diagonal=0, *, Tensor(a!) out) -> Tensor(a!)
aten::_sparse_bsc_tensor_unsafe(Tensor ccol_indices, Tensor row_indices, Tensor values, int[] size, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
aten::triu(Tensor self, int diagonal=0) -> Tensor
aten::triu.out(Tensor self, int diagonal=0, *, Tensor(a!) out) -> Tensor(a!)
aten::_sparse_coo_tensor_with_dims(int sparse_dim, int dense_dim, int[] size, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=False) -> Tensor
aten::_sparse_coo_tensor_with_dims.out(int sparse_dim, int dense_dim, int[] size, *, Tensor(a!) out) -> Tensor(a!)
aten::repeat(Tensor self, SymInt[] repeats) -> Tensor
aten::repeat.out(Tensor self, SymInt[] repeats, *, Tensor(a!) out) -> Tensor(a!)
sparse::qlinear_dynamic(Tensor X, __torch__.torch.classes.sparse.LinearPackedParamsBase W_prepack) -> Tensor Y
aten::roll(Tensor self, int[1] shifts, int[1] dims=[]) -> Tensor
aten::roll.out(Tensor self, int[1] shifts, int[1] dims=[], *, Tensor(a!) out) -> Tensor(a!)
quantized::cat_relu_out(Tensor[] qx, int dim, Tensor(a!) out) -> Tensor(a!)
mkldnn_prepacked::conv2d_run(Tensor X, __torch__.torch.classes.mkldnn.ConvOpContext W_prepack) -> Tensor Y
aten::_empty_affine_quantized(int[] size, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None, float scale=1., int zero_point=0, MemoryFormat? memory_format=0) -> Tensor
aten::_empty_affine_quantized.out(int[] size, *, float scale=1., int zero_point=0, MemoryFormat? memory_format=0, Tensor(a!) out) -> Tensor(a!)
aten::view_copy(Tensor self, SymInt[] size) -> Tensor
aten::view_copy.out(Tensor self, SymInt[] size, *, Tensor(a!) out) -> Tensor(a!)
aten::view_copy.dtype_out(Tensor self, ScalarType dtype, *, Tensor(a!) out) -> Tensor(a!)
aten::view_copy.dtype(Tensor self, ScalarType dtype) -> Tensor
aten::expand_copy(Tensor self, SymInt[] size, *, bool implicit=False) -> Tensor
aten::expand_copy.out(Tensor self, SymInt[] size, *, bool implicit=False, Tensor(a!) out) -> Tensor(a!)
aten::diag_embed(Tensor self, int offset=0, int dim1=-2, int dim2=-1) -> Tensor
aten::diag_embed.out(Tensor self, int offset=0, int dim1=-2, int dim2=-1, *, Tensor(a!) out) -> Tensor(a!)
aten::narrow_copy(Tensor self, int dim, SymInt start, SymInt length) -> Tensor
aten::narrow_copy.out(Tensor self, int dim, SymInt start, SymInt length, *, Tensor(a!) out) -> Tensor(a!)
aten::unsafe_split.Tensor(Tensor self, SymInt split_size, int dim=0) -> Tensor[]
aten::unsafe_split.Tensor_out(Tensor self, SymInt split_size, int dim=0, *, Tensor(a!)[] out) -> ()
aten::block_diag(Tensor[] tensors) -> Tensor
aten::block_diag.out(Tensor[] tensors, *, Tensor(a!) out) -> Tensor(a!)
aten::dropout(Tensor input, float p, bool train) -> Tensor
aten::feature_dropout(Tensor input, float p, bool train) -> Tensor
aten::alpha_dropout(Tensor input, float p, bool train) -> Tensor
aten::feature_alpha_dropout(Tensor input, float p, bool train) -> Tensor
aten::_sparse_softmax.Dimname(Tensor self, str dim, *, ScalarType? dtype=None) -> Tensor
aten::_sparse_softmax.int(Tensor self, int dim, ScalarType? dtype=None) -> Tensor
aten::_sparse_softmax.out(Tensor self, int dim, bool half_to_float, *, Tensor(a!) out) -> Tensor(a!)
aten::_sparse_softmax(Tensor self, int dim, bool half_to_float) -> Tensor
aten::absolute_(Tensor(a!) self) -> Tensor(a!)
quantized::linear_prepack_fp16_legacy(Tensor W, Tensor? B=None) -> Tensor W_prepack
aten::_add_relu.Tensor(Tensor self, Tensor other, *, Scalar alpha=1) -> Tensor
aten::_add_relu.out(Tensor self, Tensor other, *, Scalar alpha=1, Tensor(a!) out) -> Tensor(a!)
aten::_add_relu.Scalar(Tensor self, Scalar other, Scalar alpha=1) -> Tensor
aten::_add_relu.Scalar_out(Tensor self, Scalar other, Scalar alpha=1, *, Tensor(a!) out) -> Tensor(a!)
_quantized::linear_prepack(Tensor W, Tensor? B=None) -> __torch__.torch.classes.quantized.LinearPackedParamsBase W_prepack
aten::_add_relu_.Tensor(Tensor(a!) self, Tensor other, *, Scalar alpha=1) -> Tensor(a!)
aten::_add_relu_.Scalar(Tensor(a!) self, Scalar other, Scalar alpha=1) -> Tensor(a!)
aten::addcdiv_(Tensor(a!) self, Tensor tensor1, Tensor tensor2, *, Scalar value=1) -> Tensor(a!)
aten::addcmul_(Tensor(a!) self, Tensor tensor1, Tensor tensor2, *, Scalar value=1) -> Tensor(a!)
aten::addmv_(Tensor(a!) self, Tensor mat, Tensor vec, *, Scalar beta=1, Scalar alpha=1) -> Tensor(a!)
aten::align_as(Tensor self, Tensor other) -> Tensor
aten::align_tensors(Tensor[] tensors) -> Tensor[]
aten::align_to(Tensor(a) self, str[] names) -> Tensor(a)
aten::align_to.ellipsis_idx(Tensor(a) self, str[] order, int ellipsis_idx) -> Tensor(a)
aten::arccosh_(Tensor(a!) self) -> Tensor(a!)
aten::atan2_(Tensor(a!) self, Tensor other) -> Tensor(a!)
aten::clamp_(Tensor(a!) self, Scalar? min=None, Scalar? max=None) -> Tensor(a!)
aten::clamp_.Tensor(Tensor(a!) self, Tensor? min=None, Tensor? max=None) -> Tensor(a!)
aten::equal(Tensor self, Tensor other) -> bool
aten::floor_divide_.Scalar(Tensor(a!) self, Scalar other) -> Tensor(a!)
aten::floor_divide_.Tensor(Tensor(a!) self, Tensor other) -> Tensor(a!)
aten::hypot_(Tensor(a!) self, Tensor other) -> Tensor(a!)
aten::igamma_(Tensor(a!) self, Tensor other) -> Tensor(a!)
aten::igammac_(Tensor(a!) self, Tensor other) -> Tensor(a!)
aten::is_coalesced(Tensor self) -> bool
aten::is_inference(Tensor self) -> bool
aten::is_pinned(Tensor self, Device? device=None) -> bool
aten::is_signed(Tensor self) -> bool
aten::max_pool1d(Tensor self, int[1] kernel_size, int[1] stride=[], int[1] padding=[0], int[1] dilation=[1], bool ceil_mode=False) -> Tensor
aten::max_pool3d_with_indices(Tensor self, int[3] kernel_size, int[3] stride=[], int[3] padding=0, int[3] dilation=1, bool ceil_mode=False) -> (Tensor, Tensor)
aten::max_pool3d_with_indices.out(Tensor self, int[3] kernel_size, int[3] stride=[], int[3] padding=0, int[3] dilation=1, bool ceil_mode=False, *, Tensor(a!) out, Tensor(b!) indices) -> (Tensor(a!), Tensor(b!))
aten::nextafter_(Tensor(a!) self, Tensor other) -> Tensor(a!)
aten::output_nr(Tensor self) -> int
aten::polygamma_(Tensor(a!) self, int n) -> Tensor(a!)
aten::resize_as_(Tensor(a!) self, Tensor the_template, *, MemoryFormat? memory_format=None) -> Tensor(a!)
quantized::batch_norm_relu(Tensor qx, Tensor? weight, Tensor? bias, Tensor mean, Tensor var, float eps, float output_scale, int output_zero_point) -> Tensor
aten::square_(Tensor(a!) self) -> Tensor(a!)
aten::unsafe_chunk(Tensor self, int chunks, int dim=0) -> Tensor[]
aten::unsafe_split_with_sizes(Tensor self, SymInt[] split_sizes, int dim=0) -> Tensor[]
aten::unsafe_split_with_sizes.out(Tensor self, SymInt[] split_sizes, int dim=0, *, Tensor(a!)[] out) -> ()
aten::vander(Tensor x, int? N=None, bool increasing=False) -> Tensor
aten::set_data(Tensor(a!) self, Tensor new_data) -> ()
_quantized::conv_transpose3d_prepack(Tensor weight, Tensor? bias, int[] stride, int[] padding, int[] output_padding, int[] dilation, int groups) -> __torch__.torch.classes.quantized.Conv3dPackedParamsBase
aten::data(Tensor self) -> Tensor
aten::is_leaf(Tensor self) -> bool
aten::_version(Tensor self) -> int
aten::retain_grad(Tensor(a!) self) -> ()
quantized::batch_norm3d_relu(Tensor qx, Tensor? weight, Tensor? bias, Tensor mean, Tensor var, float eps, float output_scale, int output_zero_point) -> Tensor
sparse::qlinear_relu(Tensor X, __torch__.torch.classes.sparse.LinearPackedParamsBase W_prepack, float Y_scale_i, int Y_zero_point_i) -> Tensor Y
quantized::add_scalar(Tensor qa, Scalar b) -> Tensor qc
quantized::add_scalar.Tensor(Tensor qa, Tensor b) -> Tensor qc
quantized::batch_norm(Tensor qx, Tensor? weight, Tensor? bias, Tensor mean, Tensor var, float eps, float output_scale, int output_zero_point) -> Tensor
quantized::batch_norm1d(Tensor qx, Tensor? weight, Tensor? bias, Tensor mean, Tensor var, float eps, float output_scale, int output_zero_point) -> Tensor
quantized::batch_norm1d_relu(Tensor qx, Tensor? weight, Tensor? bias, Tensor mean, Tensor var, float eps, float output_scale, int output_zero_point) -> Tensor
quantized::max_pool1d(Tensor qx, int[] kernel_size, int[] stride, int[] padding, int[] dilation, bool ceil_mode) -> Tensor
quantized::max_pool2d(Tensor qx, int[] kernel_size, int[] stride, int[] padding, int[] dilation, bool ceil_mode) -> Tensor
quantized::cat_relu(Tensor[] qx, int dim, float? scale, int? zero_point) -> Tensor
quantized::conv2d.new(Tensor qx, __torch__.torch.classes.quantized.Conv2dPackedParamsBase packed_weight, float output_scale, int output_zero_point) -> Tensor
quantized::conv2d(Tensor qx, __torch__.torch.classes.quantized.Conv2dPackedParamsBase weight, int[] stride, int[] padding, int[] dilation, int groups, float output_scale, int output_zero_point) -> Tensor
quantized::conv2d_relu.new(Tensor qx, __torch__.torch.classes.quantized.Conv2dPackedParamsBase packed_weight, float output_scale, int output_zero_point) -> Tensor
quantized::conv2d_relu(Tensor qx, __torch__.torch.classes.quantized.Conv2dPackedParamsBase weight, int[] stride, int[] padding, int[] dilation, int groups, float output_scale, int output_zero_point) -> Tensor
quantized::conv_transpose2d(Tensor qx, __torch__.torch.classes.quantized.Conv2dPackedParamsBase packed_weight, float output_scale, int output_zero_point) -> Tensor
quantized::conv_transpose3d(Tensor qx, __torch__.torch.classes.quantized.Conv3dPackedParamsBase packed_weight, float output_scale, int output_zero_point) -> Tensor
_quantized::conv_transpose2d(Tensor qx, __torch__.torch.classes.quantized.Conv2dPackedParamsBase packed_weight, float output_scale, int output_zero_point) -> Tensor
aten::scalar_tensor(Scalar s, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
aten::scalar_tensor.out(Scalar s, *, Tensor(a!) out) -> Tensor(a!)
quantized::conv3d_dynamic(Tensor qx, __torch__.torch.classes.quantized.Conv3dPackedParamsBase packed_weight, bool reduce_range=False) -> Tensor
quantized::conv_transpose2d_dynamic(Tensor qx, __torch__.torch.classes.quantized.Conv2dPackedParamsBase packed_weight, bool reduce_range=False) -> Tensor
quantized::conv_transpose3d_dynamic(Tensor qx, __torch__.torch.classes.quantized.Conv3dPackedParamsBase packed_weight, bool reduce_range=False) -> Tensor
quantized::conv_prepack(Tensor weight, Tensor? bias, int[] stride, int[] padding, int[] dilation, int groups) -> __torch__.torch.classes.quantized.Conv2dPackedParamsBase
quantized::conv2d_prepack(Tensor weight, Tensor? bias, int[] stride, int[] padding, int[] dilation, int groups) -> __torch__.torch.classes.quantized.Conv2dPackedParamsBase
quantized::conv_transpose2d_prepack(Tensor weight, Tensor? bias, int[] stride, int[] padding, int[] output_padding, int[] dilation, int groups) -> __torch__.torch.classes.quantized.Conv2dPackedParamsBase
_quantized::conv_transpose1d_prepack(Tensor weight, Tensor? bias, int[] stride, int[] padding, int[] output_padding, int[] dilation, int groups) -> __torch__.torch.classes.quantized.Conv2dPackedParamsBase
aten::__iand__.Tensor(Tensor(a!) self, Tensor other) -> Tensor(a!)
aten::__iand__.Scalar(Tensor(a!) self, Scalar other) -> Tensor(a!)
quantized::linear_relu(Tensor X, __torch__.torch.classes.quantized.LinearPackedParamsBase W_prepack, float Y_scale_i, int Y_zero_point_i) -> Tensor Y
aten::__irshift__.Tensor(Tensor(a!) self, Tensor other) -> Tensor(a!)
aten::__irshift__.Scalar(Tensor(a!) self, Scalar other) -> Tensor(a!)
_quantized::linear(Tensor X, __torch__.torch.classes.quantized.LinearPackedParamsBase W_prepack, float Y_scale_i, int Y_zero_point_i) -> Tensor Y
aten::__ixor__.Tensor(Tensor(a!) self, Tensor other) -> Tensor(a!)
aten::__ixor__.Scalar(Tensor(a!) self, Scalar other) -> Tensor(a!)
quantized::linear_with_input_q_dq_qweight_dq_output_fp32(Tensor X, float X_scale, int X_zero_point, __torch__.torch.classes.quantized.LinearPackedParamsBase W_prepack) -> Tensor Y
aten::__lshift__.Tensor(Tensor self, Tensor other) -> Tensor
aten::__lshift__.Scalar(Tensor self, Scalar other) -> Tensor
aten::__lshift__.Scalar_out(Tensor self, Scalar other, *, Tensor(a!) out) -> Tensor(a!)
aten::__lshift__.Tensor_out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
quantized::linear_with_input_q_dq_qweight_dq_relu_output_fp32(Tensor X, float X_scale, int X_zero_point, __torch__.torch.classes.quantized.LinearPackedParamsBase W_prepack) -> Tensor Y
aten::__or__.Tensor(Tensor self, Tensor other) -> Tensor
aten::__or__.Scalar(Tensor self, Scalar other) -> Tensor
quantized::linear_dynamic(Tensor X, __torch__.torch.classes.quantized.LinearPackedParamsBase W_prepack, bool reduce_range=False) -> Tensor Y
aten::__rshift__.Tensor(Tensor self, Tensor other) -> Tensor
aten::__rshift__.Scalar(Tensor self, Scalar other) -> Tensor
aten::__rshift__.Scalar_out(Tensor self, Scalar other, *, Tensor(a!) out) -> Tensor(a!)
aten::__rshift__.Tensor_out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
quantized::linear_relu_dynamic(Tensor X, __torch__.torch.classes.quantized.LinearPackedParamsBase W_prepack, bool reduce_range=False) -> Tensor Y
aten::__xor__.Tensor(Tensor self, Tensor other) -> Tensor
aten::__xor__.Scalar(Tensor self, Scalar other) -> Tensor
quantized::linear_dynamic_fp16(Tensor X, __torch__.torch.classes.quantized.LinearPackedParamsBase W_prepack) -> Tensor Y
aten::_adaptive_avg_pool2d(Tensor self, SymInt[2] output_size) -> Tensor
aten::_adaptive_avg_pool2d.out(Tensor self, SymInt[2] output_size, *, Tensor(a!) out) -> Tensor(a!)
quantized::linear_relu_dynamic_fp16(Tensor X, __torch__.torch.classes.quantized.LinearPackedParamsBase W_prepack) -> Tensor Y
aten::_adaptive_avg_pool3d(Tensor self, SymInt[3] output_size) -> Tensor
aten::_adaptive_avg_pool3d.out(Tensor self, SymInt[3] output_size, *, Tensor(a!) out) -> Tensor(a!)
quantized::linear_prepack(Tensor W, Tensor? B=None) -> __torch__.torch.classes.quantized.LinearPackedParamsBase W_prepack
aten::_add_batch_dim(Tensor self, int batch_dim, int level) -> Tensor
quantized::linear_prepack_fp16(Tensor W, Tensor? B=None) -> __torch__.torch.classes.quantized.LinearPackedParamsBase W_prepack
aten::_amp_update_scale(Tensor self, Tensor growth_tracker, Tensor found_inf, float scale_growth_factor, float scale_backoff_factor, int growth_interval) -> (Tensor, Tensor growth_tracker_out)
aten::_amp_update_scale.out(Tensor self, Tensor(b!) growth_tracker, Tensor found_inf, float scale_growth_factor, float scale_backoff_factor, int growth_interval, *, Tensor(a!) out) -> Tensor(a!)
quantized::mul_relu(Tensor qa, Tensor qb, float scale, int zero_point) -> Tensor qc
quantized::mul_relu.out(Tensor qa, Tensor qb, Tensor(a!) out) -> Tensor(a!) out
quantized::mul_relu.Scalar(Tensor qa, Scalar b) -> Tensor qc
quantized::mul_relu.Scalar2(Scalar b, Tensor qa) -> Tensor qc
quantized::mul_relu.Scalar_out(Tensor qa, Scalar b, Tensor(a!) out) -> Tensor(a!) out
aten::sparse_bsc_tensor.ccol_row_value_size(Tensor ccol_indices, Tensor row_indices, Tensor values, int[] size, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=False) -> Tensor
aten::sparse_bsc_tensor.ccol_row_value(Tensor ccol_indices, Tensor row_indices, Tensor values, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=False) -> Tensor
aten::_amp_update_scale_(Tensor(a!) self, Tensor(b!) growth_tracker, Tensor found_inf, float scale_growth_factor, float scale_backoff_factor, int growth_interval) -> Tensor(a!)
quantized::mul_out(Tensor qa, Tensor qb, Tensor(a!) out) -> Tensor(a!) out
aten::sparse_bsr_tensor.crow_col_value_size(Tensor crow_indices, Tensor col_indices, Tensor values, int[] size, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=False) -> Tensor
aten::sparse_bsr_tensor.crow_col_value(Tensor crow_indices, Tensor col_indices, Tensor values, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=False) -> Tensor
aten::_assert_async(Tensor self) -> ()
quantized::mul_relu_out(Tensor qa, Tensor qb, Tensor(a!) out) -> Tensor(a!) out
aten::sparse_compressed_tensor.comp_plain_value_size(Tensor compressed_indices, Tensor plain_indices, Tensor values, int[] size, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=False) -> Tensor
aten::sparse_compressed_tensor.comp_plain_value(Tensor compressed_indices, Tensor plain_indices, Tensor values, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=False) -> Tensor
aten::_assert_tensor_metadata(Tensor a, int[]? size=None, int[]? stride=None, ScalarType? dtype=None) -> ()
quantized::mul_scalar(Tensor qa, Scalar b) -> Tensor qc
quantized::mul_scalar.Tensor(Tensor qa, Tensor b) -> Tensor qc
aten::sparse_coo_tensor.size(int[] size, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=False) -> Tensor
aten::sparse_coo_tensor.indices(Tensor indices, Tensor values, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
aten::sparse_coo_tensor.indices_size(Tensor indices, Tensor values, int[] size, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
aten::sparse_coo_tensor.size_out(int[] size, *, Tensor(a!) out) -> Tensor(a!)
aten::_autocast_to_full_precision(Tensor(a) self, bool cuda_enabled, bool cpu_enabled) -> Tensor(a)
quantized::mul_scalar_relu(Tensor qa, Scalar b) -> Tensor qc
quantized::mul_scalar_relu.Tensor(Tensor qa, Tensor b) -> Tensor qc
aten::sparse_csc_tensor.ccol_row_value_size(Tensor ccol_indices, Tensor row_indices, Tensor values, int[] size, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=False) -> Tensor
aten::sparse_csc_tensor.ccol_row_value(Tensor ccol_indices, Tensor row_indices, Tensor values, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=False) -> Tensor
aten::_autocast_to_reduced_precision(Tensor(a) self, bool cuda_enabled, bool cpu_enabled, ScalarType cuda_dtype, ScalarType cpu_dtype) -> Tensor(a)
quantized::mul_scalar_out(Tensor qa, Scalar b, Tensor(a!) out) -> Tensor(a!) out
quantized::mul_scalar_out.Tensor(Tensor qa, Tensor b, Tensor(a!) out) -> Tensor(a!) out
aten::sparse_csr_tensor.crow_col_value_size(Tensor crow_indices, Tensor col_indices, Tensor values, int[] size, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=False) -> Tensor
aten::sparse_csr_tensor.crow_col_value(Tensor crow_indices, Tensor col_indices, Tensor values, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=False) -> Tensor
aten::_backward(Tensor self, Tensor[] inputs, Tensor? gradient=None, bool? retain_graph=None, bool create_graph=False) -> ()
quantized::mul_scalar_relu_out(Tensor qa, Scalar b, Tensor(a!) out) -> Tensor(a!) out
quantized::mul_scalar_relu_out.Tensor(Tensor qa, Tensor b, Tensor(a!) out) -> Tensor(a!) out
aten::_batch_norm_impl_index(Tensor input, Tensor? weight, Tensor? bias, Tensor? running_mean, Tensor? running_var, bool training, float momentum, float eps, bool cudnn_enabled) -> (Tensor, Tensor, Tensor, Tensor, int)
quantized::layer_norm(Tensor input, int[] normalized_shape, Tensor? weight, Tensor? bias, float eps, float output_scale, int output_zero_point) -> Tensor
aten::_batch_norm_impl_index_backward(int impl_index, Tensor input, Tensor grad_output, Tensor? weight, Tensor? running_mean, Tensor? running_var, Tensor? save_mean, Tensor? save_var_transform, bool train, float eps, bool[3] output_mask, Tensor reservedSpace) -> (Tensor, Tensor, Tensor)
quantized::group_norm(Tensor input, int num_groups, Tensor? weight, Tensor? bias, float eps, float output_scale, int output_zero_point) -> Tensor
aten::_cast_Byte(Tensor self, bool non_blocking=False) -> Tensor
quantized::instance_norm(Tensor input, Tensor? weight, Tensor? bias, float eps, float output_scale, int output_zero_point) -> Tensor
aten::_cast_Char(Tensor self, bool non_blocking=False) -> Tensor
quantized::relu6(Tensor qx, bool inplace=False) -> Tensor
aten::_cast_Double(Tensor self, bool non_blocking=False) -> Tensor
quantized::leaky_relu(Tensor qx, Scalar negative_slope, bool inplace, float output_scale, int output_zero_point) -> Tensor
aten::_cast_Float(Tensor self, bool non_blocking=False) -> Tensor
quantized::prelu(Tensor qx, Tensor weight, float output_scale, int output_zero_point) -> Tensor
aten::_cast_Half(Tensor self, bool non_blocking=False) -> Tensor
quantized::sigmoid(Tensor qx, float output_scale, int output_zero_point) -> Tensor
aten::_cast_Int(Tensor self, bool non_blocking=False) -> Tensor
quantized::softmax(Tensor qx, int dim, float output_scale, int output_zero_point) -> Tensor
aten::_cast_Long(Tensor self, bool non_blocking=False) -> Tensor
quantized::threshold(Tensor qx, Scalar threshold, Scalar value) -> Tensor qy
aten::_cast_Short(Tensor self, bool non_blocking=False) -> Tensor
quantized::conv_unpack(__torch__.torch.classes.quantized.Conv2dPackedParamsBase packed_weights) -> (Tensor unpacked_weights, Tensor? B_origin)
aten::_cdist_backward(Tensor grad, Tensor x1, Tensor x2, float p, Tensor cdist) -> Tensor
aten::_cdist_backward.out(Tensor grad, Tensor x1, Tensor x2, float p, Tensor cdist, *, Tensor(a!) out) -> Tensor(a!)
quantized::conv1d_unpack(__torch__.torch.classes.quantized.Conv2dPackedParamsBase packed_weights) -> (Tensor unpacked_weights, Tensor? B_origin)
aten::_cdist_forward(Tensor x1, Tensor x2, float p, int? compute_mode) -> Tensor
aten::_cdist_forward.out(Tensor x1, Tensor x2, float p, int? compute_mode, *, Tensor(a!) out) -> Tensor(a!)
quantized::conv2d_unpack(__torch__.torch.classes.quantized.Conv2dPackedParamsBase packed_weights) -> (Tensor unpacked_weights, Tensor? B_origin)
aten::_cholesky_solve_helper(Tensor self, Tensor A, bool upper) -> Tensor
aten::_cholesky_solve_helper.out(Tensor self, Tensor A, bool upper, *, Tensor(a!) out) -> Tensor(a!)
quantized::conv2d_unpack_sizes(Any packed_weights) -> Any
aten::_choose_qparams_per_tensor(Tensor self, bool reduce_range=False) -> (float, int)
quantized::conv3d_unpack(__torch__.torch.classes.quantized.Conv3dPackedParamsBase packed_weights) -> (Tensor unpacked_weights, Tensor? B_origin)
aten::_chunk_grad_outputs_efficient_attention(Tensor query, Tensor key, Tensor value, bool is_causal=False) -> bool
quantized::conv2d_stride(__torch__.torch.classes.quantized.Conv2dPackedParamsBase packed_weights) -> int[]
aten::_copy_from.out(Tensor self, Tensor dst, bool non_blocking=False, *, Tensor(a!) out) -> Tensor(a!)
aten::_copy_from(Tensor self, Tensor dst, bool non_blocking=False) -> Tensor
quantized::conv_transpose2d_stride(__torch__.torch.classes.quantized.Conv2dPackedParamsBase packed_weights) -> int[]
aten::_cudnn_init_dropout_state(float dropout, bool train, int dropout_seed, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=False) -> Tensor
aten::_cudnn_init_dropout_state.out(float dropout, bool train, int dropout_seed, *, Tensor(a!) out) -> Tensor(a!)
quantized::conv_transpose2d_transpose(__torch__.torch.classes.quantized.Conv2dPackedParamsBase packed_weights) -> int
aten::_cudnn_rnn.out(Tensor input, Tensor[] weight, int weight_stride0, Tensor? weight_buf, Tensor hx, Tensor? cx, int mode, SymInt hidden_size, SymInt proj_size, int num_layers, bool batch_first, float dropout, bool train, bool bidirectional, SymInt[] batch_sizes, Tensor? dropout_state, *, Tensor(a!) out0, Tensor(b!) out1, Tensor(c!) out2, Tensor(d!) out3, Tensor(e!) out4) -> (Tensor(a!), Tensor(b!), Tensor(c!), Tensor(d!), Tensor(e!))
aten::_cudnn_rnn(Tensor input, Tensor[] weight, int weight_stride0, Tensor? weight_buf, Tensor hx, Tensor? cx, int mode, SymInt hidden_size, SymInt proj_size, int num_layers, bool batch_first, float dropout, bool train, bool bidirectional, SymInt[] batch_sizes, Tensor? dropout_state) -> (Tensor, Tensor, Tensor, Tensor, Tensor)
quantized::conv_transpose3d_unpack(__torch__.torch.classes.quantized.Conv3dPackedParamsBase packed_weights) -> (Tensor unpacked_weights, Tensor? B_origin)
aten::_embedding_bag_backward(Tensor grad, Tensor indices, Tensor offsets, Tensor offset2bag, Tensor bag_size, Tensor maximum_indices, SymInt num_weights, bool scale_grad_by_freq, int mode, bool sparse, Tensor? per_sample_weights, int padding_idx=-1) -> Tensor
mkl::_mkl_linear(Tensor X, Tensor MKL_W, Tensor ORI_W, Tensor? B, int batch_size) -> Tensor
aten::_embedding_bag_dense_backward(Tensor grad, Tensor indices, Tensor offset2bag, Tensor bag_size, Tensor maximum_indices, SymInt num_weights, bool scale_grad_by_freq, int mode, Tensor? per_sample_weights, int padding_idx=-1) -> Tensor
aten::_embedding_bag_dense_backward.out(Tensor grad, Tensor indices, Tensor offset2bag, Tensor bag_size, Tensor maximum_indices, SymInt num_weights, bool scale_grad_by_freq, int mode, Tensor? per_sample_weights, int padding_idx=-1, *, Tensor(a!) out) -> Tensor(a!)
mkldnn::_reorder_convolution_transpose_weight(Tensor self, int[2] padding=0, int[2] output_padding=0, int[2] stride=1, int[2] dilation=1, int groups=1, int[]? input_size=None) -> Tensor Y
aten::_embedding_bag_forward_only(Tensor weight, Tensor indices, Tensor offsets, bool scale_grad_by_freq=False, int mode=0, bool sparse=False, Tensor? per_sample_weights=None, bool include_last_offset=False, int padding_idx=-1) -> (Tensor, Tensor, Tensor, Tensor)
aten::_embedding_bag_forward_only.out(Tensor weight, Tensor indices, Tensor offsets, bool scale_grad_by_freq=False, int mode=0, bool sparse=False, Tensor? per_sample_weights=None, bool include_last_offset=False, int padding_idx=-1, *, Tensor(a!) out0, Tensor(b!) out1, Tensor(c!) out2, Tensor(d!) out3) -> (Tensor(a!), Tensor(b!), Tensor(c!), Tensor(d!))
mkl::_mkl_reorder_linear_weight(Tensor X, int batch_size) -> Tensor
aten::_fake_quantize_learnable_per_tensor_affine_backward(Tensor grad, Tensor self, Tensor scale, Tensor zero_point, int quant_min, int quant_max, float grad_factor=1.) -> (Tensor, Tensor, Tensor)
prepacked::conv2d_clamp_prepack(Tensor W, Tensor? B, int[2] stride, int[2] padding, int[2] dilation, int groups, Scalar? output_min=None, Scalar? output_max=None) -> __torch__.torch.classes.xnnpack.Conv2dOpContext
aten::_fft_c2c(Tensor self, SymInt[] dim, int normalization, bool forward) -> Tensor
aten::_fft_c2c.out(Tensor self, SymInt[] dim, int normalization, bool forward, *, Tensor(a!) out) -> Tensor(a!)
prepacked::conv2d_clamp_run(Tensor X, __torch__.torch.classes.xnnpack.Conv2dOpContext W_prepack) -> Tensor Y
aten::arange(Scalar end, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
aten::arange.start(Scalar start, Scalar end, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
aten::arange.start_step(Scalar start, Scalar end, Scalar step=1, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
aten::arange.start_out(Scalar start, Scalar end, Scalar step=1, *, Tensor(a!) out) -> Tensor(a!)
aten::arange.out(Scalar end, *, Tensor(a!) out) -> Tensor(a!)
aten::bartlett_window(int window_length, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
aten::bartlett_window.periodic(int window_length, bool periodic, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
aten::bartlett_window.out(int window_length, *, Tensor(a!) out) -> Tensor(a!)
aten::bartlett_window.periodic_out(int window_length, bool periodic, *, Tensor(a!) out) -> Tensor(a!)
aten::blackman_window(int window_length, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
aten::blackman_window.periodic(int window_length, bool periodic, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
aten::blackman_window.out(int window_length, *, Tensor(a!) out) -> Tensor(a!)
aten::blackman_window.periodic_out(int window_length, bool periodic, *, Tensor(a!) out) -> Tensor(a!)
aten::empty_quantized(int[] size, Tensor qtensor, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None, MemoryFormat? memory_format=None) -> Tensor
aten::empty_quantized.out(int[] size, Tensor qtensor, *, MemoryFormat? memory_format=None, Tensor(a!) out) -> Tensor(a!)
aten::eye(int n, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
aten::eye.m(int n, int m, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
aten::eye.out(int n, *, Tensor(a!) out) -> Tensor(a!)
aten::eye.m_out(int n, int m, *, Tensor(a!) out) -> Tensor(a!)
aten::full.names(int[] size, Scalar fill_value, *, str[]? names, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
aten::full(SymInt[] size, Scalar fill_value, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
aten::full.names_out(int[] size, Scalar fill_value, *, str[]? names, Tensor(a!) out) -> Tensor(a!)
aten::full.out(SymInt[] size, Scalar fill_value, *, Tensor(a!) out) -> Tensor(a!)
aten::from_file(str filename, bool? shared=None, int? size=0, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
aten::from_file.out(str filename, bool? shared=None, int? size=0, *, Tensor(a!) out) -> Tensor(a!)
aten::hann_window(int window_length, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
aten::hann_window.periodic(int window_length, bool periodic, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
aten::hann_window.out(int window_length, *, Tensor(a!) out) -> Tensor(a!)
aten::hann_window.periodic_out(int window_length, bool periodic, *, Tensor(a!) out) -> Tensor(a!)
aten::hamming_window(int window_length, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
aten::hamming_window.periodic(int window_length, bool periodic, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
aten::hamming_window.periodic_alpha(int window_length, bool periodic, float alpha, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
aten::hamming_window.periodic_alpha_beta(int window_length, bool periodic, float alpha, float beta, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
aten::hamming_window.out(int window_length, *, Tensor(a!) out) -> Tensor(a!)
aten::hamming_window.periodic_out(int window_length, bool periodic, *, Tensor(a!) out) -> Tensor(a!)
aten::hamming_window.periodic_alpha_out(int window_length, bool periodic, float alpha, *, Tensor(a!) out) -> Tensor(a!)
aten::hamming_window.periodic_alpha_beta_out(int window_length, bool periodic, float alpha, float beta, *, Tensor(a!) out) -> Tensor(a!)
aten::kaiser_window(int window_length, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
aten::kaiser_window.periodic(int window_length, bool periodic, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
aten::kaiser_window.beta(int window_length, bool periodic, float beta, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
aten::kaiser_window.out(int window_length, *, Tensor(a!) out) -> Tensor(a!)
aten::kaiser_window.periodic_out(int window_length, bool periodic, *, Tensor(a!) out) -> Tensor(a!)
aten::kaiser_window.beta_out(int window_length, bool periodic, float beta, *, Tensor(a!) out) -> Tensor(a!)
aten::logspace(Scalar start, Scalar end, int steps, float base=10., *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
aten::logspace.out(Scalar start, Scalar end, int steps, float base=10., *, Tensor(a!) out) -> Tensor(a!)
aten::ones.names(int[] size, *, str[]? names, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
aten::ones(SymInt[] size, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
aten::ones.names_out(int[] size, *, str[]? names, Tensor(a!) out) -> Tensor(a!)
aten::ones.out(SymInt[] size, *, Tensor(a!) out) -> Tensor(a!)
aten::zeros.names(int[] size, *, str[]? names, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
aten::zeros(SymInt[] size, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
aten::zeros.names_out(int[] size, *, str[]? names, Tensor(a!) out) -> Tensor(a!)
aten::zeros.out(SymInt[] size, *, Tensor(a!) out) -> Tensor(a!)
aten::_sparse_compressed_tensor_unsafe(Tensor compressed_indices, Tensor plain_indices, Tensor values, int[] size, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
aten::_sparse_csc_tensor_unsafe(Tensor ccol_indices, Tensor row_indices, Tensor values, int[] size, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
aten::_sparse_bsr_tensor_unsafe(Tensor crow_indices, Tensor col_indices, Tensor values, int[] size, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
-------------------------------
total c10 operators size:4040

operator namespace:_quantized count:18
operator namespace:_test count:3
operator namespace:aten count:2986
operator namespace:c10d count:18
operator namespace:mkl count:2
operator namespace:mkldnn count:7
operator namespace:mkldnn_prepacked count:2
operator namespace:prepacked count:8
operator namespace:profiler count:4
operator namespace:quantization count:2
operator namespace:quantized count:169
operator namespace:sparse count:6
operator namespace:static_runtime count:21

-------------------
operator schema:
_quantized::add(Tensor qa, Tensor qb, float scale, int zero_point) -> Tensor qc
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:234
-------------------
operator schema:
_quantized::conv2d(Tensor qx, __torch__.torch.classes.quantized.Conv2dPackedParamsBase packed_weight, float output_scale, int output_zero_point) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:234
-------------------
operator schema:
_quantized::conv2d_prepack(Tensor weight, Tensor? bias, int[] stride, int[] padding, int[] dilation, int groups) -> __torch__.torch.classes.quantized.Conv2dPackedParamsBase
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:234
-------------------
operator schema:
_quantized::conv2d_relu(Tensor qx, __torch__.torch.classes.quantized.Conv2dPackedParamsBase packed_weight, float output_scale, int output_zero_point) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:234
-------------------
operator schema:
_quantized::conv3d(Tensor qx, __torch__.torch.classes.quantized.Conv3dPackedParamsBase packed_weight, float output_scale, int output_zero_point) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:234
-------------------
operator schema:
_quantized::conv3d_prepack(Tensor weight, Tensor? bias, int[] stride, int[] padding, int[] dilation, int groups) -> __torch__.torch.classes.quantized.Conv3dPackedParamsBase
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:234
-------------------
operator schema:
_quantized::conv3d_relu(Tensor qx, __torch__.torch.classes.quantized.Conv3dPackedParamsBase packed_weight, float output_scale, int output_zero_point) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:234
-------------------
operator schema:
_quantized::conv_transpose1d(Tensor qx, __torch__.torch.classes.quantized.Conv2dPackedParamsBase packed_weight, float output_scale, int output_zero_point) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:234
-------------------
operator schema:
_quantized::conv_transpose1d_prepack(Tensor weight, Tensor? bias, int[] stride, int[] padding, int[] output_padding, int[] dilation, int groups) -> __torch__.torch.classes.quantized.Conv2dPackedParamsBase
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:234
-------------------
operator schema:
_quantized::conv_transpose2d(Tensor qx, __torch__.torch.classes.quantized.Conv2dPackedParamsBase packed_weight, float output_scale, int output_zero_point) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:234
-------------------
operator schema:
_quantized::conv_transpose2d_prepack(Tensor weight, Tensor? bias, int[] stride, int[] padding, int[] output_padding, int[] dilation, int groups) -> __torch__.torch.classes.quantized.Conv2dPackedParamsBase
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:234
-------------------
operator schema:
_quantized::conv_transpose3d_prepack(Tensor weight, Tensor? bias, int[] stride, int[] padding, int[] output_padding, int[] dilation, int groups) -> __torch__.torch.classes.quantized.Conv3dPackedParamsBase
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:234
-------------------
operator schema:
_quantized::linear(Tensor X, __torch__.torch.classes.quantized.LinearPackedParamsBase W_prepack, float Y_scale_i, int Y_zero_point_i) -> Tensor Y
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:234
-------------------
operator schema:
_quantized::linear_dynamic(Tensor X, __torch__.torch.classes.quantized.LinearPackedParamsBase W_prepack, bool reduce_range=False) -> Tensor Y
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:234
-------------------
operator schema:
_quantized::linear_prepack(Tensor W, Tensor? B=None) -> __torch__.torch.classes.quantized.LinearPackedParamsBase W_prepack
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:234
-------------------
operator schema:
_quantized::linear_prepack_fp16(Tensor W, Tensor? B=None) -> __torch__.torch.classes.quantized.LinearPackedParamsBase W_prepack
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:234
-------------------
operator schema:
_quantized::linear_prepack_fp16_legacy(Tensor W, Tensor? B=None) -> Tensor W_prepack
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:234
-------------------
operator schema:
_quantized::linear_prepack_legacy(Tensor W, Tensor? B=None) -> Tensor W_prepack
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:234
-------------------
operator schema:
_test::cat(Tensor[] inputs) -> Tensor
operator debug info:
registered by RegisterOperators
-------------------
operator schema:
_test::get_first(str[][] _0) -> str _0
operator debug info:
registered by RegisterOperators
-------------------
operator schema:
_test::leaky_relu(Tensor self, float v=0.01) -> Tensor
operator debug info:
registered by RegisterOperators
-------------------
operator schema:
aten::__and__.Scalar(Tensor self, Scalar other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::__and__.Tensor(Tensor self, Tensor other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::__iand__.Scalar(Tensor(a!) self, Scalar other) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::__iand__.Tensor(Tensor(a!) self, Tensor other) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::__ilshift__.Scalar(Tensor(a!) self, Scalar other) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::__ilshift__.Tensor(Tensor(a!) self, Tensor other) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::__ior__.Scalar(Tensor(a!) self, Scalar other) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::__ior__.Tensor(Tensor(a!) self, Tensor other) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::__irshift__.Scalar(Tensor(a!) self, Scalar other) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::__irshift__.Tensor(Tensor(a!) self, Tensor other) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::__ixor__.Scalar(Tensor(a!) self, Scalar other) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::__ixor__.Tensor(Tensor(a!) self, Tensor other) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::__lshift__.Scalar(Tensor self, Scalar other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::__lshift__.Scalar_out(Tensor self, Scalar other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::__lshift__.Tensor(Tensor self, Tensor other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::__lshift__.Tensor_out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::__or__.Scalar(Tensor self, Scalar other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::__or__.Tensor(Tensor self, Tensor other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::__rshift__.Scalar(Tensor self, Scalar other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::__rshift__.Scalar_out(Tensor self, Scalar other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::__rshift__.Tensor(Tensor self, Tensor other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::__rshift__.Tensor_out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::__xor__.Scalar(Tensor self, Scalar other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::__xor__.Tensor(Tensor self, Tensor other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_adaptive_avg_pool2d(Tensor self, SymInt[2] output_size) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_adaptive_avg_pool2d.out(Tensor self, SymInt[2] output_size, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_adaptive_avg_pool2d_backward(Tensor grad_output, Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_adaptive_avg_pool2d_backward.out(Tensor grad_output, Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_adaptive_avg_pool3d(Tensor self, SymInt[3] output_size) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_adaptive_avg_pool3d.out(Tensor self, SymInt[3] output_size, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_adaptive_avg_pool3d_backward(Tensor grad_output, Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_adaptive_avg_pool3d_backward.out(Tensor grad_output, Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_add_batch_dim(Tensor self, int batch_dim, int level) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_add_relu.Scalar(Tensor self, Scalar other, Scalar alpha=1) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_add_relu.Scalar_out(Tensor self, Scalar other, Scalar alpha=1, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_add_relu.Tensor(Tensor self, Tensor other, *, Scalar alpha=1) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_add_relu.out(Tensor self, Tensor other, *, Scalar alpha=1, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_add_relu_.Scalar(Tensor(a!) self, Scalar other, Scalar alpha=1) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_add_relu_.Tensor(Tensor(a!) self, Tensor other, *, Scalar alpha=1) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_addmm_activation(Tensor self, Tensor mat1, Tensor mat2, *, Scalar beta=1, Scalar alpha=1, bool use_gelu=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_addmm_activation.out(Tensor self, Tensor mat1, Tensor mat2, *, Scalar beta=1, Scalar alpha=1, bool use_gelu=False, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_aminmax(Tensor self) -> (Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_aminmax.dim(Tensor self, int dim, bool keepdim=False) -> (Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_aminmax.dim_out(Tensor self, int dim, bool keepdim=False, *, Tensor(a!) out0, Tensor(b!) out1) -> (Tensor(a!), Tensor(b!))
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_aminmax.out(Tensor self, *, Tensor(a!) out0, Tensor(b!) out1) -> (Tensor(a!), Tensor(b!))
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_amp_foreach_non_finite_check_and_unscale(Tensor[] self, Tensor found_inf, Tensor inv_scale) -> (Tensor[] self_out, Tensor found_inf_out)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_amp_foreach_non_finite_check_and_unscale.out(Tensor[] self, Tensor(b!) found_inf, Tensor inv_scale, *, Tensor(a!)[] out) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_amp_foreach_non_finite_check_and_unscale_(Tensor(a!)[] self, Tensor(b!) found_inf, Tensor inv_scale) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_amp_update_scale(Tensor self, Tensor growth_tracker, Tensor found_inf, float scale_growth_factor, float scale_backoff_factor, int growth_interval) -> (Tensor, Tensor growth_tracker_out)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_amp_update_scale.out(Tensor self, Tensor(b!) growth_tracker, Tensor found_inf, float scale_growth_factor, float scale_backoff_factor, int growth_interval, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_amp_update_scale_(Tensor(a!) self, Tensor(b!) growth_tracker, Tensor found_inf, float scale_growth_factor, float scale_backoff_factor, int growth_interval) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_assert_async(Tensor self) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_assert_tensor_metadata(Tensor a, int[]? size=None, int[]? stride=None, ScalarType? dtype=None) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_autocast_to_full_precision(Tensor(a) self, bool cuda_enabled, bool cpu_enabled) -> Tensor(a)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_autocast_to_reduced_precision(Tensor(a) self, bool cuda_enabled, bool cpu_enabled, ScalarType cuda_dtype, ScalarType cpu_dtype) -> Tensor(a)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_backward(Tensor self, Tensor[] inputs, Tensor? gradient=None, bool? retain_graph=None, bool create_graph=False) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_batch_norm_impl_index(Tensor input, Tensor? weight, Tensor? bias, Tensor? running_mean, Tensor? running_var, bool training, float momentum, float eps, bool cudnn_enabled) -> (Tensor, Tensor, Tensor, Tensor, int)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_batch_norm_impl_index_backward(int impl_index, Tensor input, Tensor grad_output, Tensor? weight, Tensor? running_mean, Tensor? running_var, Tensor? save_mean, Tensor? save_var_transform, bool train, float eps, bool[3] output_mask, Tensor reservedSpace) -> (Tensor, Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_cast_Byte(Tensor self, bool non_blocking=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_cast_Char(Tensor self, bool non_blocking=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_cast_Double(Tensor self, bool non_blocking=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_cast_Float(Tensor self, bool non_blocking=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_cast_Half(Tensor self, bool non_blocking=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_cast_Int(Tensor self, bool non_blocking=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_cast_Long(Tensor self, bool non_blocking=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_cast_Short(Tensor self, bool non_blocking=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_cdist_backward(Tensor grad, Tensor x1, Tensor x2, float p, Tensor cdist) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_cdist_backward.out(Tensor grad, Tensor x1, Tensor x2, float p, Tensor cdist, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_cdist_forward(Tensor x1, Tensor x2, float p, int? compute_mode) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_cdist_forward.out(Tensor x1, Tensor x2, float p, int? compute_mode, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_cholesky_solve_helper(Tensor self, Tensor A, bool upper) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_cholesky_solve_helper.out(Tensor self, Tensor A, bool upper, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_choose_qparams_per_tensor(Tensor self, bool reduce_range=False) -> (float, int)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_chunk_grad_outputs_efficient_attention(Tensor query, Tensor key, Tensor value, bool is_causal=False) -> bool
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_coalesce(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_coalesce.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_coalesced(Tensor self, bool coalesced) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_coalesced.out(Tensor self, bool coalesced, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_coalesced_(Tensor(a!) self, bool coalesced) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_compute_linear_combination(Tensor input, Tensor coefficients) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_compute_linear_combination.out(Tensor input, Tensor coefficients, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_conj(Tensor(a) self) -> Tensor(a)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_conj_copy(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_conj_copy.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_conj_physical(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_conj_physical.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_conv_depthwise2d(Tensor self, Tensor weight, int[2] kernel_size, Tensor? bias, int[2] stride, SymInt[2] padding, int[2] dilation) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_conv_depthwise2d.out(Tensor self, Tensor weight, int[2] kernel_size, Tensor? bias, int[2] stride, SymInt[2] padding, int[2] dilation, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_convert_indices_from_coo_to_csr(Tensor self, int size, *, bool out_int32=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_convert_indices_from_coo_to_csr.out(Tensor self, int size, *, bool out_int32=False, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_convert_indices_from_csr_to_coo(Tensor crow_indices, Tensor col_indices, *, bool out_int32=False, bool transpose=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_convert_indices_from_csr_to_coo.out(Tensor crow_indices, Tensor col_indices, *, bool out_int32=False, bool transpose=False, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_convolution(Tensor input, Tensor weight, Tensor? bias, int[] stride, SymInt[] padding, int[] dilation, bool transposed, SymInt[] output_padding, int groups, bool benchmark, bool deterministic, bool cudnn_enabled, bool allow_tf32) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_convolution.deprecated(Tensor input, Tensor weight, Tensor? bias, int[] stride, int[] padding, int[] dilation, bool transposed, int[] output_padding, int groups, bool benchmark, bool deterministic, bool cudnn_enabled) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_convolution.out(Tensor input, Tensor weight, Tensor? bias, int[] stride, SymInt[] padding, int[] dilation, bool transposed, SymInt[] output_padding, int groups, bool benchmark, bool deterministic, bool cudnn_enabled, bool allow_tf32, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_convolution_double_backward(Tensor? ggI, Tensor? ggW, Tensor? ggb, Tensor gO, Tensor weight, Tensor self, int[] stride, SymInt[] padding, int[] dilation, bool transposed, SymInt[] output_padding, int groups, bool[3] output_mask) -> (Tensor, Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_convolution_mode(Tensor input, Tensor weight, Tensor? bias, int[] stride, str padding, int[] dilation, int groups) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_copy_from(Tensor self, Tensor dst, bool non_blocking=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_copy_from.out(Tensor self, Tensor dst, bool non_blocking=False, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_copy_from_and_resize(Tensor self, Tensor dst) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_copy_from_and_resize.out(Tensor self, Tensor dst, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_ctc_loss(Tensor log_probs, Tensor targets, int[] input_lengths, int[] target_lengths, int blank=0, bool zero_infinity=False) -> (Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_ctc_loss.Tensor(Tensor log_probs, Tensor targets, Tensor input_lengths, Tensor target_lengths, int blank=0, bool zero_infinity=False) -> (Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_ctc_loss.Tensor_out(Tensor log_probs, Tensor targets, Tensor input_lengths, Tensor target_lengths, int blank=0, bool zero_infinity=False, *, Tensor(a!) out0, Tensor(b!) out1) -> (Tensor(a!), Tensor(b!))
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_ctc_loss.out(Tensor log_probs, Tensor targets, int[] input_lengths, int[] target_lengths, int blank=0, bool zero_infinity=False, *, Tensor(a!) out0, Tensor(b!) out1) -> (Tensor(a!), Tensor(b!))
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_ctc_loss_backward(Tensor grad, Tensor log_probs, Tensor targets, int[] input_lengths, int[] target_lengths, Tensor neg_log_likelihood, Tensor log_alpha, int blank, bool zero_infinity=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_ctc_loss_backward.Tensor(Tensor grad, Tensor log_probs, Tensor targets, Tensor input_lengths, Tensor target_lengths, Tensor neg_log_likelihood, Tensor log_alpha, int blank, bool zero_infinity=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_ctc_loss_backward.out(Tensor grad, Tensor log_probs, Tensor targets, int[] input_lengths, int[] target_lengths, Tensor neg_log_likelihood, Tensor log_alpha, int blank, bool zero_infinity=False, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_cudnn_ctc_loss(Tensor log_probs, Tensor targets, int[] input_lengths, int[] target_lengths, int blank, bool deterministic, bool zero_infinity) -> (Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_cudnn_ctc_loss.Tensor(Tensor log_probs, Tensor targets, Tensor input_lengths, Tensor target_lengths, int blank, bool deterministic, bool zero_infinity) -> (Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_cudnn_ctc_loss.out(Tensor log_probs, Tensor targets, int[] input_lengths, int[] target_lengths, int blank, bool deterministic, bool zero_infinity, *, Tensor(a!) out0, Tensor(b!) out1) -> (Tensor(a!), Tensor(b!))
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_cudnn_init_dropout_state(float dropout, bool train, int dropout_seed, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_cudnn_init_dropout_state.out(float dropout, bool train, int dropout_seed, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_cudnn_rnn(Tensor input, Tensor[] weight, int weight_stride0, Tensor? weight_buf, Tensor hx, Tensor? cx, int mode, SymInt hidden_size, SymInt proj_size, int num_layers, bool batch_first, float dropout, bool train, bool bidirectional, SymInt[] batch_sizes, Tensor? dropout_state) -> (Tensor, Tensor, Tensor, Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_cudnn_rnn.out(Tensor input, Tensor[] weight, int weight_stride0, Tensor? weight_buf, Tensor hx, Tensor? cx, int mode, SymInt hidden_size, SymInt proj_size, int num_layers, bool batch_first, float dropout, bool train, bool bidirectional, SymInt[] batch_sizes, Tensor? dropout_state, *, Tensor(a!) out0, Tensor(b!) out1, Tensor(c!) out2, Tensor(d!) out3, Tensor(e!) out4) -> (Tensor(a!), Tensor(b!), Tensor(c!), Tensor(d!), Tensor(e!))
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_cudnn_rnn_backward(Tensor input, Tensor[] weight, int weight_stride0, Tensor weight_buf, Tensor hx, Tensor? cx, Tensor output, Tensor? grad_output, Tensor? grad_hy, Tensor? grad_cy, int mode, SymInt hidden_size, SymInt proj_size, int num_layers, bool batch_first, float dropout, bool train, bool bidirectional, SymInt[] batch_sizes, Tensor? dropout_state, Tensor reserve, bool[4] output_mask) -> (Tensor, Tensor, Tensor, Tensor[])
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_cudnn_rnn_backward.out(Tensor input, Tensor[] weight, int weight_stride0, Tensor weight_buf, Tensor hx, Tensor? cx, Tensor output, Tensor? grad_output, Tensor? grad_hy, Tensor? grad_cy, int mode, SymInt hidden_size, SymInt proj_size, int num_layers, bool batch_first, float dropout, bool train, bool bidirectional, SymInt[] batch_sizes, Tensor? dropout_state, Tensor reserve, bool[4] output_mask, *, Tensor(a!) out0, Tensor(b!) out1, Tensor(c!) out2, Tensor(d!)[] out3) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_cudnn_rnn_flatten_weight(Tensor[] weight_arr, int weight_stride0, SymInt input_size, int mode, SymInt hidden_size, SymInt proj_size, int num_layers, bool batch_first, bool bidirectional) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_cudnn_rnn_flatten_weight.out(Tensor[] weight_arr, int weight_stride0, SymInt input_size, int mode, SymInt hidden_size, SymInt proj_size, int num_layers, bool batch_first, bool bidirectional, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_cufft_clear_plan_cache(int device_index) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_cufft_get_plan_cache_max_size(int device_index) -> int
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_cufft_get_plan_cache_size(int device_index) -> int
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_cufft_set_plan_cache_max_size(int device_index, int max_size) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_cummax_helper(Tensor self, Tensor(a!) values, Tensor(b!) indices, int dim) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_cummin_helper(Tensor self, Tensor(a!) values, Tensor(b!) indices, int dim) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_debug_has_internal_overlap(Tensor self) -> int
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_dimI(Tensor self) -> int
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_dimV(Tensor self) -> int
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_dim_arange(Tensor like, int dim) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_dirichlet_grad(Tensor x, Tensor alpha, Tensor total) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_dirichlet_grad.out(Tensor x, Tensor alpha, Tensor total, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_efficient_attention_backward(Tensor grad_out_, Tensor query, Tensor key, Tensor value, Tensor out, Tensor logsumexp, bool is_causal=False, bool chunk_grad_outputs=False) -> (Tensor, Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_efficient_attention_forward(Tensor query, Tensor key, Tensor value, Tensor? cu_seqlens_q, Tensor? cu_seqlens_k, int? max_seqlen_q, bool compute_log_sumexp=False, bool causal=False) -> (Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_efficientzerotensor(int[] size, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_efficientzerotensor.out(int[] size, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_embedding_bag(Tensor weight, Tensor indices, Tensor offsets, bool scale_grad_by_freq=False, int mode=0, bool sparse=False, Tensor? per_sample_weights=None, bool include_last_offset=False, int padding_idx=-1) -> (Tensor, Tensor, Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_embedding_bag.out(Tensor weight, Tensor indices, Tensor offsets, bool scale_grad_by_freq=False, int mode=0, bool sparse=False, Tensor? per_sample_weights=None, bool include_last_offset=False, int padding_idx=-1, *, Tensor(a!) out0, Tensor(b!) out1, Tensor(c!) out2, Tensor(d!) out3) -> (Tensor(a!), Tensor(b!), Tensor(c!), Tensor(d!))
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_embedding_bag_backward(Tensor grad, Tensor indices, Tensor offsets, Tensor offset2bag, Tensor bag_size, Tensor maximum_indices, SymInt num_weights, bool scale_grad_by_freq, int mode, bool sparse, Tensor? per_sample_weights, int padding_idx=-1) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_embedding_bag_dense_backward(Tensor grad, Tensor indices, Tensor offset2bag, Tensor bag_size, Tensor maximum_indices, SymInt num_weights, bool scale_grad_by_freq, int mode, Tensor? per_sample_weights, int padding_idx=-1) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_embedding_bag_dense_backward.out(Tensor grad, Tensor indices, Tensor offset2bag, Tensor bag_size, Tensor maximum_indices, SymInt num_weights, bool scale_grad_by_freq, int mode, Tensor? per_sample_weights, int padding_idx=-1, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_embedding_bag_forward_only(Tensor weight, Tensor indices, Tensor offsets, bool scale_grad_by_freq=False, int mode=0, bool sparse=False, Tensor? per_sample_weights=None, bool include_last_offset=False, int padding_idx=-1) -> (Tensor, Tensor, Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_embedding_bag_forward_only.out(Tensor weight, Tensor indices, Tensor offsets, bool scale_grad_by_freq=False, int mode=0, bool sparse=False, Tensor? per_sample_weights=None, bool include_last_offset=False, int padding_idx=-1, *, Tensor(a!) out0, Tensor(b!) out1, Tensor(c!) out2, Tensor(d!) out3) -> (Tensor(a!), Tensor(b!), Tensor(c!), Tensor(d!))
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_embedding_bag_per_sample_weights_backward(Tensor grad, Tensor weight, Tensor indices, Tensor offsets, Tensor offset2bag, int mode, int padding_idx=-1) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_embedding_bag_per_sample_weights_backward.out(Tensor grad, Tensor weight, Tensor indices, Tensor offsets, Tensor offset2bag, int mode, int padding_idx=-1, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_embedding_bag_sparse_backward(Tensor grad, Tensor indices, Tensor offsets, Tensor offset2bag, Tensor bag_size, SymInt num_weights, bool scale_grad_by_freq, int mode, Tensor? per_sample_weights, int padding_idx=-1) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_empty_affine_quantized(int[] size, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None, float scale=1., int zero_point=0, MemoryFormat? memory_format=0) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_empty_affine_quantized.out(int[] size, *, float scale=1., int zero_point=0, MemoryFormat? memory_format=0, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_empty_per_channel_affine_quantized(int[] size, *, Tensor scales, Tensor zero_points, int axis, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None, MemoryFormat? memory_format=0) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_empty_per_channel_affine_quantized.out(int[] size, *, Tensor scales, Tensor zero_points, int axis, MemoryFormat? memory_format=0, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_euclidean_dist(Tensor x1, Tensor x2) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_euclidean_dist.out(Tensor x1, Tensor x2, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_fake_quantize_learnable_per_channel_affine(Tensor self, Tensor scale, Tensor zero_point, int axis, int quant_min, int quant_max, float grad_factor=1.) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_fake_quantize_learnable_per_channel_affine.out(Tensor self, Tensor scale, Tensor zero_point, int axis, int quant_min, int quant_max, float grad_factor=1., *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_fake_quantize_learnable_per_channel_affine_backward(Tensor grad, Tensor self, Tensor scale, Tensor zero_point, int axis, int quant_min, int quant_max, float grad_factor=1.) -> (Tensor, Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_fake_quantize_learnable_per_tensor_affine(Tensor self, Tensor scale, Tensor zero_point, int quant_min, int quant_max, float grad_factor=1.) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_fake_quantize_learnable_per_tensor_affine.out(Tensor self, Tensor scale, Tensor zero_point, int quant_min, int quant_max, float grad_factor=1., *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_fake_quantize_learnable_per_tensor_affine_backward(Tensor grad, Tensor self, Tensor scale, Tensor zero_point, int quant_min, int quant_max, float grad_factor=1.) -> (Tensor, Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_fake_quantize_per_tensor_affine_cachemask_tensor_qparams(Tensor self, Tensor scale, Tensor zero_point, Tensor fake_quant_enabled, int quant_min, int quant_max) -> (Tensor output, Tensor mask)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_fake_quantize_per_tensor_affine_cachemask_tensor_qparams.out(Tensor self, Tensor scale, Tensor zero_point, Tensor fake_quant_enabled, int quant_min, int quant_max, *, Tensor(a!) out0, Tensor(b!) out1) -> (Tensor(a!), Tensor(b!))
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_fft_c2c(Tensor self, SymInt[] dim, int normalization, bool forward) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_fft_c2c.out(Tensor self, SymInt[] dim, int normalization, bool forward, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_fft_c2r(Tensor self, int[] dim, int normalization, int last_dim_size) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_fft_c2r.out(Tensor self, int[] dim, int normalization, int last_dim_size, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_fft_r2c(Tensor self, int[] dim, int normalization, bool onesided) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_fft_r2c.out(Tensor self, int[] dim, int normalization, bool onesided, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_flash_attention_backward(Tensor grad_out, Tensor query, Tensor key, Tensor value, Tensor out, Tensor logsumexp, Tensor cum_seq_q, Tensor cum_seq_k, int max_q, int max_k, float dropout_p, bool is_causal, int philox_seed, int philox_offset) -> (Tensor, Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_flash_attention_forward(Tensor query, Tensor key, Tensor value, Tensor cum_seq_q, Tensor cum_seq_k, int max_q, int max_k, float dropout_p, bool is_causal, bool return_debug_mask) -> (Tensor output, Tensor softmax_logsumexp, int philox_seed, int philox_offset, Tensor debug_attn_mask)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foobar(Tensor self, bool arg1=True, bool arg2=True, *, bool arg3=True) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foobar.out(Tensor self, bool arg1=True, bool arg2=True, *, bool arg3=True, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_abs(Tensor[] self) -> Tensor[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_abs.out(Tensor[] self, *, Tensor(a!)[] out) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_abs_(Tensor(a!)[] self) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_acos(Tensor[] self) -> Tensor[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_acos.out(Tensor[] self, *, Tensor(a!)[] out) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_acos_(Tensor(a!)[] self) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_add.List(Tensor[] self, Tensor[] other, *, Scalar alpha=1) -> Tensor[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_add.List_out(Tensor[] self, Tensor[] other, *, Scalar alpha=1, Tensor(a!)[] out) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_add.Scalar(Tensor[] self, Scalar scalar) -> Tensor[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_add.ScalarList(Tensor[] self, Scalar[] scalars) -> Tensor[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_add.ScalarList_out(Tensor[] self, Scalar[] scalars, *, Tensor(a!)[] out) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_add.Scalar_out(Tensor[] self, Scalar scalar, *, Tensor(a!)[] out) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_add_.List(Tensor(a!)[] self, Tensor[] other, *, Scalar alpha=1) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_add_.Scalar(Tensor(a!)[] self, Scalar scalar) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_add_.ScalarList(Tensor(a!)[] self, Scalar[] scalars) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_addcdiv.Scalar(Tensor[] self, Tensor[] tensor1, Tensor[] tensor2, Scalar value=1) -> Tensor[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_addcdiv.ScalarList(Tensor[] self, Tensor[] tensor1, Tensor[] tensor2, Scalar[] scalars) -> Tensor[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_addcdiv.ScalarList_out(Tensor[] self, Tensor[] tensor1, Tensor[] tensor2, Scalar[] scalars, *, Tensor(a!)[] out) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_addcdiv.Scalar_out(Tensor[] self, Tensor[] tensor1, Tensor[] tensor2, Scalar value=1, *, Tensor(a!)[] out) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_addcdiv.Tensor(Tensor[] self, Tensor[] tensor1, Tensor[] tensor2, Tensor scalars) -> Tensor[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_addcdiv.Tensor_out(Tensor[] self, Tensor[] tensor1, Tensor[] tensor2, Tensor scalars, *, Tensor(a!)[] out) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_addcdiv_.Scalar(Tensor(a!)[] self, Tensor[] tensor1, Tensor[] tensor2, Scalar value=1) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_addcdiv_.ScalarList(Tensor(a!)[] self, Tensor[] tensor1, Tensor[] tensor2, Scalar[] scalars) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_addcdiv_.Tensor(Tensor(a!)[] self, Tensor[] tensor1, Tensor[] tensor2, Tensor scalars) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_addcmul.Scalar(Tensor[] self, Tensor[] tensor1, Tensor[] tensor2, Scalar value=1) -> Tensor[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_addcmul.ScalarList(Tensor[] self, Tensor[] tensor1, Tensor[] tensor2, Scalar[] scalars) -> Tensor[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_addcmul.ScalarList_out(Tensor[] self, Tensor[] tensor1, Tensor[] tensor2, Scalar[] scalars, *, Tensor(a!)[] out) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_addcmul.Scalar_out(Tensor[] self, Tensor[] tensor1, Tensor[] tensor2, Scalar value=1, *, Tensor(a!)[] out) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_addcmul.Tensor(Tensor[] self, Tensor[] tensor1, Tensor[] tensor2, Tensor scalars) -> Tensor[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_addcmul.Tensor_out(Tensor[] self, Tensor[] tensor1, Tensor[] tensor2, Tensor scalars, *, Tensor(a!)[] out) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_addcmul_.Scalar(Tensor(a!)[] self, Tensor[] tensor1, Tensor[] tensor2, Scalar value=1) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_addcmul_.ScalarList(Tensor(a!)[] self, Tensor[] tensor1, Tensor[] tensor2, Scalar[] scalars) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_addcmul_.Tensor(Tensor(a!)[] self, Tensor[] tensor1, Tensor[] tensor2, Tensor scalars) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_asin(Tensor[] self) -> Tensor[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_asin.out(Tensor[] self, *, Tensor(a!)[] out) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_asin_(Tensor(a!)[] self) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_atan(Tensor[] self) -> Tensor[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_atan.out(Tensor[] self, *, Tensor(a!)[] out) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_atan_(Tensor(a!)[] self) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_ceil(Tensor[] self) -> Tensor[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_ceil.out(Tensor[] self, *, Tensor(a!)[] out) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_ceil_(Tensor(a!)[] self) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_clamp_max.List(Tensor[] self, Tensor[] other) -> Tensor[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_clamp_max.List_out(Tensor[] self, Tensor[] other, *, Tensor(a!)[] out) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_clamp_max.Scalar(Tensor[] self, Scalar scalar) -> Tensor[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_clamp_max.ScalarList(Tensor[] self, Scalar[] scalars) -> Tensor[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_clamp_max.ScalarList_out(Tensor[] self, Scalar[] scalars, *, Tensor(a!)[] out) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_clamp_max.Scalar_out(Tensor[] self, Scalar scalar, *, Tensor(a!)[] out) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_clamp_max_.List(Tensor(a!)[] self, Tensor[] other) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_clamp_max_.Scalar(Tensor(a!)[] self, Scalar scalar) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_clamp_max_.ScalarList(Tensor(a!)[] self, Scalar[] scalars) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_clamp_min.List(Tensor[] self, Tensor[] other) -> Tensor[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_clamp_min.List_out(Tensor[] self, Tensor[] other, *, Tensor(a!)[] out) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_clamp_min.Scalar(Tensor[] self, Scalar scalar) -> Tensor[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_clamp_min.ScalarList(Tensor[] self, Scalar[] scalars) -> Tensor[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_clamp_min.ScalarList_out(Tensor[] self, Scalar[] scalars, *, Tensor(a!)[] out) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_clamp_min.Scalar_out(Tensor[] self, Scalar scalar, *, Tensor(a!)[] out) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_clamp_min_.List(Tensor(a!)[] self, Tensor[] other) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_clamp_min_.Scalar(Tensor(a!)[] self, Scalar scalar) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_clamp_min_.ScalarList(Tensor(a!)[] self, Scalar[] scalars) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_cos(Tensor[] self) -> Tensor[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_cos.out(Tensor[] self, *, Tensor(a!)[] out) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_cos_(Tensor(a!)[] self) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_cosh(Tensor[] self) -> Tensor[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_cosh.out(Tensor[] self, *, Tensor(a!)[] out) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_cosh_(Tensor(a!)[] self) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_div.List(Tensor[] self, Tensor[] other) -> Tensor[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_div.List_out(Tensor[] self, Tensor[] other, *, Tensor(a!)[] out) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_div.Scalar(Tensor[] self, Scalar scalar) -> Tensor[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_div.ScalarList(Tensor[] self, Scalar[] scalars) -> Tensor[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_div.ScalarList_out(Tensor[] self, Scalar[] scalars, *, Tensor(a!)[] out) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_div.Scalar_out(Tensor[] self, Scalar scalar, *, Tensor(a!)[] out) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_div_.List(Tensor(a!)[] self, Tensor[] other) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_div_.Scalar(Tensor(a!)[] self, Scalar scalar) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_div_.ScalarList(Tensor(a!)[] self, Scalar[] scalars) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_erf(Tensor[] self) -> Tensor[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_erf.out(Tensor[] self, *, Tensor(a!)[] out) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_erf_(Tensor(a!)[] self) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_erfc(Tensor[] self) -> Tensor[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_erfc.out(Tensor[] self, *, Tensor(a!)[] out) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_erfc_(Tensor(a!)[] self) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_exp(Tensor[] self) -> Tensor[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_exp.out(Tensor[] self, *, Tensor(a!)[] out) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_exp_(Tensor(a!)[] self) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_expm1(Tensor[] self) -> Tensor[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_expm1.out(Tensor[] self, *, Tensor(a!)[] out) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_expm1_(Tensor(a!)[] self) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_floor(Tensor[] self) -> Tensor[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_floor.out(Tensor[] self, *, Tensor(a!)[] out) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_floor_(Tensor(a!)[] self) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_frac(Tensor[] self) -> Tensor[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_frac.out(Tensor[] self, *, Tensor(a!)[] out) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_frac_(Tensor(a!)[] self) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_lerp.List(Tensor[] self, Tensor[] tensors1, Tensor[] weights) -> Tensor[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_lerp.List_out(Tensor[] self, Tensor[] tensors1, Tensor[] weights, *, Tensor(a!)[] out) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_lerp.Scalar(Tensor[] self, Tensor[] tensors1, Scalar weight) -> Tensor[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_lerp.Scalar_out(Tensor[] self, Tensor[] tensors1, Scalar weight, *, Tensor(a!)[] out) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_lerp_.List(Tensor(a!)[] self, Tensor[] tensors1, Tensor[] weights) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_lerp_.Scalar(Tensor(a!)[] self, Tensor[] tensors1, Scalar weight) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_lgamma(Tensor[] self) -> Tensor[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_lgamma.out(Tensor[] self, *, Tensor(a!)[] out) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_lgamma_(Tensor(a!)[] self) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_log(Tensor[] self) -> Tensor[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_log.out(Tensor[] self, *, Tensor(a!)[] out) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_log10(Tensor[] self) -> Tensor[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_log10.out(Tensor[] self, *, Tensor(a!)[] out) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_log10_(Tensor(a!)[] self) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_log1p(Tensor[] self) -> Tensor[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_log1p.out(Tensor[] self, *, Tensor(a!)[] out) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_log1p_(Tensor(a!)[] self) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_log2(Tensor[] self) -> Tensor[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_log2.out(Tensor[] self, *, Tensor(a!)[] out) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_log2_(Tensor(a!)[] self) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_log_(Tensor(a!)[] self) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_maximum.List(Tensor[] self, Tensor[] other) -> Tensor[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_maximum.List_out(Tensor[] self, Tensor[] other, *, Tensor(a!)[] out) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_maximum.Scalar(Tensor[] self, Scalar scalar) -> Tensor[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_maximum.ScalarList(Tensor[] self, Scalar[] scalars) -> Tensor[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_maximum.ScalarList_out(Tensor[] self, Scalar[] scalars, *, Tensor(a!)[] out) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_maximum.Scalar_out(Tensor[] self, Scalar scalar, *, Tensor(a!)[] out) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_maximum_.List(Tensor(a!)[] self, Tensor[] other) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_maximum_.Scalar(Tensor(a!)[] self, Scalar scalar) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_maximum_.ScalarList(Tensor(a!)[] self, Scalar[] scalars) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_minimum.List(Tensor[] self, Tensor[] other) -> Tensor[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_minimum.List_out(Tensor[] self, Tensor[] other, *, Tensor(a!)[] out) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_minimum.Scalar(Tensor[] self, Scalar scalar) -> Tensor[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_minimum.ScalarList(Tensor[] self, Scalar[] scalars) -> Tensor[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_minimum.ScalarList_out(Tensor[] self, Scalar[] scalars, *, Tensor(a!)[] out) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_minimum.Scalar_out(Tensor[] self, Scalar scalar, *, Tensor(a!)[] out) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_minimum_.List(Tensor(a!)[] self, Tensor[] other) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_minimum_.Scalar(Tensor(a!)[] self, Scalar scalar) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_minimum_.ScalarList(Tensor(a!)[] self, Scalar[] scalars) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_mul.List(Tensor[] self, Tensor[] other) -> Tensor[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_mul.List_out(Tensor[] self, Tensor[] other, *, Tensor(a!)[] out) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_mul.Scalar(Tensor[] self, Scalar scalar) -> Tensor[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_mul.ScalarList(Tensor[] self, Scalar[] scalars) -> Tensor[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_mul.ScalarList_out(Tensor[] self, Scalar[] scalars, *, Tensor(a!)[] out) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_mul.Scalar_out(Tensor[] self, Scalar scalar, *, Tensor(a!)[] out) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_mul_.List(Tensor(a!)[] self, Tensor[] other) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_mul_.Scalar(Tensor(a!)[] self, Scalar scalar) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_mul_.ScalarList(Tensor(a!)[] self, Scalar[] scalars) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_neg(Tensor[] self) -> Tensor[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_neg.out(Tensor[] self, *, Tensor(a!)[] out) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_neg_(Tensor(a!)[] self) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_norm.Scalar(Tensor[] self, Scalar ord=2) -> Tensor[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_norm.Scalar_out(Tensor[] self, Scalar ord=2, *, Tensor(a!)[] out) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_reciprocal(Tensor[] self) -> Tensor[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_reciprocal.out(Tensor[] self, *, Tensor(a!)[] out) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_reciprocal_(Tensor(a!)[] self) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_round(Tensor[] self) -> Tensor[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_round.out(Tensor[] self, *, Tensor(a!)[] out) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_round_(Tensor(a!)[] self) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_sigmoid(Tensor[] self) -> Tensor[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_sigmoid.out(Tensor[] self, *, Tensor(a!)[] out) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_sigmoid_(Tensor(a!)[] self) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_sin(Tensor[] self) -> Tensor[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_sin.out(Tensor[] self, *, Tensor(a!)[] out) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_sin_(Tensor(a!)[] self) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_sinh(Tensor[] self) -> Tensor[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_sinh.out(Tensor[] self, *, Tensor(a!)[] out) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_sinh_(Tensor(a!)[] self) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_sqrt(Tensor[] self) -> Tensor[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_sqrt.out(Tensor[] self, *, Tensor(a!)[] out) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_sqrt_(Tensor(a!)[] self) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_sub.List(Tensor[] self, Tensor[] other, *, Scalar alpha=1) -> Tensor[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_sub.List_out(Tensor[] self, Tensor[] other, *, Scalar alpha=1, Tensor(a!)[] out) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_sub.Scalar(Tensor[] self, Scalar scalar) -> Tensor[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_sub.ScalarList(Tensor[] self, Scalar[] scalars) -> Tensor[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_sub.ScalarList_out(Tensor[] self, Scalar[] scalars, *, Tensor(a!)[] out) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_sub.Scalar_out(Tensor[] self, Scalar scalar, *, Tensor(a!)[] out) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_sub_.List(Tensor(a!)[] self, Tensor[] other, *, Scalar alpha=1) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_sub_.Scalar(Tensor(a!)[] self, Scalar scalar) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_sub_.ScalarList(Tensor(a!)[] self, Scalar[] scalars) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_tan(Tensor[] self) -> Tensor[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_tan.out(Tensor[] self, *, Tensor(a!)[] out) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_tan_(Tensor(a!)[] self) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_tanh(Tensor[] self) -> Tensor[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_tanh.out(Tensor[] self, *, Tensor(a!)[] out) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_tanh_(Tensor(a!)[] self) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_trunc(Tensor[] self) -> Tensor[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_trunc.out(Tensor[] self, *, Tensor(a!)[] out) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_trunc_(Tensor(a!)[] self) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_zero(Tensor[] self) -> Tensor[] self_out
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_zero.out(Tensor[] self, *, Tensor(a!)[] out) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_foreach_zero_(Tensor(a!)[] self) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_fused_adam(Tensor[] self, Tensor[] grads, Tensor[] exp_avgs, Tensor[] exp_avg_sqs, Tensor[] max_exp_avg_sqs, Tensor[] state_steps, *, float lr, float beta1, float beta2, float weight_decay, float eps, bool amsgrad, bool maximize, Tensor? grad_scale=None, Tensor? found_inf=None) -> (Tensor[] self_out, Tensor[] grads_out, Tensor[] exp_avgs_out, Tensor[] exp_avg_sqs_out, Tensor[] max_exp_avg_sqs_out)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_fused_adam.out(Tensor[] self, Tensor(b!)[] grads, Tensor(c!)[] exp_avgs, Tensor(d!)[] exp_avg_sqs, Tensor(e!)[] max_exp_avg_sqs, Tensor[] state_steps, *, float lr, float beta1, float beta2, float weight_decay, float eps, bool amsgrad, bool maximize, Tensor? grad_scale=None, Tensor? found_inf=None, Tensor(a!)[] out) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_fused_adam_(Tensor(a!)[] self, Tensor(b!)[] grads, Tensor(c!)[] exp_avgs, Tensor(d!)[] exp_avg_sqs, Tensor(e!)[] max_exp_avg_sqs, Tensor[] state_steps, *, float lr, float beta1, float beta2, float weight_decay, float eps, bool amsgrad, bool maximize, Tensor? grad_scale=None, Tensor? found_inf=None) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_fused_adamw(Tensor[] self, Tensor[] grads, Tensor[] exp_avgs, Tensor[] exp_avg_sqs, Tensor[] max_exp_avg_sqs, Tensor[] state_steps, *, float lr, float beta1, float beta2, float weight_decay, float eps, bool amsgrad, bool maximize, Tensor? grad_scale=None, Tensor? found_inf=None) -> (Tensor[] self_out, Tensor[] grads_out, Tensor[] exp_avgs_out, Tensor[] exp_avg_sqs_out, Tensor[] max_exp_avg_sqs_out)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_fused_adamw.out(Tensor[] self, Tensor(b!)[] grads, Tensor(c!)[] exp_avgs, Tensor(d!)[] exp_avg_sqs, Tensor(e!)[] max_exp_avg_sqs, Tensor[] state_steps, *, float lr, float beta1, float beta2, float weight_decay, float eps, bool amsgrad, bool maximize, Tensor? grad_scale=None, Tensor? found_inf=None, Tensor(a!)[] out) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_fused_adamw_(Tensor(a!)[] self, Tensor(b!)[] grads, Tensor(c!)[] exp_avgs, Tensor(d!)[] exp_avg_sqs, Tensor(e!)[] max_exp_avg_sqs, Tensor[] state_steps, *, float lr, float beta1, float beta2, float weight_decay, float eps, bool amsgrad, bool maximize, Tensor? grad_scale=None, Tensor? found_inf=None) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_fused_dropout(Tensor self, float p, Generator? generator=None) -> (Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_fused_dropout.out(Tensor self, float p, Generator? generator=None, *, Tensor(a!) out0, Tensor(b!) out1) -> (Tensor(a!), Tensor(b!))
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_fused_moving_avg_obs_fq_helper(Tensor self, Tensor observer_on, Tensor fake_quant_on, Tensor(a!) running_min, Tensor(b!) running_max, Tensor(c!) scale, Tensor(d!) zero_point, float averaging_const, int quant_min, int quant_max, int ch_axis, bool per_row_fake_quant=False, bool symmetric_quant=False) -> (Tensor output, Tensor mask)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_fused_moving_avg_obs_fq_helper.out(Tensor self, Tensor observer_on, Tensor fake_quant_on, Tensor(a!) running_min, Tensor(b!) running_max, Tensor(c!) scale, Tensor(d!) zero_point, float averaging_const, int quant_min, int quant_max, int ch_axis, bool per_row_fake_quant=False, bool symmetric_quant=False, *, Tensor(e!) out0, Tensor(f!) out1) -> (Tensor(e!), Tensor(f!))
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_fused_moving_avg_obs_fq_helper_functional(Tensor self, Tensor observer_on, Tensor fake_quant_on, Tensor running_min, Tensor running_max, Tensor scale, Tensor zero_point, float averaging_const, int quant_min, int quant_max, int ch_axis, bool per_row_fake_quant=False, bool symmetric_quant=False) -> (Tensor output, Tensor mask, Tensor running_min_out, Tensor running_max_out, Tensor scale_out, Tensor zero_point_out)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_fused_sdp_choice(Tensor query, Tensor key, Tensor value, Tensor? attn_mask=None, float dropout_p=0., bool is_causal=False) -> int
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_fw_primal(Tensor(a) self, int level) -> Tensor(a)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_fw_primal_copy(Tensor self, int level) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_fw_primal_copy.out(Tensor self, int level, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_gather_sparse_backward(Tensor self, int dim, Tensor index, Tensor grad) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_grid_sampler_2d_cpu_fallback(Tensor input, Tensor grid, int interpolation_mode, int padding_mode, bool align_corners) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_grid_sampler_2d_cpu_fallback.out(Tensor input, Tensor grid, int interpolation_mode, int padding_mode, bool align_corners, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_grid_sampler_2d_cpu_fallback_backward(Tensor grad_output, Tensor input, Tensor grid, int interpolation_mode, int padding_mode, bool align_corners) -> (Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_has_compatible_shallow_copy_type(Tensor self, Tensor from) -> bool
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_has_same_storage_numel(Tensor self, Tensor other) -> bool
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_histogramdd_bin_edges(Tensor self, int[] bins, *, float[]? range=None, Tensor? weight=None, bool density=False) -> Tensor[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_histogramdd_bin_edges.out(Tensor self, int[] bins, *, float[]? range=None, Tensor? weight=None, bool density=False, Tensor(a!)[] out) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_histogramdd_from_bin_cts(Tensor self, int[] bins, *, float[]? range=None, Tensor? weight=None, bool density=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_histogramdd_from_bin_cts.out(Tensor self, int[] bins, *, float[]? range=None, Tensor? weight=None, bool density=False, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_histogramdd_from_bin_tensors(Tensor self, Tensor[] bins, *, Tensor? weight=None, bool density=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_histogramdd_from_bin_tensors.out(Tensor self, Tensor[] bins, *, Tensor? weight=None, bool density=False, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_index_put_impl(Tensor self, Tensor?[] indices, Tensor values, bool accumulate=False, bool unsafe=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_index_put_impl.out(Tensor self, Tensor?[] indices, Tensor values, bool accumulate=False, bool unsafe=False, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_index_put_impl_(Tensor(a!) self, Tensor?[] indices, Tensor values, bool accumulate=False, bool unsafe=False) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_indices(Tensor(a) self) -> Tensor(a)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_indices_copy(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_indices_copy.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_is_all_true(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_is_any_true(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_is_zerotensor(Tensor self) -> bool
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_linalg_check_errors(Tensor info, str api_name, *, bool is_matrix) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_linalg_det(Tensor A) -> (Tensor result, Tensor LU, Tensor pivots)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_linalg_det.result(Tensor A, *, Tensor(a!) result, Tensor(b!) LU, Tensor(c!) pivots) -> (Tensor(a!) result, Tensor(b!) LU, Tensor(c!) pivots)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_linalg_eigh(Tensor A, str UPLO="L", bool compute_v=True) -> (Tensor eigenvalues, Tensor eigenvectors)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_linalg_eigh.eigenvalues(Tensor A, str UPLO="L", bool compute_v=True, *, Tensor(a!) eigenvalues, Tensor(b!) eigenvectors) -> (Tensor(a!) eigenvalues, Tensor(b!) eigenvectors)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_linalg_slogdet(Tensor A) -> (Tensor sign, Tensor logabsdet, Tensor LU, Tensor pivots)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_linalg_slogdet.sign(Tensor A, *, Tensor(a!) sign, Tensor(b!) logabsdet, Tensor(c!) LU, Tensor(d!) pivots) -> (Tensor(a!) sign, Tensor(b!) logabsdet, Tensor(c!) LU, Tensor(d!) pivots)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_linalg_solve_ex(Tensor A, Tensor B, *, bool left=True, bool check_errors=False) -> (Tensor result, Tensor LU, Tensor pivots, Tensor info)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_linalg_solve_ex.result(Tensor A, Tensor B, *, bool left=True, bool check_errors=False, Tensor(a!) result, Tensor(b!) LU, Tensor(c!) pivots, Tensor(d!) info) -> (Tensor(a!) result, Tensor(b!) LU, Tensor(c!) pivots, Tensor(d!) info)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_linalg_svd(Tensor A, bool full_matrices=False, bool compute_uv=True, *, str? driver=None) -> (Tensor U, Tensor S, Tensor Vh)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_linalg_svd.U(Tensor A, bool full_matrices=False, bool compute_uv=True, *, str? driver=None, Tensor(a!) U, Tensor(b!) S, Tensor(c!) Vh) -> (Tensor(a!) U, Tensor(b!) S, Tensor(c!) Vh)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_local_scalar_dense(Tensor self) -> Scalar
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_log_softmax(Tensor self, int dim, bool half_to_float) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_log_softmax.out(Tensor self, int dim, bool half_to_float, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_log_softmax_backward_data(Tensor grad_output, Tensor output, int dim, ScalarType input_dtype) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_log_softmax_backward_data.out(Tensor grad_output, Tensor output, int dim, ScalarType input_dtype, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_logcumsumexp(Tensor self, int dim) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_logcumsumexp.out(Tensor self, int dim, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_lstm_mps(Tensor input, Tensor[] hx, Tensor[] params, bool has_biases, int num_layers, float dropout, bool train, bool bidirectional, bool batch_first) -> (Tensor, Tensor, Tensor, Tensor, Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_lstm_mps.out(Tensor input, Tensor[] hx, Tensor[] params, bool has_biases, int num_layers, float dropout, bool train, bool bidirectional, bool batch_first, *, Tensor(a!) out0, Tensor(b!) out1, Tensor(c!) out2, Tensor(d!) out3, Tensor(e!) out4, Tensor(f!) out5) -> (Tensor(a!), Tensor(b!), Tensor(c!), Tensor(d!), Tensor(e!), Tensor(f!))
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_lu_with_info(Tensor self, bool pivot=True, bool check_errors=True) -> (Tensor LU, Tensor pivots, Tensor info)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_make_dual(Tensor(a) primal, Tensor tangent, int level) -> Tensor(a)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_make_dual_copy(Tensor primal, Tensor tangent, int level) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_make_dual_copy.out(Tensor primal, Tensor tangent, int level, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_make_per_channel_quantized_tensor(Tensor self, Tensor scale, Tensor zero_point, int axis) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_make_per_channel_quantized_tensor.out(Tensor self, Tensor scale, Tensor zero_point, int axis, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_make_per_tensor_quantized_tensor(Tensor self, float scale, int zero_point) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_make_per_tensor_quantized_tensor.out(Tensor self, float scale, int zero_point, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_masked_scale(Tensor self, Tensor mask, float scale) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_masked_scale.out(Tensor self, Tensor mask, float scale, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_masked_softmax(Tensor self, Tensor mask, int? dim=None, int? mask_type=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_masked_softmax.out(Tensor self, Tensor mask, int? dim=None, int? mask_type=None, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_masked_softmax_backward(Tensor grad_output, Tensor output, Tensor mask, int? dim=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_masked_softmax_backward.out(Tensor grad_output, Tensor output, Tensor mask, int? dim=None, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_mkldnn_reshape(Tensor self, int[] shape) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_mkldnn_reshape.out(Tensor self, int[] shape, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_mkldnn_transpose(Tensor self, int dim0, int dim1) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_mkldnn_transpose.out(Tensor self, int dim0, int dim1, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_mkldnn_transpose_(Tensor(a!) self, int dim0, int dim1) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_mps_convolution(Tensor self, Tensor weight, Tensor? bias, int[] padding, int[] stride, int[] dilation, int groups) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_mps_convolution.out(Tensor self, Tensor weight, Tensor? bias, int[] padding, int[] stride, int[] dilation, int groups, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_mps_convolution_transpose(Tensor self, Tensor weight, int[] padding, int[] output_padding, int[] stride, int[] dilation, int groups) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_mps_convolution_transpose.out(Tensor self, Tensor weight, int[] padding, int[] output_padding, int[] stride, int[] dilation, int groups, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_native_batch_norm_legit(Tensor input, Tensor? weight, Tensor? bias, Tensor(a!) running_mean, Tensor(b!) running_var, bool training, float momentum, float eps) -> (Tensor, Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_native_batch_norm_legit.no_stats(Tensor input, Tensor? weight, Tensor? bias, bool training, float momentum, float eps) -> (Tensor, Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_native_batch_norm_legit.no_stats_out(Tensor input, Tensor? weight, Tensor? bias, bool training, float momentum, float eps, *, Tensor(a!) out, Tensor(b!) save_mean, Tensor(c!) save_invstd) -> (Tensor(a!), Tensor(b!), Tensor(c!))
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_native_batch_norm_legit.out(Tensor input, Tensor? weight, Tensor? bias, Tensor(a!) running_mean, Tensor(b!) running_var, bool training, float momentum, float eps, *, Tensor(d!) out, Tensor(e!) save_mean, Tensor(f!) save_invstd) -> (Tensor(d!), Tensor(e!), Tensor(f!))
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_native_batch_norm_legit_functional(Tensor input, Tensor? weight, Tensor? bias, Tensor running_mean, Tensor running_var, bool training, float momentum, float eps) -> (Tensor, Tensor, Tensor, Tensor running_mean_out, Tensor running_var_out)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_native_decoder_only_multi_head_attention(Tensor query, Tensor key, Tensor value, int embed_dim, int num_head, Tensor qkv_weight, Tensor qkv_bias, Tensor proj_weight, Tensor proj_bias, Tensor? mask=None, Tensor? incr_key=None, Tensor? incr_value=None, bool need_weights=True, bool average_attn_weights=True) -> (Tensor, Tensor, Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_native_decoder_only_multi_head_attention.out(Tensor query, Tensor key, Tensor value, int embed_dim, int num_head, Tensor qkv_weight, Tensor qkv_bias, Tensor proj_weight, Tensor proj_bias, Tensor? mask=None, Tensor? incr_key=None, Tensor? incr_value=None, bool need_weights=True, bool average_attn_weights=True, *, Tensor(a!) out0, Tensor(b!) out1, Tensor(c!) out2, Tensor(d!) out3) -> (Tensor(a!), Tensor(b!), Tensor(c!), Tensor(d!))
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_native_multi_head_attention(Tensor query, Tensor key, Tensor value, int embed_dim, int num_head, Tensor qkv_weight, Tensor qkv_bias, Tensor proj_weight, Tensor proj_bias, Tensor? mask=None, bool need_weights=True, bool average_attn_weights=True, int? mask_type=None) -> (Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_native_multi_head_attention.out(Tensor query, Tensor key, Tensor value, int embed_dim, int num_head, Tensor qkv_weight, Tensor qkv_bias, Tensor proj_weight, Tensor proj_bias, Tensor? mask=None, bool need_weights=True, bool average_attn_weights=True, int? mask_type=None, *, Tensor(a!) out0, Tensor(b!) out1) -> (Tensor(a!), Tensor(b!))
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_neg_view(Tensor(a) self) -> Tensor(a)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_neg_view_copy(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_neg_view_copy.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_nested_from_padded(Tensor padded, Tensor cpu_nested_shape_example, bool fuse_transform_0213=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_nested_from_padded.out(Tensor padded, Tensor cpu_nested_shape_example, bool fuse_transform_0213=False, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_nested_from_padded_and_nested_example(Tensor padded, Tensor nt_example) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_nested_from_padded_and_nested_example.out(Tensor padded, Tensor nt_example, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_nested_select_backward(Tensor grad_output, Tensor self, int dim, SymInt index) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_nested_sum_backward(Tensor grad, Tensor self, int[1]? dim, bool keepdim=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_nested_tensor_from_mask(Tensor t, Tensor mask, bool mask_check=True) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_nested_tensor_from_mask.out(Tensor t, Tensor mask, bool mask_check=True, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_nested_tensor_from_mask_left_aligned(Tensor t, Tensor mask) -> bool
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_nested_tensor_from_tensor_list(Tensor[] list, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_nested_tensor_from_tensor_list.out(Tensor[] list, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_nested_tensor_offsets(Tensor self) -> int[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_nested_tensor_size(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_nested_tensor_size.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_nested_tensor_softmax_with_shape(Tensor self, Tensor query) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_nested_tensor_strides(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_nested_tensor_strides.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_nested_view_from_buffer(Tensor(a) self, Tensor nested_size, Tensor nested_strides, int[] offsets) -> Tensor(a)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_nested_view_from_buffer_copy(Tensor self, Tensor nested_size, Tensor nested_strides, int[] offsets) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_nested_view_from_buffer_copy.out(Tensor self, Tensor nested_size, Tensor nested_strides, int[] offsets, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_new_zeros_with_same_feature_meta(Tensor self, Tensor other, *, int self_num_batch_dims=0) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_new_zeros_with_same_feature_meta.out(Tensor self, Tensor other, *, int self_num_batch_dims=0, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_nnpack_available() -> bool
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_nnpack_spatial_convolution(Tensor input, Tensor weight, Tensor? bias, SymInt[2] padding, int[2] stride=1) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_nnpack_spatial_convolution.out(Tensor input, Tensor weight, Tensor? bias, SymInt[2] padding, int[2] stride=1, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_nnz(Tensor self) -> int
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_pack_padded_sequence(Tensor input, Tensor lengths, bool batch_first) -> (Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_pack_padded_sequence.out(Tensor input, Tensor lengths, bool batch_first, *, Tensor(a!) out0, Tensor(b!) out1) -> (Tensor(a!), Tensor(b!))
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_pack_padded_sequence_backward(Tensor grad, SymInt[] input_size, Tensor batch_sizes, bool batch_first) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_pad_circular(Tensor self, SymInt[] pad) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_pad_enum(Tensor self, SymInt[] pad, int mode, float? value=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_pad_packed_sequence(Tensor data, Tensor batch_sizes, bool batch_first, Scalar padding_value, int total_length) -> (Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_pdist_backward(Tensor grad, Tensor self, float p, Tensor pdist) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_pdist_backward.out(Tensor grad, Tensor self, float p, Tensor pdist, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_pdist_forward(Tensor self, float p=2.) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_pdist_forward.out(Tensor self, float p=2., *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_pin_memory(Tensor self, Device? device=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_pin_memory.out(Tensor self, Device? device=None, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_prelu_kernel(Tensor self, Tensor weight) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_prelu_kernel_backward(Tensor grad_output, Tensor self, Tensor weight) -> (Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_remove_batch_dim(Tensor self, int level, int batch_size, int out_dim) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_reshape_alias(Tensor(a) self, SymInt[] size, SymInt[] stride) -> Tensor(a)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_reshape_alias_copy(Tensor self, SymInt[] size, SymInt[] stride) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_reshape_alias_copy.out(Tensor self, SymInt[] size, SymInt[] stride, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_reshape_copy(Tensor self, SymInt[] size) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_reshape_from_tensor(Tensor self, Tensor shape) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_resize_output(Tensor self, int[] size, Device device) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_resize_output.out(Tensor self, int[] size, Device device, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_resize_output_(Tensor(a!) self, int[] size, Device device) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_rowwise_prune(Tensor weight, Tensor mask, ScalarType compressed_indices_dtype) -> (Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_sample_dirichlet(Tensor self, Generator? generator=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_sample_dirichlet.out(Tensor self, Generator? generator=None, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_saturate_weight_to_fp16(Tensor weight) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_scaled_dot_product_attention(Tensor query, Tensor key, Tensor value, Tensor? attn_mask=None, float dropout_p=0., bool need_attn_weights=False, bool is_causal=False) -> (Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_scaled_dot_product_attention_math(Tensor query, Tensor key, Tensor value, Tensor? attn_mask=None, float dropout_p=0., bool is_causal=False, Tensor? dropout_mask=None) -> (Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_scaled_dot_product_efficient_attention(Tensor query, Tensor key, Tensor value, bool compute_log_sumexp, bool is_causal=False) -> (Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_scaled_dot_product_efficient_attention_backward(Tensor grad_out_, Tensor query, Tensor key, Tensor value, Tensor out, Tensor logsumexp, bool is_causal=False, bool chunk_grad_outputs=False) -> (Tensor, Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_scaled_dot_product_flash_attention(Tensor query, Tensor key, Tensor value, float dropout_p=0., bool is_causal=False, bool return_debug_mask=False) -> (Tensor ouput, Tensor logsumexp, Tensor cum_seq_q, Tensor cum_seq_k, int max_q, int max_k, int philox_seed, int philox_offset, Tensor debug_attn_mask)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_scaled_dot_product_flash_attention_backward(Tensor grad_out, Tensor query, Tensor key, Tensor value, Tensor out, Tensor logsumexp, Tensor cum_seq_q, Tensor cum_seq_k, int max_q, int max_k, float dropout_p, bool is_causal, int philox_seed, int philox_offset) -> (Tensor grad_query, Tensor grad_key, Tensor grad_value)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_segment_reduce_backward(Tensor grad, Tensor output, Tensor data, str reduce, *, Tensor? lengths=None, Tensor? offsets=None, int axis=0, Scalar? initial=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_segment_reduce_backward.out(Tensor grad, Tensor output, Tensor data, str reduce, *, Tensor? lengths=None, Tensor? offsets=None, int axis=0, Scalar? initial=None, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_shape_as_tensor(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_slow_conv2d_backward.grad_input(Tensor grad_output, Tensor self, Tensor weight, int[2] kernel_size, int[2] stride, int[2] padding, *, Tensor(a!) grad_input, Tensor(b!) grad_weight, Tensor(c!) grad_bias) -> (Tensor(a!), Tensor(b!), Tensor(c!))
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_slow_conv2d_backward.output_mask(Tensor grad_output, Tensor self, Tensor weight, int[2] kernel_size, int[2] stride, int[2] padding, bool[3] output_mask) -> (Tensor grad_input, Tensor grad_weight, Tensor grad_bias)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_slow_conv2d_backward.output_mask_out(Tensor grad_output, Tensor self, Tensor weight, int[2] kernel_size, int[2] stride, int[2] padding, bool[3] output_mask, *, Tensor(a!) out0, Tensor(b!) out1, Tensor(c!) out2) -> (Tensor(a!), Tensor(b!), Tensor(c!))
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_slow_conv2d_forward(Tensor self, Tensor weight, int[2] kernel_size, Tensor? bias, int[2] stride, int[2] padding) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_slow_conv2d_forward.output(Tensor self, Tensor weight, int[2] kernel_size, Tensor? bias, int[2] stride, int[2] padding, *, Tensor(a!) output) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_sobol_engine_draw(Tensor quasi, int n, Tensor sobolstate, int dimension, int num_generated, ScalarType? dtype) -> (Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_sobol_engine_ff_(Tensor(a!) self, int n, Tensor sobolstate, int dimension, int num_generated) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_sobol_engine_initialize_state_(Tensor(a!) self, int dimension) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_sobol_engine_scramble_(Tensor(a!) self, Tensor ltm, int dimension) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_softmax(Tensor self, int dim, bool half_to_float) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_softmax.out(Tensor self, int dim, bool half_to_float, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_softmax_backward_data(Tensor grad_output, Tensor output, int dim, ScalarType input_dtype) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_softmax_backward_data.out(Tensor grad_output, Tensor output, int dim, ScalarType input_dtype, *, Tensor(a!) grad_input) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_sparse_addmm(Tensor self, Tensor mat1, Tensor mat2, *, Scalar beta=1, Scalar alpha=1) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_sparse_addmm.out(Tensor self, Tensor mat1, Tensor mat2, *, Scalar beta=1, Scalar alpha=1, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_sparse_broadcast_to(Tensor(a) self, int[] size) -> Tensor(a)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_sparse_broadcast_to_copy(Tensor self, int[] size) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_sparse_broadcast_to_copy.out(Tensor self, int[] size, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_sparse_bsc_tensor_unsafe(Tensor ccol_indices, Tensor row_indices, Tensor values, int[] size, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_sparse_bsr_tensor_unsafe(Tensor crow_indices, Tensor col_indices, Tensor values, int[] size, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_sparse_compressed_tensor_unsafe(Tensor compressed_indices, Tensor plain_indices, Tensor values, int[] size, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_sparse_coo_tensor_unsafe(Tensor indices, Tensor values, SymInt[] size, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_sparse_coo_tensor_with_dims(int sparse_dim, int dense_dim, int[] size, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_sparse_coo_tensor_with_dims.out(int sparse_dim, int dense_dim, int[] size, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_sparse_coo_tensor_with_dims_and_tensors(int sparse_dim, int dense_dim, SymInt[] size, Tensor indices, Tensor values, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_sparse_coo_tensor_with_dims_and_tensors.out(int sparse_dim, int dense_dim, SymInt[] size, Tensor indices, Tensor values, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_sparse_csc_tensor_unsafe(Tensor ccol_indices, Tensor row_indices, Tensor values, int[] size, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_sparse_csr_prod.dim_dtype(Tensor self, int[1] dim, bool keepdim=False, *, ScalarType? dtype=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_sparse_csr_prod.dim_dtype_out(Tensor self, int[1] dim, bool keepdim=False, *, ScalarType? dtype=None, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_sparse_csr_sum.dim_dtype(Tensor self, int[1] dim, bool keepdim=False, *, ScalarType? dtype=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_sparse_csr_sum.dim_dtype_out(Tensor self, int[1] dim, bool keepdim=False, *, ScalarType? dtype=None, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_sparse_csr_tensor_unsafe(Tensor crow_indices, Tensor col_indices, Tensor values, int[] size, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_sparse_log_softmax(Tensor self, int dim, bool half_to_float) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_sparse_log_softmax.Dimname(Tensor self, str dim, *, ScalarType? dtype=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_sparse_log_softmax.int(Tensor self, int dim, ScalarType? dtype=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_sparse_log_softmax.out(Tensor self, int dim, bool half_to_float, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_sparse_log_softmax_backward_data(Tensor grad_output, Tensor output, int dim, Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_sparse_log_softmax_backward_data.out(Tensor grad_output, Tensor output, int dim, Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_sparse_mm(Tensor sparse, Tensor dense) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_sparse_mm.reduce(Tensor sparse, Tensor dense, str reduce) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_sparse_mm_reduce_impl(Tensor self, Tensor other, str reduce) -> (Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_sparse_mm_reduce_impl_backward(Tensor self, Tensor grad_out, Tensor weight, str reduce, Tensor arg_out, bool[2] output_mask) -> (Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_sparse_softmax(Tensor self, int dim, bool half_to_float) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_sparse_softmax.Dimname(Tensor self, str dim, *, ScalarType? dtype=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_sparse_softmax.int(Tensor self, int dim, ScalarType? dtype=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_sparse_softmax.out(Tensor self, int dim, bool half_to_float, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_sparse_softmax_backward_data(Tensor grad_output, Tensor output, int dim, Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_sparse_softmax_backward_data.out(Tensor grad_output, Tensor output, int dim, Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_sparse_sparse_matmul(Tensor self, Tensor other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_sparse_sparse_matmul.out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_sparse_sum(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_sparse_sum.dim(Tensor self, int[1] dim) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_sparse_sum.dim_dtype(Tensor self, int[1] dim, *, ScalarType dtype) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_sparse_sum.dim_out(Tensor self, int[1] dim, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_sparse_sum.dtype(Tensor self, *, ScalarType dtype) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_sparse_sum_backward(Tensor grad, Tensor self, int[] dim) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_sparse_sum_backward.out(Tensor grad, Tensor self, int[] dim, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_spdiags(Tensor diagonals, Tensor offsets, int[] shape, Layout? layout=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_spdiags.out(Tensor diagonals, Tensor offsets, int[] shape, Layout? layout=None, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_stack(Tensor[] tensors, int dim=0) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_stack.out(Tensor[] tensors, int dim=0, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_standard_gamma(Tensor self, Generator? generator=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_standard_gamma.out(Tensor self, Generator? generator=None, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_standard_gamma_grad(Tensor self, Tensor output) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_standard_gamma_grad.out(Tensor self, Tensor output, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_test_ambiguous_defaults.a(Tensor dummy, int a=1, int b=1) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_test_ambiguous_defaults.b(Tensor dummy, int a=2, str b="2") -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_test_autograd_multiple_dispatch.fullcoverage(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_test_autograd_multiple_dispatch.fullcoverage_out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_test_autograd_multiple_dispatch.ntonly(Tensor self, bool b) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_test_autograd_multiple_dispatch_view(Tensor(a) self) -> Tensor(a)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_test_autograd_multiple_dispatch_view_copy(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_test_autograd_multiple_dispatch_view_copy.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_test_check_tensor(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_test_optional_filled_intlist(Tensor values, int[2]? addends) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_test_optional_filled_intlist.out(Tensor values, int[2]? addends, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_test_optional_floatlist(Tensor values, float[]? addends) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_test_optional_floatlist.out(Tensor values, float[]? addends, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_test_optional_intlist(Tensor values, int[]? addends) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_test_optional_intlist.out(Tensor values, int[]? addends, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_test_serialization_subcmul(Tensor self, Tensor other, Scalar alpha=1) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_test_string_default(Tensor dummy, str a="\"\'\\", str b="\"\'\\") -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_test_warn_in_autograd(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_test_warn_in_autograd.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_thnn_differentiable_gru_cell_backward(Tensor grad_hy, Tensor input_gates, Tensor hidden_gates, Tensor hx, Tensor? input_bias, Tensor? hidden_bias) -> (Tensor, Tensor, Tensor, Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_thnn_differentiable_lstm_cell_backward(Tensor? grad_hy, Tensor? grad_cy, Tensor input_gates, Tensor hidden_gates, Tensor? input_bias, Tensor? hidden_bias, Tensor cx, Tensor cy) -> (Tensor, Tensor, Tensor, Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_thnn_fused_gru_cell(Tensor input_gates, Tensor hidden_gates, Tensor hx, Tensor? input_bias=None, Tensor? hidden_bias=None) -> (Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_thnn_fused_gru_cell.out(Tensor input_gates, Tensor hidden_gates, Tensor hx, Tensor? input_bias=None, Tensor? hidden_bias=None, *, Tensor(a!) out0, Tensor(b!) out1) -> (Tensor(a!), Tensor(b!))
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_thnn_fused_gru_cell_backward(Tensor grad_hy, Tensor workspace, bool has_bias) -> (Tensor, Tensor, Tensor, Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_thnn_fused_gru_cell_backward.out(Tensor grad_hy, Tensor workspace, bool has_bias, *, Tensor(a!) out0, Tensor(b!) out1, Tensor(c!) out2, Tensor(d!) out3, Tensor(e!) out4) -> (Tensor(a!), Tensor(b!), Tensor(c!), Tensor(d!), Tensor(e!))
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_thnn_fused_lstm_cell(Tensor input_gates, Tensor hidden_gates, Tensor cx, Tensor? input_bias=None, Tensor? hidden_bias=None) -> (Tensor, Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_thnn_fused_lstm_cell.out(Tensor input_gates, Tensor hidden_gates, Tensor cx, Tensor? input_bias=None, Tensor? hidden_bias=None, *, Tensor(a!) out0, Tensor(b!) out1, Tensor(c!) out2) -> (Tensor(a!), Tensor(b!), Tensor(c!))
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_thnn_fused_lstm_cell_backward(Tensor? grad_hy, Tensor? grad_cy, Tensor cx, Tensor cy, Tensor workspace, bool has_bias) -> (Tensor, Tensor, Tensor, Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_thnn_fused_lstm_cell_backward_impl(Tensor? grad_hy, Tensor? grad_cy, Tensor cx, Tensor cy, Tensor workspace, bool has_bias) -> (Tensor, Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_thnn_fused_lstm_cell_backward_impl.out(Tensor? grad_hy, Tensor? grad_cy, Tensor cx, Tensor cy, Tensor workspace, bool has_bias, *, Tensor(a!) out0, Tensor(b!) out1, Tensor(c!) out2) -> (Tensor(a!), Tensor(b!), Tensor(c!))
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_to_copy(Tensor self, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None, bool non_blocking=False, MemoryFormat? memory_format=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_to_copy.out(Tensor self, *, bool non_blocking=False, MemoryFormat? memory_format=None, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_to_cpu(Tensor[] tensors) -> Tensor[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_to_dense(Tensor self, ScalarType? dtype=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_to_dense.out(Tensor self, ScalarType? dtype=None, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_transform_bias_rescale_qkv(Tensor qkv, Tensor qkv_bias, int num_heads) -> (Tensor, Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_transform_bias_rescale_qkv.out(Tensor qkv, Tensor qkv_bias, int num_heads, *, Tensor(a!) out0, Tensor(b!) out1, Tensor(c!) out2) -> (Tensor(a!), Tensor(b!), Tensor(c!))
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_transformer_decoder_only_layer_fwd(Tensor src, int embed_dim, int num_heads, Tensor qkv_weight, Tensor qkv_bias, Tensor proj_weight, Tensor proj_bias, bool use_gelu, bool norm_first, float eps, Tensor norm_weight_1, Tensor norm_bias_1, Tensor norm_weight_2, Tensor norm_bias_2, Tensor ffn_weight_1, Tensor ffn_bias_1, Tensor ffn_weight_2, Tensor ffn_bias_2, Tensor? mask=None, Tensor? incr_key=None, Tensor? incr_value=None) -> (Tensor, Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_transformer_decoder_only_layer_fwd.out(Tensor src, int embed_dim, int num_heads, Tensor qkv_weight, Tensor qkv_bias, Tensor proj_weight, Tensor proj_bias, bool use_gelu, bool norm_first, float eps, Tensor norm_weight_1, Tensor norm_bias_1, Tensor norm_weight_2, Tensor norm_bias_2, Tensor ffn_weight_1, Tensor ffn_bias_1, Tensor ffn_weight_2, Tensor ffn_bias_2, Tensor? mask=None, Tensor? incr_key=None, Tensor? incr_value=None, *, Tensor(a!) out0, Tensor(b!) out1, Tensor(c!) out2) -> (Tensor(a!), Tensor(b!), Tensor(c!))
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_transformer_encoder_layer_fwd(Tensor src, int embed_dim, int num_heads, Tensor qkv_weight, Tensor qkv_bias, Tensor proj_weight, Tensor proj_bias, bool use_gelu, bool norm_first, float eps, Tensor norm_weight_1, Tensor norm_bias_1, Tensor norm_weight_2, Tensor norm_bias_2, Tensor ffn_weight_1, Tensor ffn_bias_1, Tensor ffn_weight_2, Tensor ffn_bias_2, Tensor? mask=None, int? mask_type=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_transformer_encoder_layer_fwd.out(Tensor src, int embed_dim, int num_heads, Tensor qkv_weight, Tensor qkv_bias, Tensor proj_weight, Tensor proj_bias, bool use_gelu, bool norm_first, float eps, Tensor norm_weight_1, Tensor norm_bias_1, Tensor norm_weight_2, Tensor norm_bias_2, Tensor ffn_weight_1, Tensor ffn_bias_1, Tensor ffn_weight_2, Tensor ffn_bias_2, Tensor? mask=None, int? mask_type=None, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_trilinear(Tensor i1, Tensor i2, Tensor i3, int[] expand1, int[] expand2, int[] expand3, int[] sumdim, int unroll_dim=1) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_trilinear.out(Tensor i1, Tensor i2, Tensor i3, int[] expand1, int[] expand2, int[] expand3, int[] sumdim, int unroll_dim=1, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_triton_multi_head_attention(Tensor query, Tensor key, Tensor value, int embed_dim, int num_head, Tensor qkv_weight, Tensor qkv_bias, Tensor proj_weight, Tensor proj_bias, Tensor? mask=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_triton_multi_head_attention.out(Tensor query, Tensor key, Tensor value, int embed_dim, int num_head, Tensor qkv_weight, Tensor qkv_bias, Tensor proj_weight, Tensor proj_bias, Tensor? mask=None, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_triton_scaled_dot_attention(Tensor q, Tensor k, Tensor v, float dropout_p=0.) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_triton_scaled_dot_attention.out(Tensor q, Tensor k, Tensor v, float dropout_p=0., *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_unique(Tensor self, bool sorted=True, bool return_inverse=False) -> (Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_unique.out(Tensor self, bool sorted=True, bool return_inverse=False, *, Tensor(a!) out0, Tensor(b!) out1) -> (Tensor(a!), Tensor(b!))
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_unique2(Tensor self, bool sorted=True, bool return_inverse=False, bool return_counts=False) -> (Tensor, Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_unique2.out(Tensor self, bool sorted=True, bool return_inverse=False, bool return_counts=False, *, Tensor(a!) out0, Tensor(b!) out1, Tensor(c!) out2) -> (Tensor(a!), Tensor(b!), Tensor(c!))
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_unpack_dual(Tensor(a) dual, int level) -> (Tensor(a) primal, Tensor tangent)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_unsafe_view(Tensor self, SymInt[] size) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_unsafe_view.out(Tensor self, SymInt[] size, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_upsample_bicubic2d_aa(Tensor self, SymInt[2] output_size, bool align_corners, float? scales_h=None, float? scales_w=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_upsample_bicubic2d_aa.out(Tensor self, SymInt[2] output_size, bool align_corners, float? scales_h=None, float? scales_w=None, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_upsample_bicubic2d_aa.vec(Tensor input, SymInt[]? output_size, bool align_corners, float[]? scale_factors) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_upsample_bicubic2d_aa_backward(Tensor grad_output, SymInt[2] output_size, SymInt[4] input_size, bool align_corners, float? scales_h=None, float? scales_w=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_upsample_bicubic2d_aa_backward.grad_input(Tensor grad_output, SymInt[2] output_size, SymInt[4] input_size, bool align_corners, float? scales_h=None, float? scales_w=None, *, Tensor(a!) grad_input) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_upsample_bilinear2d_aa(Tensor self, SymInt[2] output_size, bool align_corners, float? scales_h=None, float? scales_w=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_upsample_bilinear2d_aa.out(Tensor self, SymInt[2] output_size, bool align_corners, float? scales_h=None, float? scales_w=None, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_upsample_bilinear2d_aa.vec(Tensor input, SymInt[]? output_size, bool align_corners, float[]? scale_factors) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_upsample_bilinear2d_aa_backward(Tensor grad_output, SymInt[2] output_size, SymInt[4] input_size, bool align_corners, float? scales_h=None, float? scales_w=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_upsample_bilinear2d_aa_backward.grad_input(Tensor grad_output, SymInt[2] output_size, SymInt[4] input_size, bool align_corners, float? scales_h=None, float? scales_w=None, *, Tensor(a!) grad_input) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_upsample_nearest_exact1d(Tensor self, SymInt[1] output_size, float? scales=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_upsample_nearest_exact1d.out(Tensor self, SymInt[1] output_size, float? scales=None, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_upsample_nearest_exact1d.vec(Tensor input, SymInt[]? output_size, float[]? scale_factors) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_upsample_nearest_exact1d_backward(Tensor grad_output, SymInt[1] output_size, SymInt[3] input_size, float? scales=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_upsample_nearest_exact1d_backward.grad_input(Tensor grad_output, SymInt[1] output_size, SymInt[3] input_size, float? scales=None, *, Tensor(a!) grad_input) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_upsample_nearest_exact2d(Tensor self, SymInt[2] output_size, float? scales_h=None, float? scales_w=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_upsample_nearest_exact2d.out(Tensor self, SymInt[2] output_size, float? scales_h=None, float? scales_w=None, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_upsample_nearest_exact2d.vec(Tensor input, SymInt[]? output_size, float[]? scale_factors) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_upsample_nearest_exact2d_backward(Tensor grad_output, SymInt[2] output_size, SymInt[4] input_size, float? scales_h=None, float? scales_w=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_upsample_nearest_exact2d_backward.grad_input(Tensor grad_output, SymInt[2] output_size, SymInt[4] input_size, float? scales_h=None, float? scales_w=None, *, Tensor(a!) grad_input) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_upsample_nearest_exact3d(Tensor self, SymInt[3] output_size, float? scales_d=None, float? scales_h=None, float? scales_w=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_upsample_nearest_exact3d.out(Tensor self, SymInt[3] output_size, float? scales_d=None, float? scales_h=None, float? scales_w=None, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_upsample_nearest_exact3d.vec(Tensor input, SymInt[]? output_size, float[]? scale_factors) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_upsample_nearest_exact3d_backward(Tensor grad_output, SymInt[3] output_size, SymInt[5] input_size, float? scales_d=None, float? scales_h=None, float? scales_w=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_upsample_nearest_exact3d_backward.grad_input(Tensor grad_output, SymInt[3] output_size, SymInt[5] input_size, float? scales_d=None, float? scales_h=None, float? scales_w=None, *, Tensor(a!) grad_input) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_use_cudnn_ctc_loss(Tensor log_probs, Tensor targets, int[] input_lengths, int[] target_lengths, int blank) -> bool
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_use_cudnn_ctc_loss.Tensor(Tensor log_probs, Tensor targets, Tensor input_lengths, Tensor target_lengths, int blank) -> bool
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_use_cudnn_rnn_flatten_weight() -> bool
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_validate_compressed_sparse_indices(bool is_crow, Tensor compressed_idx, Tensor plain_idx, int cdim, int dim, int nnz) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_validate_sparse_bsc_tensor_args(Tensor ccol_indices, Tensor row_indices, Tensor values, int[] size) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_validate_sparse_bsr_tensor_args(Tensor crow_indices, Tensor col_indices, Tensor values, int[] size) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_validate_sparse_compressed_tensor_args(Tensor compressed_indices, Tensor plain_indices, Tensor values, int[] size, Layout layout) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_validate_sparse_coo_tensor_args(Tensor indices, Tensor values, int[] size) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_validate_sparse_csc_tensor_args(Tensor ccol_indices, Tensor row_indices, Tensor values, int[] size) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_validate_sparse_csr_tensor_args(Tensor crow_indices, Tensor col_indices, Tensor values, int[] size) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_values(Tensor(a) self) -> Tensor(a)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_values_copy(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_values_copy.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_version(Tensor self) -> int
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_weight_norm(Tensor v, Tensor g, int dim=0) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_weight_norm_differentiable_backward(Tensor grad_w, Tensor saved_v, Tensor saved_g, Tensor saved_norms, int dim) -> (Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_weight_norm_interface(Tensor v, Tensor g, int dim=0) -> (Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_weight_norm_interface.out(Tensor v, Tensor g, int dim=0, *, Tensor(a!) out0, Tensor(b!) out1) -> (Tensor(a!), Tensor(b!))
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_weight_norm_interface_backward(Tensor grad_w, Tensor saved_v, Tensor saved_g, Tensor saved_norms, int dim) -> (Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::_weight_norm_interface_backward.out(Tensor grad_w, Tensor saved_v, Tensor saved_g, Tensor saved_norms, int dim, *, Tensor(a!) out0, Tensor(b!) out1) -> (Tensor(a!), Tensor(b!))
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::abs(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::abs.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::abs_(Tensor(a!) self) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::absolute(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::absolute.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::absolute_(Tensor(a!) self) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::acos(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::acos.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::acos_(Tensor(a!) self) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::acosh(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::acosh.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::acosh_(Tensor(a!) self) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::adaptive_avg_pool1d(Tensor self, int[1] output_size) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::adaptive_avg_pool2d(Tensor self, SymInt[2] output_size) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::adaptive_avg_pool2d.out(Tensor self, SymInt[2] output_size, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::adaptive_avg_pool3d(Tensor self, SymInt[3] output_size) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::adaptive_avg_pool3d.out(Tensor self, SymInt[3] output_size, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::adaptive_avg_pool3d_backward.grad_input(Tensor grad_output, Tensor self, *, Tensor(a!) grad_input) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::adaptive_max_pool1d(Tensor self, int[1] output_size) -> (Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::adaptive_max_pool2d(Tensor self, int[2] output_size) -> (Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::adaptive_max_pool2d.out(Tensor self, int[2] output_size, *, Tensor(a!) out, Tensor(b!) indices) -> (Tensor(a!), Tensor(b!))
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::adaptive_max_pool2d_backward(Tensor grad_output, Tensor self, Tensor indices) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::adaptive_max_pool2d_backward.grad_input(Tensor grad_output, Tensor self, Tensor indices, *, Tensor(a!) grad_input) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::adaptive_max_pool3d(Tensor self, int[3] output_size) -> (Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::adaptive_max_pool3d.out(Tensor self, int[3] output_size, *, Tensor(a!) out, Tensor(b!) indices) -> (Tensor(a!), Tensor(b!))
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::adaptive_max_pool3d_backward(Tensor grad_output, Tensor self, Tensor indices) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::adaptive_max_pool3d_backward.grad_input(Tensor grad_output, Tensor self, Tensor indices, *, Tensor(a!) grad_input) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::add.Scalar(Tensor self, Scalar other, Scalar alpha=1) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::add.Scalar_out(Tensor self, Scalar other, Scalar alpha=1, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::add.Tensor(Tensor self, Tensor other, *, Scalar alpha=1) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::add.out(Tensor self, Tensor other, *, Scalar alpha=1, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::add_.Scalar(Tensor(a!) self, Scalar other, Scalar alpha=1) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::add_.Tensor(Tensor(a!) self, Tensor other, *, Scalar alpha=1) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::addbmm(Tensor self, Tensor batch1, Tensor batch2, *, Scalar beta=1, Scalar alpha=1) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::addbmm.out(Tensor self, Tensor batch1, Tensor batch2, *, Scalar beta=1, Scalar alpha=1, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::addbmm_(Tensor(a!) self, Tensor batch1, Tensor batch2, *, Scalar beta=1, Scalar alpha=1) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::addcdiv(Tensor self, Tensor tensor1, Tensor tensor2, *, Scalar value=1) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::addcdiv.out(Tensor self, Tensor tensor1, Tensor tensor2, *, Scalar value=1, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::addcdiv_(Tensor(a!) self, Tensor tensor1, Tensor tensor2, *, Scalar value=1) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::addcmul(Tensor self, Tensor tensor1, Tensor tensor2, *, Scalar value=1) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::addcmul.out(Tensor self, Tensor tensor1, Tensor tensor2, *, Scalar value=1, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::addcmul_(Tensor(a!) self, Tensor tensor1, Tensor tensor2, *, Scalar value=1) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::addmm(Tensor self, Tensor mat1, Tensor mat2, *, Scalar beta=1, Scalar alpha=1) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::addmm.out(Tensor self, Tensor mat1, Tensor mat2, *, Scalar beta=1, Scalar alpha=1, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::addmm_(Tensor(a!) self, Tensor mat1, Tensor mat2, *, Scalar beta=1, Scalar alpha=1) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::addmv(Tensor self, Tensor mat, Tensor vec, *, Scalar beta=1, Scalar alpha=1) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::addmv.out(Tensor self, Tensor mat, Tensor vec, *, Scalar beta=1, Scalar alpha=1, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::addmv_(Tensor(a!) self, Tensor mat, Tensor vec, *, Scalar beta=1, Scalar alpha=1) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::addr(Tensor self, Tensor vec1, Tensor vec2, *, Scalar beta=1, Scalar alpha=1) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::addr.out(Tensor self, Tensor vec1, Tensor vec2, *, Scalar beta=1, Scalar alpha=1, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::addr_(Tensor(a!) self, Tensor vec1, Tensor vec2, *, Scalar beta=1, Scalar alpha=1) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::adjoint(Tensor(a) self) -> Tensor(a)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::affine_grid_generator(Tensor theta, int[] size, bool align_corners) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::affine_grid_generator.out(Tensor theta, int[] size, bool align_corners, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::affine_grid_generator_backward(Tensor grad, int[] size, bool align_corners) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::alias(Tensor(a) self) -> Tensor(a)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::alias_copy(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::alias_copy.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::align_as(Tensor self, Tensor other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::align_tensors(Tensor[] tensors) -> Tensor[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::align_to(Tensor(a) self, str[] names) -> Tensor(a)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::align_to.ellipsis_idx(Tensor(a) self, str[] order, int ellipsis_idx) -> Tensor(a)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::all(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::all.all_out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::all.dim(Tensor self, int dim, bool keepdim=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::all.dimname(Tensor self, str dim, bool keepdim=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::all.dimname_out(Tensor self, str dim, bool keepdim=False, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::all.out(Tensor self, int dim, bool keepdim=False, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::allclose(Tensor self, Tensor other, float rtol=1.0000000000000001e-05, float atol=1e-08, bool equal_nan=False) -> bool
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::alpha_dropout(Tensor input, float p, bool train) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::alpha_dropout_(Tensor(a!) self, float p, bool train) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::amax(Tensor self, int[1] dim=[], bool keepdim=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::amax.out(Tensor self, int[1] dim=[], bool keepdim=False, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::amin(Tensor self, int[1] dim=[], bool keepdim=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::amin.out(Tensor self, int[1] dim=[], bool keepdim=False, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::aminmax(Tensor self, *, int? dim=None, bool keepdim=False) -> (Tensor min, Tensor max)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::aminmax.out(Tensor self, *, int? dim=None, bool keepdim=False, Tensor(a!) min, Tensor(b!) max) -> (Tensor(a!) min, Tensor(b!) max)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::angle(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::angle.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::any(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::any.all_out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::any.dim(Tensor self, int dim, bool keepdim=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::any.dimname(Tensor self, str dim, bool keepdim=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::any.dimname_out(Tensor self, str dim, bool keepdim=False, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::any.out(Tensor self, int dim, bool keepdim=False, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::arange(Scalar end, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::arange.out(Scalar end, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::arange.start(Scalar start, Scalar end, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::arange.start_out(Scalar start, Scalar end, Scalar step=1, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::arange.start_step(Scalar start, Scalar end, Scalar step=1, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::arccos(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::arccos.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::arccos_(Tensor(a!) self) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::arccosh(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::arccosh.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::arccosh_(Tensor(a!) self) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::arcsin(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::arcsin.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::arcsin_(Tensor(a!) self) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::arcsinh(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::arcsinh.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::arcsinh_(Tensor(a!) self) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::arctan(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::arctan.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::arctan2(Tensor self, Tensor other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::arctan2.out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::arctan2_(Tensor(a!) self, Tensor other) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::arctan_(Tensor(a!) self) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::arctanh(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::arctanh.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::arctanh_(Tensor(a!) self) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::argmax(Tensor self, int? dim=None, bool keepdim=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::argmax.out(Tensor self, int? dim=None, bool keepdim=False, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::argmin(Tensor self, int? dim=None, bool keepdim=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::argmin.out(Tensor self, int? dim=None, bool keepdim=False, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::argsort(Tensor self, int dim=-1, bool descending=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::argsort.dimname(Tensor self, str dim, bool descending=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::argsort.stable(Tensor self, *, bool stable, int dim=-1, bool descending=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::argsort.stable_out(Tensor self, *, bool stable, int dim=-1, bool descending=False, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::argwhere(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::as_strided(Tensor(a) self, SymInt[] size, SymInt[] stride, SymInt? storage_offset=None) -> Tensor(a)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::as_strided_(Tensor(a!) self, SymInt[] size, SymInt[] stride, SymInt? storage_offset=None) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::as_strided_copy(Tensor self, SymInt[] size, SymInt[] stride, SymInt? storage_offset=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::as_strided_copy.out(Tensor self, SymInt[] size, SymInt[] stride, SymInt? storage_offset=None, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::as_strided_scatter(Tensor self, Tensor src, SymInt[] size, SymInt[] stride, SymInt? storage_offset=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::as_strided_scatter.out(Tensor self, Tensor src, SymInt[] size, SymInt[] stride, SymInt? storage_offset=None, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::asin(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::asin.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::asin_(Tensor(a!) self) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::asinh(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::asinh.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::asinh_(Tensor(a!) self) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::atan(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::atan.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::atan2(Tensor self, Tensor other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::atan2.out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::atan2_(Tensor(a!) self, Tensor other) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::atan_(Tensor(a!) self) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::atanh(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::atanh.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::atanh_(Tensor(a!) self) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::atleast_1d(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::atleast_1d.Sequence(Tensor[] tensors) -> Tensor[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::atleast_2d(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::atleast_2d.Sequence(Tensor[] tensors) -> Tensor[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::atleast_3d(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::atleast_3d.Sequence(Tensor[] tensors) -> Tensor[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::avg_pool1d(Tensor self, int[1] kernel_size, int[1] stride=[], int[1] padding=[0], bool ceil_mode=False, bool count_include_pad=True) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::avg_pool2d(Tensor self, int[2] kernel_size, int[2] stride=[], int[2] padding=0, bool ceil_mode=False, bool count_include_pad=True, int? divisor_override=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::avg_pool2d.out(Tensor self, int[2] kernel_size, int[2] stride=[], int[2] padding=0, bool ceil_mode=False, bool count_include_pad=True, int? divisor_override=None, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::avg_pool2d_backward(Tensor grad_output, Tensor self, int[2] kernel_size, int[2] stride, int[2] padding, bool ceil_mode, bool count_include_pad, int? divisor_override) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::avg_pool2d_backward.grad_input(Tensor grad_output, Tensor self, int[2] kernel_size, int[2] stride, int[2] padding, bool ceil_mode, bool count_include_pad, int? divisor_override, *, Tensor(a!) grad_input) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::avg_pool3d(Tensor self, int[3] kernel_size, int[3] stride=[], int[3] padding=0, bool ceil_mode=False, bool count_include_pad=True, int? divisor_override=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::avg_pool3d.out(Tensor self, int[3] kernel_size, int[3] stride=[], int[3] padding=0, bool ceil_mode=False, bool count_include_pad=True, int? divisor_override=None, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::avg_pool3d_backward(Tensor grad_output, Tensor self, int[3] kernel_size, int[3] stride, int[3] padding, bool ceil_mode, bool count_include_pad, int? divisor_override) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::avg_pool3d_backward.grad_input(Tensor grad_output, Tensor self, int[3] kernel_size, int[3] stride, int[3] padding, bool ceil_mode, bool count_include_pad, int? divisor_override, *, Tensor(a!) grad_input) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::baddbmm(Tensor self, Tensor batch1, Tensor batch2, *, Scalar beta=1, Scalar alpha=1) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::baddbmm.out(Tensor self, Tensor batch1, Tensor batch2, *, Scalar beta=1, Scalar alpha=1, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::baddbmm_(Tensor(a!) self, Tensor batch1, Tensor batch2, *, Scalar beta=1, Scalar alpha=1) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::bartlett_window(int window_length, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::bartlett_window.out(int window_length, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::bartlett_window.periodic(int window_length, bool periodic, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::bartlett_window.periodic_out(int window_length, bool periodic, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::batch_norm(Tensor input, Tensor? weight, Tensor? bias, Tensor? running_mean, Tensor? running_var, bool training, float momentum, float eps, bool cudnn_enabled) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::batch_norm_backward_elemt(Tensor grad_out, Tensor input, Tensor mean, Tensor invstd, Tensor? weight, Tensor mean_dy, Tensor mean_dy_xmu, Tensor count) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::batch_norm_backward_elemt.out(Tensor grad_out, Tensor input, Tensor mean, Tensor invstd, Tensor? weight, Tensor mean_dy, Tensor mean_dy_xmu, Tensor count, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::batch_norm_backward_reduce(Tensor grad_out, Tensor input, Tensor mean, Tensor invstd, Tensor? weight, bool input_g, bool weight_g, bool bias_g) -> (Tensor, Tensor, Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::batch_norm_backward_reduce.out(Tensor grad_out, Tensor input, Tensor mean, Tensor invstd, Tensor? weight, bool input_g, bool weight_g, bool bias_g, *, Tensor(a!) out0, Tensor(b!) out1, Tensor(c!) out2, Tensor(d!) out3) -> (Tensor(a!), Tensor(b!), Tensor(c!), Tensor(d!))
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::batch_norm_elemt(Tensor input, Tensor? weight, Tensor? bias, Tensor mean, Tensor invstd, float eps) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::batch_norm_elemt.out(Tensor input, Tensor? weight, Tensor? bias, Tensor mean, Tensor invstd, float eps, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::batch_norm_gather_stats(Tensor input, Tensor mean, Tensor invstd, Tensor? running_mean, Tensor? running_var, float momentum, float eps, int count) -> (Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::batch_norm_gather_stats.out(Tensor input, Tensor mean, Tensor invstd, Tensor? running_mean, Tensor? running_var, float momentum, float eps, int count, *, Tensor(a!) out0, Tensor(b!) out1) -> (Tensor(a!), Tensor(b!))
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::batch_norm_gather_stats_with_counts(Tensor input, Tensor mean, Tensor invstd, Tensor? running_mean, Tensor? running_var, float momentum, float eps, Tensor counts) -> (Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::batch_norm_gather_stats_with_counts.out(Tensor input, Tensor mean, Tensor invstd, Tensor? running_mean, Tensor? running_var, float momentum, float eps, Tensor counts, *, Tensor(a!) out0, Tensor(b!) out1) -> (Tensor(a!), Tensor(b!))
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::batch_norm_stats(Tensor input, float eps) -> (Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::batch_norm_stats.out(Tensor input, float eps, *, Tensor(a!) out0, Tensor(b!) out1) -> (Tensor(a!), Tensor(b!))
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::batch_norm_update_stats(Tensor input, Tensor? running_mean, Tensor? running_var, float momentum) -> (Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::batch_norm_update_stats.out(Tensor input, Tensor? running_mean, Tensor? running_var, float momentum, *, Tensor(a!) out0, Tensor(b!) out1) -> (Tensor(a!), Tensor(b!))
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::bernoulli(Tensor self, *, Generator? generator=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::bernoulli.Tensor(Tensor self, Tensor p, *, Generator? generator=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::bernoulli.Tensor_out(Tensor self, Tensor p, *, Generator? generator=None, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::bernoulli.float_out(Tensor self, float p=0.5, *, Generator? generator=None, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::bernoulli.out(Tensor self, *, Generator? generator=None, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::bernoulli.p(Tensor self, float p, *, Generator? generator=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::bernoulli_.Tensor(Tensor(a!) self, Tensor p, *, Generator? generator=None) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::bernoulli_.float(Tensor(a!) self, float p=0.5, *, Generator? generator=None) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::bilinear(Tensor input1, Tensor input2, Tensor weight, Tensor? bias=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::binary_cross_entropy(Tensor self, Tensor target, Tensor? weight=None, int reduction=1) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::binary_cross_entropy.out(Tensor self, Tensor target, Tensor? weight=None, int reduction=1, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::binary_cross_entropy_backward(Tensor grad_output, Tensor self, Tensor target, Tensor? weight=None, int reduction=1) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::binary_cross_entropy_backward.grad_input(Tensor grad_output, Tensor self, Tensor target, Tensor? weight=None, int reduction=1, *, Tensor(a!) grad_input) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::binary_cross_entropy_with_logits(Tensor self, Tensor target, Tensor? weight=None, Tensor? pos_weight=None, int reduction=1) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::binary_cross_entropy_with_logits.out(Tensor self, Tensor target, Tensor? weight=None, Tensor? pos_weight=None, int reduction=1, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::bincount(Tensor self, Tensor? weights=None, int minlength=0) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::bincount.out(Tensor self, Tensor? weights=None, int minlength=0, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::binomial(Tensor count, Tensor prob, Generator? generator=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::binomial.out(Tensor count, Tensor prob, Generator? generator=None, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::bitwise_and.Scalar(Tensor self, Scalar other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::bitwise_and.Scalar_Tensor(Scalar self, Tensor other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::bitwise_and.Scalar_Tensor_out(Scalar self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::bitwise_and.Scalar_out(Tensor self, Scalar other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::bitwise_and.Tensor(Tensor self, Tensor other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::bitwise_and.Tensor_out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::bitwise_and_.Scalar(Tensor(a!) self, Scalar other) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::bitwise_and_.Tensor(Tensor(a!) self, Tensor other) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::bitwise_left_shift.Scalar_Tensor(Scalar self, Tensor other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::bitwise_left_shift.Scalar_Tensor_out(Scalar self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::bitwise_left_shift.Tensor(Tensor self, Tensor other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::bitwise_left_shift.Tensor_Scalar(Tensor self, Scalar other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::bitwise_left_shift.Tensor_Scalar_out(Tensor self, Scalar other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::bitwise_left_shift.Tensor_out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::bitwise_left_shift_.Tensor(Tensor(a!) self, Tensor other) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::bitwise_left_shift_.Tensor_Scalar(Tensor(a!) self, Scalar other) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::bitwise_not(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::bitwise_not.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::bitwise_not_(Tensor(a!) self) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::bitwise_or.Scalar(Tensor self, Scalar other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::bitwise_or.Scalar_Tensor(Scalar self, Tensor other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::bitwise_or.Scalar_Tensor_out(Scalar self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::bitwise_or.Scalar_out(Tensor self, Scalar other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::bitwise_or.Tensor(Tensor self, Tensor other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::bitwise_or.Tensor_out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::bitwise_or_.Scalar(Tensor(a!) self, Scalar other) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::bitwise_or_.Tensor(Tensor(a!) self, Tensor other) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::bitwise_right_shift.Scalar_Tensor(Scalar self, Tensor other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::bitwise_right_shift.Scalar_Tensor_out(Scalar self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::bitwise_right_shift.Tensor(Tensor self, Tensor other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::bitwise_right_shift.Tensor_Scalar(Tensor self, Scalar other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::bitwise_right_shift.Tensor_Scalar_out(Tensor self, Scalar other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::bitwise_right_shift.Tensor_out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::bitwise_right_shift_.Tensor(Tensor(a!) self, Tensor other) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::bitwise_right_shift_.Tensor_Scalar(Tensor(a!) self, Scalar other) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::bitwise_xor.Scalar(Tensor self, Scalar other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::bitwise_xor.Scalar_Tensor(Scalar self, Tensor other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::bitwise_xor.Scalar_Tensor_out(Scalar self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::bitwise_xor.Scalar_out(Tensor self, Scalar other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::bitwise_xor.Tensor(Tensor self, Tensor other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::bitwise_xor.Tensor_out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::bitwise_xor_.Scalar(Tensor(a!) self, Scalar other) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::bitwise_xor_.Tensor(Tensor(a!) self, Tensor other) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::blackman_window(int window_length, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::blackman_window.out(int window_length, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::blackman_window.periodic(int window_length, bool periodic, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::blackman_window.periodic_out(int window_length, bool periodic, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::block_diag(Tensor[] tensors) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::block_diag.out(Tensor[] tensors, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::bmm(Tensor self, Tensor mat2) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::bmm.out(Tensor self, Tensor mat2, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::broadcast_tensors(Tensor[] tensors) -> Tensor[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::broadcast_to(Tensor(a) self, SymInt[] size) -> Tensor(a)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::bucketize.Scalar(Scalar self, Tensor boundaries, *, bool out_int32=False, bool right=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::bucketize.Scalar_out(Scalar self, Tensor boundaries, *, bool out_int32=False, bool right=False, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::bucketize.Tensor(Tensor self, Tensor boundaries, *, bool out_int32=False, bool right=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::bucketize.Tensor_out(Tensor self, Tensor boundaries, *, bool out_int32=False, bool right=False, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::can_cast(ScalarType from, ScalarType to) -> bool
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::cartesian_prod(Tensor[] tensors) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::cat(Tensor[] tensors, int dim=0) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::cat.names(Tensor[] tensors, str dim) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::cat.names_out(Tensor[] tensors, str dim, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::cat.out(Tensor[] tensors, int dim=0, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::cauchy(Tensor self, float median=0., float sigma=1., *, Generator? generator=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::cauchy.out(Tensor self, float median=0., float sigma=1., *, Generator? generator=None, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::cauchy_(Tensor(a!) self, float median=0., float sigma=1., *, Generator? generator=None) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::ccol_indices(Tensor(a) self) -> Tensor(a)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::ccol_indices_copy(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::ccol_indices_copy.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::cdist(Tensor x1, Tensor x2, float p=2., int? compute_mode=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::ceil(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::ceil.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::ceil_(Tensor(a!) self) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::celu(Tensor self, Scalar alpha=1.) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::celu.out(Tensor self, Scalar alpha=1., *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::celu_(Tensor(a!) self, Scalar alpha=1.) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::chain_matmul(Tensor[] matrices) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::chain_matmul.out(Tensor[] matrices, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::chalf(Tensor self, *, MemoryFormat? memory_format=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::channel_shuffle(Tensor self, int groups) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::channel_shuffle.out(Tensor self, int groups, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::cholesky(Tensor self, bool upper=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::cholesky.out(Tensor self, bool upper=False, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::cholesky_inverse(Tensor self, bool upper=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::cholesky_inverse.out(Tensor self, bool upper=False, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::cholesky_solve(Tensor self, Tensor input2, bool upper=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::cholesky_solve.out(Tensor self, Tensor input2, bool upper=False, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::choose_qparams_optimized(Tensor input, int numel, int n_bins, float ratio, int bit_width) -> (Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::chunk(Tensor(a -> *) self, int chunks, int dim=0) -> Tensor(a)[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::clamp(Tensor self, Scalar? min=None, Scalar? max=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::clamp.Tensor(Tensor self, Tensor? min=None, Tensor? max=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::clamp.Tensor_out(Tensor self, Tensor? min=None, Tensor? max=None, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::clamp.out(Tensor self, Scalar? min=None, Scalar? max=None, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::clamp_(Tensor(a!) self, Scalar? min=None, Scalar? max=None) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::clamp_.Tensor(Tensor(a!) self, Tensor? min=None, Tensor? max=None) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::clamp_max(Tensor self, Scalar max) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::clamp_max.Tensor(Tensor self, Tensor max) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::clamp_max.Tensor_out(Tensor self, Tensor max, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::clamp_max.out(Tensor self, Scalar max, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::clamp_max_(Tensor(a!) self, Scalar max) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::clamp_max_.Tensor(Tensor(a!) self, Tensor max) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::clamp_min(Tensor self, Scalar min) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::clamp_min.Tensor(Tensor self, Tensor min) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::clamp_min.Tensor_out(Tensor self, Tensor min, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::clamp_min.out(Tensor self, Scalar min, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::clamp_min_(Tensor(a!) self, Scalar min) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::clamp_min_.Tensor(Tensor(a!) self, Tensor min) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::clip(Tensor self, Scalar? min=None, Scalar? max=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::clip.Tensor(Tensor self, Tensor? min=None, Tensor? max=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::clip.Tensor_out(Tensor self, Tensor? min=None, Tensor? max=None, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::clip.out(Tensor self, Scalar? min=None, Scalar? max=None, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::clip_(Tensor(a!) self, Scalar? min=None, Scalar? max=None) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::clip_.Tensor(Tensor(a!) self, Tensor? min=None, Tensor? max=None) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::clone(Tensor self, *, MemoryFormat? memory_format=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::clone.out(Tensor self, *, MemoryFormat? memory_format=None, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::coalesce(Tensor(a) self) -> Tensor(a)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::col2im(Tensor self, SymInt[2] output_size, int[2] kernel_size, int[2] dilation, int[2] padding, int[2] stride) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::col2im.out(Tensor self, SymInt[2] output_size, int[2] kernel_size, int[2] dilation, int[2] padding, int[2] stride, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::col_indices(Tensor(a) self) -> Tensor(a)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::col_indices_copy(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::col_indices_copy.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::column_stack(Tensor[] tensors) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::column_stack.out(Tensor[] tensors, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::combinations(Tensor self, int r=2, bool with_replacement=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::complex(Tensor real, Tensor imag) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::complex.out(Tensor real, Tensor imag, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::concat(Tensor[] tensors, int dim=0) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::concat.names(Tensor[] tensors, str dim) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::concat.names_out(Tensor[] tensors, str dim, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::concat.out(Tensor[] tensors, int dim=0, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::concatenate(Tensor[] tensors, int dim=0) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::concatenate.names(Tensor[] tensors, str dim) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::concatenate.names_out(Tensor[] tensors, str dim, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::concatenate.out(Tensor[] tensors, int dim=0, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::conj(Tensor(a) self) -> Tensor(a)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::conj_physical(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::conj_physical.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::conj_physical_(Tensor(a!) self) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::constant_pad_nd(Tensor self, SymInt[] pad, Scalar value=0) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::constant_pad_nd.out(Tensor self, SymInt[] pad, Scalar value=0, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::contiguous(Tensor(a) self, *, MemoryFormat memory_format=0) -> Tensor(a)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::conv1d(Tensor input, Tensor weight, Tensor? bias=None, int[1] stride=[1], int[1] padding=[0], int[1] dilation=[1], int groups=1) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::conv1d.padding(Tensor input, Tensor weight, Tensor? bias=None, int[1] stride=[1], str padding="valid", int[1] dilation=[1], int groups=1) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::conv2d(Tensor input, Tensor weight, Tensor? bias=None, int[2] stride=1, int[2] padding=0, int[2] dilation=1, int groups=1) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::conv2d.padding(Tensor input, Tensor weight, Tensor? bias=None, int[2] stride=1, str padding="valid", int[2] dilation=1, int groups=1) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::conv3d(Tensor input, Tensor weight, Tensor? bias=None, int[3] stride=1, int[3] padding=0, int[3] dilation=1, int groups=1) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::conv3d.padding(Tensor input, Tensor weight, Tensor? bias=None, int[3] stride=1, str padding="valid", int[3] dilation=1, int groups=1) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::conv_depthwise3d(Tensor self, Tensor weight, int[3] kernel_size, Tensor? bias, int[3] stride, SymInt[3] padding, int[3] dilation) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::conv_depthwise3d.out(Tensor self, Tensor weight, int[3] kernel_size, Tensor? bias, int[3] stride, SymInt[3] padding, int[3] dilation, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::conv_tbc(Tensor self, Tensor weight, Tensor bias, int pad=0) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::conv_tbc.out(Tensor self, Tensor weight, Tensor bias, int pad=0, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::conv_tbc_backward(Tensor self, Tensor input, Tensor weight, Tensor bias, int pad) -> (Tensor, Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::conv_transpose1d(Tensor input, Tensor weight, Tensor? bias=None, int[1] stride=[1], int[1] padding=[0], int[1] output_padding=[0], int groups=1, int[1] dilation=[1]) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::conv_transpose2d.input(Tensor input, Tensor weight, Tensor? bias=None, int[2] stride=1, int[2] padding=0, int[2] output_padding=0, int groups=1, int[2] dilation=1) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::conv_transpose3d.input(Tensor input, Tensor weight, Tensor? bias=None, int[3] stride=1, int[3] padding=0, int[3] output_padding=0, int groups=1, int[3] dilation=1) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::convolution(Tensor input, Tensor weight, Tensor? bias, int[] stride, SymInt[] padding, int[] dilation, bool transposed, SymInt[] output_padding, int groups) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::convolution.out(Tensor input, Tensor weight, Tensor? bias, int[] stride, SymInt[] padding, int[] dilation, bool transposed, SymInt[] output_padding, int groups, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::convolution_backward(Tensor grad_output, Tensor input, Tensor weight, SymInt[]? bias_sizes, int[] stride, SymInt[] padding, int[] dilation, bool transposed, SymInt[] output_padding, int groups, bool[3] output_mask) -> (Tensor, Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::convolution_backward.out(Tensor grad_output, Tensor input, Tensor weight, SymInt[]? bias_sizes, int[] stride, SymInt[] padding, int[] dilation, bool transposed, SymInt[] output_padding, int groups, bool[3] output_mask, *, Tensor(a!) out0, Tensor(b!) out1, Tensor(c!) out2) -> (Tensor(a!), Tensor(b!), Tensor(c!))
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::convolution_backward_overrideable(Tensor grad_output, Tensor input, Tensor weight, int[] stride, int[] padding, int[] dilation, bool transposed, int[] output_padding, int groups, bool[3] output_mask) -> (Tensor grad_input, Tensor grad_weight, Tensor grad_bias)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::convolution_backward_overrideable.out(Tensor grad_output, Tensor input, Tensor weight, int[] stride, int[] padding, int[] dilation, bool transposed, int[] output_padding, int groups, bool[3] output_mask, *, Tensor(a!) out0, Tensor(b!) out1, Tensor(c!) out2) -> (Tensor(a!), Tensor(b!), Tensor(c!))
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::convolution_overrideable(Tensor input, Tensor weight, Tensor? bias, int[] stride, int[] padding, int[] dilation, bool transposed, int[] output_padding, int groups) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::convolution_overrideable.out(Tensor input, Tensor weight, Tensor? bias, int[] stride, int[] padding, int[] dilation, bool transposed, int[] output_padding, int groups, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::copy(Tensor self, Tensor src, bool non_blocking=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::copy.out(Tensor self, Tensor src, bool non_blocking=False, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::copy_(Tensor(a!) self, Tensor src, bool non_blocking=False) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::copy_sparse_to_sparse(Tensor self, Tensor src, bool non_blocking=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::copy_sparse_to_sparse.out(Tensor self, Tensor src, bool non_blocking=False, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::copy_sparse_to_sparse_(Tensor(a!) self, Tensor src, bool non_blocking=False) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::copysign.Scalar(Tensor self, Scalar other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::copysign.Scalar_out(Tensor self, Scalar other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::copysign.Tensor(Tensor self, Tensor other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::copysign.out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::copysign_.Scalar(Tensor(a!) self, Scalar other) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::copysign_.Tensor(Tensor(a!) self, Tensor other) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::corrcoef(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::cos(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::cos.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::cos_(Tensor(a!) self) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::cosh(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::cosh.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::cosh_(Tensor(a!) self) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::cosine_embedding_loss(Tensor input1, Tensor input2, Tensor target, float margin=0., int reduction=1) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::cosine_similarity(Tensor x1, Tensor x2, int dim=1, float eps=1e-08) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::count_nonzero(Tensor self, int? dim=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::count_nonzero.dim_IntList(Tensor self, int[] dim) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::count_nonzero.dim_IntList_out(Tensor self, int[] dim, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::count_nonzero.out(Tensor self, int? dim=None, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::cov(Tensor self, *, int correction=1, Tensor? fweights=None, Tensor? aweights=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::cross(Tensor self, Tensor other, int? dim=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::cross.out(Tensor self, Tensor other, int? dim=None, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::cross_entropy_loss(Tensor self, Tensor target, Tensor? weight=None, int reduction=1, SymInt ignore_index=-100, float label_smoothing=0.) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::crow_indices(Tensor(a) self) -> Tensor(a)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::crow_indices_copy(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::crow_indices_copy.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::ctc_loss.IntList(Tensor log_probs, Tensor targets, int[] input_lengths, int[] target_lengths, int blank=0, int reduction=1, bool zero_infinity=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::ctc_loss.Tensor(Tensor log_probs, Tensor targets, Tensor input_lengths, Tensor target_lengths, int blank=0, int reduction=1, bool zero_infinity=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::cudnn_affine_grid_generator(Tensor theta, int N, int C, int H, int W) -> Tensor grid
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::cudnn_affine_grid_generator.out(Tensor theta, int N, int C, int H, int W, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::cudnn_affine_grid_generator_backward(Tensor grad, int N, int C, int H, int W) -> Tensor grad_theta
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::cudnn_affine_grid_generator_backward.out(Tensor grad, int N, int C, int H, int W, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::cudnn_batch_norm(Tensor input, Tensor weight, Tensor? bias, Tensor? running_mean, Tensor? running_var, bool training, float exponential_average_factor, float epsilon) -> (Tensor, Tensor, Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::cudnn_batch_norm.out(Tensor input, Tensor weight, Tensor? bias, Tensor? running_mean, Tensor? running_var, bool training, float exponential_average_factor, float epsilon, *, Tensor(a!) out0, Tensor(b!) out1, Tensor(c!) out2, Tensor(d!) out3) -> (Tensor(a!), Tensor(b!), Tensor(c!), Tensor(d!))
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::cudnn_batch_norm_backward(Tensor input, Tensor grad_output, Tensor weight, Tensor? running_mean, Tensor? running_var, Tensor? save_mean, Tensor? save_var, float epsilon, Tensor reserveSpace) -> (Tensor, Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::cudnn_batch_norm_backward.out(Tensor input, Tensor grad_output, Tensor weight, Tensor? running_mean, Tensor? running_var, Tensor? save_mean, Tensor? save_var, float epsilon, Tensor reserveSpace, *, Tensor(a!) out0, Tensor(b!) out1, Tensor(c!) out2) -> (Tensor(a!), Tensor(b!), Tensor(c!))
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::cudnn_convolution(Tensor self, Tensor weight, int[] padding, int[] stride, int[] dilation, int groups, bool benchmark, bool deterministic, bool allow_tf32) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::cudnn_convolution.out(Tensor self, Tensor weight, int[] padding, int[] stride, int[] dilation, int groups, bool benchmark, bool deterministic, bool allow_tf32, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::cudnn_convolution_add_relu(Tensor self, Tensor weight, Tensor z, Scalar? alpha, Tensor? bias, int[] stride, int[] padding, int[] dilation, int groups) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::cudnn_convolution_add_relu.out(Tensor self, Tensor weight, Tensor z, Scalar? alpha, Tensor? bias, int[] stride, int[] padding, int[] dilation, int groups, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::cudnn_convolution_relu(Tensor self, Tensor weight, Tensor? bias, int[] stride, int[] padding, int[] dilation, int groups) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::cudnn_convolution_relu.out(Tensor self, Tensor weight, Tensor? bias, int[] stride, int[] padding, int[] dilation, int groups, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::cudnn_convolution_transpose(Tensor self, Tensor weight, int[] padding, int[] output_padding, int[] stride, int[] dilation, int groups, bool benchmark, bool deterministic, bool allow_tf32) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::cudnn_convolution_transpose.out(Tensor self, Tensor weight, int[] padding, int[] output_padding, int[] stride, int[] dilation, int groups, bool benchmark, bool deterministic, bool allow_tf32, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::cudnn_grid_sampler(Tensor self, Tensor grid) -> Tensor output
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::cudnn_grid_sampler.out(Tensor self, Tensor grid, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::cudnn_grid_sampler_backward(Tensor self, Tensor grid, Tensor grad_output) -> (Tensor grad_self, Tensor grad_grid)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::cudnn_grid_sampler_backward.out(Tensor self, Tensor grid, Tensor grad_output, *, Tensor(a!) out0, Tensor(b!) out1) -> (Tensor(a!), Tensor(b!))
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::cudnn_is_acceptable(Tensor self) -> bool
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::cummax(Tensor self, int dim) -> (Tensor values, Tensor indices)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::cummax.dimname(Tensor self, str dim) -> (Tensor values, Tensor indices)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::cummax.dimname_out(Tensor self, str dim, *, Tensor(a!) values, Tensor(b!) indices) -> (Tensor(a!) values, Tensor(b!) indices)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::cummax.out(Tensor self, int dim, *, Tensor(a!) values, Tensor(b!) indices) -> (Tensor(a!) values, Tensor(b!) indices)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::cummaxmin_backward(Tensor grad, Tensor input, Tensor indices, int dim) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::cummin(Tensor self, int dim) -> (Tensor values, Tensor indices)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::cummin.dimname(Tensor self, str dim) -> (Tensor values, Tensor indices)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::cummin.dimname_out(Tensor self, str dim, *, Tensor(a!) values, Tensor(b!) indices) -> (Tensor(a!) values, Tensor(b!) indices)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::cummin.out(Tensor self, int dim, *, Tensor(a!) values, Tensor(b!) indices) -> (Tensor(a!) values, Tensor(b!) indices)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::cumprod(Tensor self, int dim, *, ScalarType? dtype=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::cumprod.dimname(Tensor self, str dim, *, ScalarType? dtype=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::cumprod.dimname_out(Tensor self, str dim, *, ScalarType? dtype=None, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::cumprod.out(Tensor self, int dim, *, ScalarType? dtype=None, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::cumprod_(Tensor(a!) self, int dim, *, ScalarType? dtype=None) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::cumprod_.dimname(Tensor(a!) self, str dim, *, ScalarType? dtype=None) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::cumprod_backward(Tensor grad, Tensor input, int dim, Tensor output) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::cumsum(Tensor self, int dim, *, ScalarType? dtype=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::cumsum.dimname(Tensor self, str dim, *, ScalarType? dtype=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::cumsum.dimname_out(Tensor self, str dim, *, ScalarType? dtype=None, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::cumsum.out(Tensor self, int dim, *, ScalarType? dtype=None, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::cumsum_(Tensor(a!) self, int dim, *, ScalarType? dtype=None) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::cumsum_.dimname(Tensor(a!) self, str dim, *, ScalarType? dtype=None) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::cumulative_trapezoid.dx(Tensor y, *, Scalar dx=1, int dim=-1) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::cumulative_trapezoid.x(Tensor y, Tensor x, *, int dim=-1) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::data(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::deg2rad(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::deg2rad.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::deg2rad_(Tensor(a!) self) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::dense_dim(Tensor self) -> int
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::dequantize.self(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::dequantize.self_out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::dequantize.tensors(Tensor[] tensors) -> Tensor[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::dequantize.tensors_out(Tensor[] tensors, *, Tensor(a!)[] out) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::det(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::detach(Tensor(a) self) -> Tensor(a)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::detach_(Tensor(a!) self) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::detach_copy(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::detach_copy.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::diag(Tensor self, int diagonal=0) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::diag.out(Tensor self, int diagonal=0, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::diag_embed(Tensor self, int offset=0, int dim1=-2, int dim2=-1) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::diag_embed.out(Tensor self, int offset=0, int dim1=-2, int dim2=-1, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::diagflat(Tensor self, int offset=0) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::diagonal(Tensor(a) self, int offset=0, int dim1=0, int dim2=1) -> Tensor(a)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::diagonal.Dimname(Tensor(a) self, *, str outdim, str dim1, str dim2, int offset=0) -> Tensor(a)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::diagonal_backward(Tensor grad_output, SymInt[] input_sizes, int offset, int dim1, int dim2) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::diagonal_backward.out(Tensor grad_output, SymInt[] input_sizes, int offset, int dim1, int dim2, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::diagonal_copy(Tensor self, int offset=0, int dim1=0, int dim2=1) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::diagonal_copy.out(Tensor self, int offset=0, int dim1=0, int dim2=1, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::diagonal_scatter(Tensor self, Tensor src, int offset=0, int dim1=0, int dim2=1) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::diagonal_scatter.out(Tensor self, Tensor src, int offset=0, int dim1=0, int dim2=1, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::diff(Tensor self, int n=1, int dim=-1, Tensor? prepend=None, Tensor? append=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::diff.out(Tensor self, int n=1, int dim=-1, Tensor? prepend=None, Tensor? append=None, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::digamma(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::digamma.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::digamma_(Tensor(a!) self) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::dist(Tensor self, Tensor other, Scalar p=2) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::dist.out(Tensor self, Tensor other, Scalar p=2, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::div.Scalar(Tensor self, Scalar other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::div.Scalar_mode(Tensor self, Scalar other, *, str? rounding_mode) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::div.Scalar_mode_out(Tensor self, Scalar other, *, str? rounding_mode, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::div.Scalar_out(Tensor self, Scalar other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::div.Tensor(Tensor self, Tensor other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::div.Tensor_mode(Tensor self, Tensor other, *, str? rounding_mode) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::div.out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::div.out_mode(Tensor self, Tensor other, *, str? rounding_mode, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::div_.Scalar(Tensor(a!) self, Scalar other) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::div_.Scalar_mode(Tensor(a!) self, Scalar other, *, str? rounding_mode) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::div_.Tensor(Tensor(a!) self, Tensor other) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::div_.Tensor_mode(Tensor(a!) self, Tensor other, *, str? rounding_mode) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::divide.Scalar(Tensor self, Scalar other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::divide.Scalar_mode(Tensor self, Scalar other, *, str? rounding_mode) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::divide.Tensor(Tensor self, Tensor other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::divide.Tensor_mode(Tensor self, Tensor other, *, str? rounding_mode) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::divide.out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::divide.out_mode(Tensor self, Tensor other, *, str? rounding_mode, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::divide_.Scalar(Tensor(a!) self, Scalar other) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::divide_.Scalar_mode(Tensor(a!) self, Scalar other, *, str? rounding_mode) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::divide_.Tensor(Tensor(a!) self, Tensor other) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::divide_.Tensor_mode(Tensor(a!) self, Tensor other, *, str? rounding_mode) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::dot(Tensor self, Tensor tensor) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::dot.out(Tensor self, Tensor tensor, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::dropout(Tensor input, float p, bool train) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::dropout_(Tensor(a!) self, float p, bool train) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::dsplit.array(Tensor(a -> *) self, int[] indices) -> Tensor(a)[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::dsplit.int(Tensor(a -> *) self, int sections) -> Tensor(a)[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::dstack(Tensor[] tensors) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::dstack.out(Tensor[] tensors, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::einsum(str equation, Tensor[] tensors, *, int[]? path=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::elu(Tensor self, Scalar alpha=1, Scalar scale=1, Scalar input_scale=1) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::elu.out(Tensor self, Scalar alpha=1, Scalar scale=1, Scalar input_scale=1, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::elu_(Tensor(a!) self, Scalar alpha=1, Scalar scale=1, Scalar input_scale=1) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::elu_backward(Tensor grad_output, Scalar alpha, Scalar scale, Scalar input_scale, bool is_result, Tensor self_or_result) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::elu_backward.grad_input(Tensor grad_output, Scalar alpha, Scalar scale, Scalar input_scale, bool is_result, Tensor self_or_result, *, Tensor(a!) grad_input) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::embedding(Tensor weight, Tensor indices, SymInt padding_idx=-1, bool scale_grad_by_freq=False, bool sparse=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::embedding.out(Tensor weight, Tensor indices, SymInt padding_idx=-1, bool scale_grad_by_freq=False, bool sparse=False, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::embedding_backward(Tensor grad, Tensor indices, SymInt num_weights, SymInt padding_idx, bool scale_grad_by_freq, bool sparse) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::embedding_bag(Tensor weight, Tensor indices, Tensor offsets, bool scale_grad_by_freq=False, int mode=0, bool sparse=False, Tensor? per_sample_weights=None, bool include_last_offset=False) -> (Tensor, Tensor, Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::embedding_bag.padding_idx(Tensor weight, Tensor indices, Tensor offsets, bool scale_grad_by_freq, int mode, bool sparse, Tensor? per_sample_weights, bool include_last_offset, int? padding_idx) -> (Tensor, Tensor, Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::embedding_dense_backward(Tensor grad_output, Tensor indices, SymInt num_weights, SymInt padding_idx, bool scale_grad_by_freq) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::embedding_dense_backward.out(Tensor grad_output, Tensor indices, SymInt num_weights, SymInt padding_idx, bool scale_grad_by_freq, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::embedding_renorm(Tensor self, Tensor indices, float max_norm, float norm_type) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::embedding_renorm.out(Tensor self, Tensor indices, float max_norm, float norm_type, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::embedding_renorm_(Tensor(a!) self, Tensor indices, float max_norm, float norm_type) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::embedding_sparse_backward(Tensor grad, Tensor indices, int num_weights, int padding_idx, bool scale_grad_by_freq) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::empty.memory_format(SymInt[] size, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None, MemoryFormat? memory_format=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::empty.names(int[] size, *, str[]? names, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None, MemoryFormat? memory_format=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::empty.names_out(int[] size, *, str[]? names, MemoryFormat? memory_format=None, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::empty.out(SymInt[] size, *, MemoryFormat? memory_format=None, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::empty_like(Tensor self, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None, MemoryFormat? memory_format=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::empty_like.out(Tensor self, *, MemoryFormat? memory_format=None, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::empty_quantized(int[] size, Tensor qtensor, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None, MemoryFormat? memory_format=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::empty_quantized.out(int[] size, Tensor qtensor, *, MemoryFormat? memory_format=None, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::empty_strided(SymInt[] size, SymInt[] stride, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::empty_strided.out(SymInt[] size, SymInt[] stride, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::eq.Scalar(Tensor self, Scalar other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::eq.Scalar_out(Tensor self, Scalar other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::eq.Tensor(Tensor self, Tensor other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::eq.Tensor_out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::eq_.Scalar(Tensor(a!) self, Scalar other) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::eq_.Tensor(Tensor(a!) self, Tensor other) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::equal(Tensor self, Tensor other) -> bool
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::erf(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::erf.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::erf_(Tensor(a!) self) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::erfc(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::erfc.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::erfc_(Tensor(a!) self) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::erfinv(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::erfinv.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::erfinv_(Tensor(a!) self) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::exp(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::exp.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::exp2(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::exp2.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::exp2_(Tensor(a!) self) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::exp_(Tensor(a!) self) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::expand(Tensor(a) self, SymInt[] size, *, bool implicit=False) -> Tensor(a)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::expand_as(Tensor(a) self, Tensor other) -> Tensor(a)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::expand_copy(Tensor self, SymInt[] size, *, bool implicit=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::expand_copy.out(Tensor self, SymInt[] size, *, bool implicit=False, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::expm1(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::expm1.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::expm1_(Tensor(a!) self) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::exponential(Tensor self, float lambd=1., *, Generator? generator=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::exponential.out(Tensor self, float lambd=1., *, Generator? generator=None, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::exponential_(Tensor(a!) self, float lambd=1., *, Generator? generator=None) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::eye(int n, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::eye.m(int n, int m, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::eye.m_out(int n, int m, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::eye.out(int n, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::fake_quantize_per_channel_affine(Tensor self, Tensor scale, Tensor zero_point, int axis, int quant_min, int quant_max) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::fake_quantize_per_channel_affine_cachemask(Tensor self, Tensor scale, Tensor zero_point, int axis, int quant_min, int quant_max) -> (Tensor output, Tensor mask)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::fake_quantize_per_channel_affine_cachemask.out(Tensor self, Tensor scale, Tensor zero_point, int axis, int quant_min, int quant_max, *, Tensor(a!) out0, Tensor(b!) out1) -> (Tensor(a!), Tensor(b!))
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::fake_quantize_per_channel_affine_cachemask_backward(Tensor grad, Tensor mask) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::fake_quantize_per_tensor_affine(Tensor self, float scale, int zero_point, int quant_min, int quant_max) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::fake_quantize_per_tensor_affine.tensor_qparams(Tensor self, Tensor scale, Tensor zero_point, int quant_min, int quant_max) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::fake_quantize_per_tensor_affine_cachemask(Tensor self, float scale, int zero_point, int quant_min, int quant_max) -> (Tensor output, Tensor mask)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::fake_quantize_per_tensor_affine_cachemask.out(Tensor self, float scale, int zero_point, int quant_min, int quant_max, *, Tensor(a!) out0, Tensor(b!) out1) -> (Tensor(a!), Tensor(b!))
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::fake_quantize_per_tensor_affine_cachemask_backward(Tensor grad, Tensor mask) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::fbgemm_linear_fp16_weight(Tensor input, Tensor packed_weight, Tensor bias) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::fbgemm_linear_fp16_weight_fp32_activation(Tensor input, Tensor packed_weight, Tensor bias) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::fbgemm_linear_int8_weight(Tensor input, Tensor weight, Tensor packed, Tensor col_offsets, Scalar weight_scale, Scalar weight_zero_point, Tensor bias) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::fbgemm_linear_int8_weight_fp32_activation(Tensor input, Tensor weight, Tensor packed, Tensor col_offsets, Scalar weight_scale, Scalar weight_zero_point, Tensor bias) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::fbgemm_linear_quantize_weight(Tensor input) -> (Tensor, Tensor, float, int)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::fbgemm_pack_gemm_matrix_fp16(Tensor input) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::fbgemm_pack_quantized_matrix(Tensor input) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::fbgemm_pack_quantized_matrix.KN(Tensor input, int K, int N) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::feature_alpha_dropout(Tensor input, float p, bool train) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::feature_alpha_dropout_(Tensor(a!) self, float p, bool train) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::feature_dropout(Tensor input, float p, bool train) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::feature_dropout_(Tensor(a!) self, float p, bool train) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::fft_fft(Tensor self, int? n=None, int dim=-1, str? norm=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::fft_fft.out(Tensor self, int? n=None, int dim=-1, str? norm=None, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::fft_fft2(Tensor self, int[1]? s=None, int[1] dim=[-2, -1], str? norm=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::fft_fft2.out(Tensor self, int[1]? s=None, int[1] dim=[-2, -1], str? norm=None, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::fft_fftfreq(int n, float d=1., *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::fft_fftfreq.out(int n, float d=1., *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::fft_fftn(Tensor self, int[1]? s=None, int[1]? dim=None, str? norm=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::fft_fftn.out(Tensor self, int[1]? s=None, int[1]? dim=None, str? norm=None, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::fft_fftshift(Tensor self, int[1]? dim=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::fft_hfft(Tensor self, int? n=None, int dim=-1, str? norm=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::fft_hfft.out(Tensor self, int? n=None, int dim=-1, str? norm=None, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::fft_hfft2(Tensor self, int[1]? s=None, int[1] dim=[-2, -1], str? norm=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::fft_hfft2.out(Tensor self, int[1]? s=None, int[1] dim=[-2, -1], str? norm=None, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::fft_hfftn(Tensor self, int[1]? s=None, int[1]? dim=None, str? norm=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::fft_hfftn.out(Tensor self, int[1]? s=None, int[1]? dim=None, str? norm=None, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::fft_ifft(Tensor self, int? n=None, int dim=-1, str? norm=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::fft_ifft.out(Tensor self, int? n=None, int dim=-1, str? norm=None, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::fft_ifft2(Tensor self, int[1]? s=None, int[1] dim=[-2, -1], str? norm=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::fft_ifft2.out(Tensor self, int[1]? s=None, int[1] dim=[-2, -1], str? norm=None, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::fft_ifftn(Tensor self, int[1]? s=None, int[1]? dim=None, str? norm=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::fft_ifftn.out(Tensor self, int[1]? s=None, int[1]? dim=None, str? norm=None, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::fft_ifftshift(Tensor self, int[1]? dim=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::fft_ihfft(Tensor self, int? n=None, int dim=-1, str? norm=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::fft_ihfft.out(Tensor self, int? n=None, int dim=-1, str? norm=None, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::fft_ihfft2(Tensor self, int[1]? s=None, int[1] dim=[-2, -1], str? norm=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::fft_ihfft2.out(Tensor self, int[1]? s=None, int[1] dim=[-2, -1], str? norm=None, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::fft_ihfftn(Tensor self, int[1]? s=None, int[1]? dim=None, str? norm=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::fft_ihfftn.out(Tensor self, int[1]? s=None, int[1]? dim=None, str? norm=None, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::fft_irfft(Tensor self, int? n=None, int dim=-1, str? norm=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::fft_irfft.out(Tensor self, int? n=None, int dim=-1, str? norm=None, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::fft_irfft2(Tensor self, int[1]? s=None, int[1] dim=[-2, -1], str? norm=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::fft_irfft2.out(Tensor self, int[1]? s=None, int[1] dim=[-2, -1], str? norm=None, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::fft_irfftn(Tensor self, int[1]? s=None, int[1]? dim=None, str? norm=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::fft_irfftn.out(Tensor self, int[1]? s=None, int[1]? dim=None, str? norm=None, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::fft_rfft(Tensor self, int? n=None, int dim=-1, str? norm=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::fft_rfft.out(Tensor self, int? n=None, int dim=-1, str? norm=None, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::fft_rfft2(Tensor self, int[1]? s=None, int[1] dim=[-2, -1], str? norm=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::fft_rfft2.out(Tensor self, int[1]? s=None, int[1] dim=[-2, -1], str? norm=None, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::fft_rfftfreq(int n, float d=1., *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::fft_rfftfreq.out(int n, float d=1., *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::fft_rfftn(Tensor self, int[1]? s=None, int[1]? dim=None, str? norm=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::fft_rfftn.out(Tensor self, int[1]? s=None, int[1]? dim=None, str? norm=None, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::fill.Scalar(Tensor self, Scalar value) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::fill.Scalar_out(Tensor self, Scalar value, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::fill.Tensor(Tensor self, Tensor value) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::fill.Tensor_out(Tensor self, Tensor value, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::fill_.Scalar(Tensor(a!) self, Scalar value) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::fill_.Tensor(Tensor(a!) self, Tensor value) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::fill_diagonal_(Tensor(a!) self, Scalar fill_value, bool wrap=False) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::fix(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::fix.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::fix_(Tensor(a!) self) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::flatten.DimnameList(Tensor(a) self, str[] dims, str out_dim) -> Tensor(a)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::flatten.named_out_dim(Tensor(a) self, int start_dim, int end_dim, str out_dim) -> Tensor(a)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::flatten.using_ints(Tensor(a) self, int start_dim=0, int end_dim=-1) -> Tensor(a)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::flatten.using_names(Tensor(a) self, str start_dim, str end_dim, str out_dim) -> Tensor(a)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::flatten_dense_tensors(Tensor[] tensors) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::flip(Tensor self, int[] dims) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::flip.out(Tensor self, int[] dims, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::fliplr(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::flipud(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::float_power.Scalar(Scalar self, Tensor exponent) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::float_power.Scalar_out(Scalar self, Tensor exponent, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::float_power.Tensor_Scalar(Tensor self, Scalar exponent) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::float_power.Tensor_Scalar_out(Tensor self, Scalar exponent, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::float_power.Tensor_Tensor(Tensor self, Tensor exponent) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::float_power.Tensor_Tensor_out(Tensor self, Tensor exponent, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::float_power_.Scalar(Tensor(a!) self, Scalar exponent) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::float_power_.Tensor(Tensor(a!) self, Tensor exponent) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::floor(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::floor.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::floor_(Tensor(a!) self) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::floor_divide(Tensor self, Tensor other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::floor_divide.Scalar(Tensor self, Scalar other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::floor_divide.out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::floor_divide_.Scalar(Tensor(a!) self, Scalar other) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::floor_divide_.Tensor(Tensor(a!) self, Tensor other) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::fmax(Tensor self, Tensor other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::fmax.out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::fmin(Tensor self, Tensor other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::fmin.out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::fmod.Scalar(Tensor self, Scalar other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::fmod.Scalar_out(Tensor self, Scalar other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::fmod.Tensor(Tensor self, Tensor other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::fmod.Tensor_out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::fmod_.Scalar(Tensor(a!) self, Scalar other) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::fmod_.Tensor(Tensor(a!) self, Tensor other) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::frac(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::frac.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::frac_(Tensor(a!) self) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::fractional_max_pool2d(Tensor self, int[2] kernel_size, int[2] output_size, Tensor random_samples) -> (Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::fractional_max_pool2d.output(Tensor self, int[2] kernel_size, int[2] output_size, Tensor random_samples, *, Tensor(a!) output, Tensor(b!) indices) -> (Tensor(a!), Tensor(b!))
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::fractional_max_pool2d_backward(Tensor grad_output, Tensor self, int[2] kernel_size, int[2] output_size, Tensor indices) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::fractional_max_pool2d_backward.grad_input(Tensor grad_output, Tensor self, int[2] kernel_size, int[2] output_size, Tensor indices, *, Tensor(a!) grad_input) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::fractional_max_pool3d(Tensor self, int[3] kernel_size, int[3] output_size, Tensor random_samples) -> (Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::fractional_max_pool3d.output(Tensor self, int[3] kernel_size, int[3] output_size, Tensor random_samples, *, Tensor(a!) output, Tensor(b!) indices) -> (Tensor(a!), Tensor(b!))
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::fractional_max_pool3d_backward(Tensor grad_output, Tensor self, int[3] kernel_size, int[3] output_size, Tensor indices) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::fractional_max_pool3d_backward.grad_input(Tensor grad_output, Tensor self, int[3] kernel_size, int[3] output_size, Tensor indices, *, Tensor(a!) grad_input) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::frexp.Tensor(Tensor self) -> (Tensor mantissa, Tensor exponent)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::frexp.Tensor_out(Tensor self, *, Tensor(a!) mantissa, Tensor(b!) exponent) -> (Tensor(a!) mantissa, Tensor(b!) exponent)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::frobenius_norm.dim(Tensor self, int[1] dim, bool keepdim=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::frobenius_norm.out(Tensor self, int[1] dim, bool keepdim=False, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::from_file(str filename, bool? shared=None, int? size=0, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::from_file.out(str filename, bool? shared=None, int? size=0, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::full(SymInt[] size, Scalar fill_value, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::full.names(int[] size, Scalar fill_value, *, str[]? names, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::full.names_out(int[] size, Scalar fill_value, *, str[]? names, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::full.out(SymInt[] size, Scalar fill_value, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::full_like(Tensor self, Scalar fill_value, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None, MemoryFormat? memory_format=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::full_like.out(Tensor self, Scalar fill_value, *, MemoryFormat? memory_format=None, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::fused_moving_avg_obs_fake_quant(Tensor self, Tensor observer_on, Tensor fake_quant_on, Tensor(a!) running_min, Tensor(b!) running_max, Tensor(c!) scale, Tensor(d!) zero_point, float averaging_const, int quant_min, int quant_max, int ch_axis, bool per_row_fake_quant=False, bool symmetric_quant=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::gather(Tensor self, int dim, Tensor index, *, bool sparse_grad=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::gather.dimname(Tensor self, str dim, Tensor index, *, bool sparse_grad=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::gather.dimname_out(Tensor self, str dim, Tensor index, *, bool sparse_grad=False, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::gather.out(Tensor self, int dim, Tensor index, *, bool sparse_grad=False, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::gather_backward(Tensor grad, Tensor self, int dim, Tensor index, bool sparse_grad) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::gcd(Tensor self, Tensor other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::gcd.out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::gcd_(Tensor(a!) self, Tensor other) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::ge.Scalar(Tensor self, Scalar other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::ge.Scalar_out(Tensor self, Scalar other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::ge.Tensor(Tensor self, Tensor other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::ge.Tensor_out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::ge_.Scalar(Tensor(a!) self, Scalar other) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::ge_.Tensor(Tensor(a!) self, Tensor other) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::gelu(Tensor self, *, str approximate="none") -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::gelu.out(Tensor self, *, str approximate="none", Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::gelu_(Tensor(a!) self, *, str approximate="none") -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::gelu_backward(Tensor grad_output, Tensor self, *, str approximate="none") -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::gelu_backward.grad_input(Tensor grad_output, Tensor self, *, str approximate="none", Tensor(a!) grad_input) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::geometric(Tensor self, float p, *, Generator? generator=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::geometric.out(Tensor self, float p, *, Generator? generator=None, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::geometric_(Tensor(a!) self, float p, *, Generator? generator=None) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::geqrf(Tensor self) -> (Tensor a, Tensor tau)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::geqrf.a(Tensor self, *, Tensor(a!) a, Tensor(b!) tau) -> (Tensor(a!) a, Tensor(b!) tau)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::ger(Tensor self, Tensor vec2) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::ger.out(Tensor self, Tensor vec2, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::get_gradients(int context_id) -> Dict(Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::glu(Tensor self, int dim=-1) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::glu.out(Tensor self, int dim=-1, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::glu_backward(Tensor grad_output, Tensor self, int dim) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::glu_backward.grad_input(Tensor grad_output, Tensor self, int dim, *, Tensor(a!) grad_input) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::glu_backward_jvp(Tensor grad_x, Tensor grad_glu, Tensor x, Tensor dgrad_glu, Tensor dx, int dim) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::glu_backward_jvp.out(Tensor grad_x, Tensor grad_glu, Tensor x, Tensor dgrad_glu, Tensor dx, int dim, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::glu_jvp(Tensor glu, Tensor x, Tensor dx, int dim) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::glu_jvp.out(Tensor glu, Tensor x, Tensor dx, int dim, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::gradient.array(Tensor self, *, int[] dim, int edge_order=1) -> Tensor[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::gradient.scalararray(Tensor self, *, Scalar spacing, int[] dim, int edge_order=1) -> Tensor[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::gradient.scalarint(Tensor self, *, Scalar? spacing=None, int? dim=None, int edge_order=1) -> Tensor[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::gradient.scalarrayarray(Tensor self, *, Scalar[] spacing, int[] dim, int edge_order=1) -> Tensor[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::gradient.scalarrayint(Tensor self, *, Scalar[] spacing, int? dim=None, int edge_order=1) -> Tensor[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::gradient.tensorarray(Tensor self, *, Tensor[] spacing, int[] dim, int edge_order=1) -> Tensor[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::gradient.tensorarrayint(Tensor self, *, Tensor[] spacing, int? dim=None, int edge_order=1) -> Tensor[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::greater.Scalar(Tensor self, Scalar other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::greater.Scalar_out(Tensor self, Scalar other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::greater.Tensor(Tensor self, Tensor other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::greater.Tensor_out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::greater_.Scalar(Tensor(a!) self, Scalar other) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::greater_.Tensor(Tensor(a!) self, Tensor other) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::greater_equal.Scalar(Tensor self, Scalar other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::greater_equal.Scalar_out(Tensor self, Scalar other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::greater_equal.Tensor(Tensor self, Tensor other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::greater_equal.Tensor_out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::greater_equal_.Scalar(Tensor(a!) self, Scalar other) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::greater_equal_.Tensor(Tensor(a!) self, Tensor other) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::grid_sampler(Tensor input, Tensor grid, int interpolation_mode, int padding_mode, bool align_corners) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::grid_sampler_2d(Tensor input, Tensor grid, int interpolation_mode, int padding_mode, bool align_corners) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::grid_sampler_2d.out(Tensor input, Tensor grid, int interpolation_mode, int padding_mode, bool align_corners, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::grid_sampler_2d_backward(Tensor grad_output, Tensor input, Tensor grid, int interpolation_mode, int padding_mode, bool align_corners, bool[2] output_mask) -> (Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::grid_sampler_2d_backward.out(Tensor grad_output, Tensor input, Tensor grid, int interpolation_mode, int padding_mode, bool align_corners, bool[2] output_mask, *, Tensor(a!) out0, Tensor(b!) out1) -> (Tensor(a!), Tensor(b!))
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::grid_sampler_3d(Tensor input, Tensor grid, int interpolation_mode, int padding_mode, bool align_corners) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::grid_sampler_3d.out(Tensor input, Tensor grid, int interpolation_mode, int padding_mode, bool align_corners, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::grid_sampler_3d_backward(Tensor grad_output, Tensor input, Tensor grid, int interpolation_mode, int padding_mode, bool align_corners, bool[2] output_mask) -> (Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::grid_sampler_3d_backward.out(Tensor grad_output, Tensor input, Tensor grid, int interpolation_mode, int padding_mode, bool align_corners, bool[2] output_mask, *, Tensor(a!) out0, Tensor(b!) out1) -> (Tensor(a!), Tensor(b!))
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::group_norm(Tensor input, int num_groups, Tensor? weight=None, Tensor? bias=None, float eps=1.0000000000000001e-05, bool cudnn_enabled=True) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::gru.data(Tensor data, Tensor batch_sizes, Tensor hx, Tensor[] params, bool has_biases, int num_layers, float dropout, bool train, bool bidirectional) -> (Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::gru.input(Tensor input, Tensor hx, Tensor[] params, bool has_biases, int num_layers, float dropout, bool train, bool bidirectional, bool batch_first) -> (Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::gru_cell(Tensor input, Tensor hx, Tensor w_ih, Tensor w_hh, Tensor? b_ih=None, Tensor? b_hh=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::gt.Scalar(Tensor self, Scalar other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::gt.Scalar_out(Tensor self, Scalar other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::gt.Tensor(Tensor self, Tensor other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::gt.Tensor_out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::gt_.Scalar(Tensor(a!) self, Scalar other) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::gt_.Tensor(Tensor(a!) self, Tensor other) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::hamming_window(int window_length, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::hamming_window.out(int window_length, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::hamming_window.periodic(int window_length, bool periodic, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::hamming_window.periodic_alpha(int window_length, bool periodic, float alpha, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::hamming_window.periodic_alpha_beta(int window_length, bool periodic, float alpha, float beta, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::hamming_window.periodic_alpha_beta_out(int window_length, bool periodic, float alpha, float beta, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::hamming_window.periodic_alpha_out(int window_length, bool periodic, float alpha, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::hamming_window.periodic_out(int window_length, bool periodic, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::hann_window(int window_length, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::hann_window.out(int window_length, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::hann_window.periodic(int window_length, bool periodic, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::hann_window.periodic_out(int window_length, bool periodic, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::hardshrink(Tensor self, Scalar lambd=0.5) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::hardshrink.out(Tensor self, Scalar lambd=0.5, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::hardshrink_backward(Tensor grad_out, Tensor self, Scalar lambd) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::hardshrink_backward.grad_input(Tensor grad_out, Tensor self, Scalar lambd, *, Tensor(a!) grad_input) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::hardsigmoid(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::hardsigmoid.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::hardsigmoid_(Tensor(a!) self) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::hardsigmoid_backward(Tensor grad_output, Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::hardsigmoid_backward.grad_input(Tensor grad_output, Tensor self, *, Tensor(a!) grad_input) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::hardswish(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::hardswish.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::hardswish_(Tensor(a!) self) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::hardswish_backward(Tensor grad_output, Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::hardswish_backward.out(Tensor grad_output, Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::hardtanh(Tensor self, Scalar min_val=-1, Scalar max_val=1) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::hardtanh.out(Tensor self, Scalar min_val=-1, Scalar max_val=1, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::hardtanh_(Tensor(a!) self, Scalar min_val=-1, Scalar max_val=1) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::hardtanh_backward(Tensor grad_output, Tensor self, Scalar min_val, Scalar max_val) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::hardtanh_backward.grad_input(Tensor grad_output, Tensor self, Scalar min_val, Scalar max_val, *, Tensor(a!) grad_input) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::heaviside(Tensor self, Tensor values) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::heaviside.out(Tensor self, Tensor values, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::heaviside_(Tensor(a!) self, Tensor values) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::hinge_embedding_loss(Tensor self, Tensor target, float margin=1., int reduction=1) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::histc(Tensor self, int bins=100, Scalar min=0, Scalar max=0) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::histc.out(Tensor self, int bins=100, Scalar min=0, Scalar max=0, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::histogram.bin_ct(Tensor self, int bins=100, *, float[]? range=None, Tensor? weight=None, bool density=False) -> (Tensor hist, Tensor bin_edges)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::histogram.bin_ct_out(Tensor self, int bins=100, *, float[]? range=None, Tensor? weight=None, bool density=False, Tensor(a!) hist, Tensor(b!) bin_edges) -> (Tensor(a!) hist, Tensor(b!) bin_edges)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::histogram.bins_tensor(Tensor self, Tensor bins, *, Tensor? weight=None, bool density=False) -> (Tensor hist, Tensor bin_edges)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::histogram.bins_tensor_out(Tensor self, Tensor bins, *, Tensor? weight=None, bool density=False, Tensor(a!) hist, Tensor(b!) bin_edges) -> (Tensor(a!) hist, Tensor(b!) bin_edges)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::histogramdd(Tensor self, int[] bins, float[]? range=None, Tensor? weight=None, bool density=False) -> (Tensor hist, Tensor[] bin_edges)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::histogramdd.TensorList_bins(Tensor self, Tensor[] bins, float[]? range=None, Tensor? weight=None, bool density=False) -> (Tensor hist, Tensor[] bin_edges)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::histogramdd.int_bins(Tensor self, int bins, float[]? range=None, Tensor? weight=None, bool density=False) -> (Tensor hist, Tensor[] bin_edges)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::hsplit.array(Tensor(a -> *) self, int[] indices) -> Tensor(a)[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::hsplit.int(Tensor(a -> *) self, int sections) -> Tensor(a)[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::hspmm(Tensor mat1, Tensor mat2) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::hspmm.out(Tensor mat1, Tensor mat2, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::hstack(Tensor[] tensors) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::hstack.out(Tensor[] tensors, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::huber_loss(Tensor self, Tensor target, int reduction=1, float delta=1.) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::huber_loss.out(Tensor self, Tensor target, int reduction=1, float delta=1., *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::huber_loss_backward(Tensor grad_output, Tensor self, Tensor target, int reduction, float delta) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::huber_loss_backward.out(Tensor grad_output, Tensor self, Tensor target, int reduction, float delta, *, Tensor(a!) grad_input) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::hypot(Tensor self, Tensor other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::hypot.out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::hypot_(Tensor(a!) self, Tensor other) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::i0(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::i0.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::i0_(Tensor(a!) self) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::igamma(Tensor self, Tensor other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::igamma.out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::igamma_(Tensor(a!) self, Tensor other) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::igammac(Tensor self, Tensor other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::igammac.out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::igammac_(Tensor(a!) self, Tensor other) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::im2col(Tensor self, int[2] kernel_size, int[2] dilation, int[2] padding, int[2] stride) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::im2col.out(Tensor self, int[2] kernel_size, int[2] dilation, int[2] padding, int[2] stride, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::imag(Tensor(a) self) -> Tensor(a)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::index.Tensor(Tensor self, Tensor?[] indices) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::index.Tensor_out(Tensor self, Tensor?[] indices, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::index_add(Tensor self, int dim, Tensor index, Tensor source, *, Scalar alpha=1) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::index_add.dimname(Tensor self, str dim, Tensor index, Tensor source, *, Scalar alpha=1) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::index_add.out(Tensor self, int dim, Tensor index, Tensor source, *, Scalar alpha=1, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::index_add_(Tensor(a!) self, int dim, Tensor index, Tensor source, *, Scalar alpha=1) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::index_copy(Tensor self, int dim, Tensor index, Tensor source) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::index_copy.dimname(Tensor self, str dim, Tensor index, Tensor source) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::index_copy.out(Tensor self, int dim, Tensor index, Tensor source, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::index_copy_(Tensor(a!) self, int dim, Tensor index, Tensor source) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::index_copy_.dimname(Tensor(a!) self, str dim, Tensor index, Tensor source) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::index_fill.Dimname_Scalar(Tensor self, str dim, Tensor index, Scalar value) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::index_fill.Dimname_Tensor(Tensor self, str dim, Tensor index, Tensor value) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::index_fill.int_Scalar(Tensor self, int dim, Tensor index, Scalar value) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::index_fill.int_Scalar_out(Tensor self, int dim, Tensor index, Scalar value, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::index_fill.int_Tensor(Tensor self, int dim, Tensor index, Tensor value) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::index_fill.int_Tensor_out(Tensor self, int dim, Tensor index, Tensor value, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::index_fill_.Dimname_Scalar(Tensor(a!) self, str dim, Tensor index, Scalar value) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::index_fill_.Dimname_Tensor(Tensor(a!) self, str dim, Tensor index, Tensor value) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::index_fill_.int_Scalar(Tensor(a!) self, int dim, Tensor index, Scalar value) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::index_fill_.int_Tensor(Tensor(a!) self, int dim, Tensor index, Tensor value) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::index_put(Tensor self, Tensor?[] indices, Tensor values, bool accumulate=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::index_put.out(Tensor self, Tensor?[] indices, Tensor values, bool accumulate=False, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::index_put_(Tensor(a!) self, Tensor?[] indices, Tensor values, bool accumulate=False) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::index_reduce(Tensor self, int dim, Tensor index, Tensor source, str reduce, *, bool include_self=True) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::index_reduce.out(Tensor self, int dim, Tensor index, Tensor source, str reduce, *, bool include_self=True, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::index_reduce_(Tensor(a!) self, int dim, Tensor index, Tensor source, str reduce, *, bool include_self=True) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::index_select(Tensor self, int dim, Tensor index) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::index_select.dimname(Tensor self, str dim, Tensor index) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::index_select.dimname_out(Tensor self, str dim, Tensor index, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::index_select.out(Tensor self, int dim, Tensor index, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::index_select_backward(Tensor grad, SymInt[] self_sizes, int dim, Tensor index) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::indices(Tensor(a) self) -> Tensor(a)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::indices_copy(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::indices_copy.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::infinitely_differentiable_gelu_backward(Tensor grad, Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::inner(Tensor self, Tensor other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::inner.out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::instance_norm(Tensor input, Tensor? weight, Tensor? bias, Tensor? running_mean, Tensor? running_var, bool use_input_stats, float momentum, float eps, bool cudnn_enabled) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::int_repr(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::int_repr.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::inverse(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::inverse.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::is_coalesced(Tensor self) -> bool
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::is_complex(Tensor self) -> bool
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::is_conj(Tensor self) -> bool
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::is_distributed(Tensor self) -> bool
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::is_floating_point(Tensor self) -> bool
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::is_inference(Tensor self) -> bool
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::is_leaf(Tensor self) -> bool
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::is_neg(Tensor self) -> bool
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::is_nonzero(Tensor self) -> bool
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::is_pinned(Tensor self, Device? device=None) -> bool
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::is_same_size(Tensor self, Tensor other) -> bool
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::is_set_to(Tensor self, Tensor tensor) -> bool
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::is_signed(Tensor self) -> bool
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::is_vulkan_available() -> bool
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::isclose(Tensor self, Tensor other, float rtol=1.0000000000000001e-05, float atol=1e-08, bool equal_nan=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::isfinite(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::isin.Scalar_Tensor(Scalar element, Tensor test_elements, *, bool assume_unique=False, bool invert=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::isin.Scalar_Tensor_out(Scalar element, Tensor test_elements, *, bool assume_unique=False, bool invert=False, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::isin.Tensor_Scalar(Tensor elements, Scalar test_element, *, bool assume_unique=False, bool invert=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::isin.Tensor_Scalar_out(Tensor elements, Scalar test_element, *, bool assume_unique=False, bool invert=False, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::isin.Tensor_Tensor(Tensor elements, Tensor test_elements, *, bool assume_unique=False, bool invert=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::isin.Tensor_Tensor_out(Tensor elements, Tensor test_elements, *, bool assume_unique=False, bool invert=False, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::isinf(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::isinf.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::isnan(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::isnan.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::isneginf(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::isneginf.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::isposinf(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::isposinf.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::isreal(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::istft(Tensor self, int n_fft, int? hop_length=None, int? win_length=None, Tensor? window=None, bool center=True, bool normalized=False, bool? onesided=None, int? length=None, bool return_complex=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::item(Tensor self) -> Scalar
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::kaiser_window(int window_length, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::kaiser_window.beta(int window_length, bool periodic, float beta, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::kaiser_window.beta_out(int window_length, bool periodic, float beta, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::kaiser_window.out(int window_length, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::kaiser_window.periodic(int window_length, bool periodic, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::kaiser_window.periodic_out(int window_length, bool periodic, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::kl_div(Tensor self, Tensor target, int reduction=1, *, bool log_target=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::kron(Tensor self, Tensor other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::kron.out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::kthvalue(Tensor self, int k, int dim=-1, bool keepdim=False) -> (Tensor values, Tensor indices)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::kthvalue.dimname(Tensor self, int k, str dim, bool keepdim=False) -> (Tensor values, Tensor indices)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::kthvalue.dimname_out(Tensor self, int k, str dim, bool keepdim=False, *, Tensor(a!) values, Tensor(b!) indices) -> (Tensor(a!) values, Tensor(b!) indices)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::kthvalue.values(Tensor self, int k, int dim=-1, bool keepdim=False, *, Tensor(a!) values, Tensor(b!) indices) -> (Tensor(a!) values, Tensor(b!) indices)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::l1_loss(Tensor self, Tensor target, int reduction=1) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::layer_norm(Tensor input, SymInt[] normalized_shape, Tensor? weight=None, Tensor? bias=None, float eps=1.0000000000000001e-05, bool cudnn_enable=True) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::lcm(Tensor self, Tensor other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::lcm.out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::lcm_(Tensor(a!) self, Tensor other) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::ldexp.Tensor(Tensor self, Tensor other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::ldexp.out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::ldexp_(Tensor(a!) self, Tensor other) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::le.Scalar(Tensor self, Scalar other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::le.Scalar_out(Tensor self, Scalar other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::le.Tensor(Tensor self, Tensor other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::le.Tensor_out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::le_.Scalar(Tensor(a!) self, Scalar other) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::le_.Tensor(Tensor(a!) self, Tensor other) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::leaky_relu(Tensor self, Scalar negative_slope=0.01) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::leaky_relu.out(Tensor self, Scalar negative_slope=0.01, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::leaky_relu_(Tensor(a!) self, Scalar negative_slope=0.01) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::leaky_relu_backward(Tensor grad_output, Tensor self, Scalar negative_slope, bool self_is_result) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::leaky_relu_backward.grad_input(Tensor grad_output, Tensor self, Scalar negative_slope, bool self_is_result, *, Tensor(a!) grad_input) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::lerp.Scalar(Tensor self, Tensor end, Scalar weight) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::lerp.Scalar_out(Tensor self, Tensor end, Scalar weight, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::lerp.Tensor(Tensor self, Tensor end, Tensor weight) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::lerp.Tensor_out(Tensor self, Tensor end, Tensor weight, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::lerp_.Scalar(Tensor(a!) self, Tensor end, Scalar weight) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::lerp_.Tensor(Tensor(a!) self, Tensor end, Tensor weight) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::less.Scalar(Tensor self, Scalar other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::less.Scalar_out(Tensor self, Scalar other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::less.Tensor(Tensor self, Tensor other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::less.Tensor_out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::less_.Scalar(Tensor(a!) self, Scalar other) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::less_.Tensor(Tensor(a!) self, Tensor other) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::less_equal.Scalar(Tensor self, Scalar other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::less_equal.Scalar_out(Tensor self, Scalar other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::less_equal.Tensor(Tensor self, Tensor other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::less_equal.Tensor_out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::less_equal_.Scalar(Tensor(a!) self, Scalar other) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::less_equal_.Tensor(Tensor(a!) self, Tensor other) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::lgamma(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::lgamma.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::lgamma_(Tensor(a!) self) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::lift(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::lift.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::lift_fresh(Tensor(a) self) -> Tensor(a)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::lift_fresh_copy(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::lift_fresh_copy.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_cholesky(Tensor self, *, bool upper=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_cholesky.out(Tensor self, *, bool upper=False, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_cholesky_ex(Tensor self, *, bool upper=False, bool check_errors=False) -> (Tensor L, Tensor info)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_cholesky_ex.L(Tensor self, *, bool upper=False, bool check_errors=False, Tensor(a!) L, Tensor(b!) info) -> (Tensor(a!) L, Tensor(b!) info)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_cond(Tensor self, Scalar? p=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_cond.out(Tensor self, Scalar? p=None, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_cond.p_str(Tensor self, str p) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_cond.p_str_out(Tensor self, str p, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_cross(Tensor self, Tensor other, *, int dim=-1) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_cross.out(Tensor self, Tensor other, *, int dim=-1, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_det(Tensor A) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_det.out(Tensor A, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_diagonal(Tensor(a) A, *, int offset=0, int dim1=-2, int dim2=-1) -> Tensor(a)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_eig(Tensor self) -> (Tensor eigenvalues, Tensor eigenvectors)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_eig.out(Tensor self, *, Tensor(a!) eigenvalues, Tensor(b!) eigenvectors) -> (Tensor(a!) eigenvalues, Tensor(b!) eigenvectors)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_eigh(Tensor self, str UPLO="L") -> (Tensor eigenvalues, Tensor eigenvectors)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_eigh.eigvals(Tensor self, str UPLO="L", *, Tensor(a!) eigvals, Tensor(b!) eigvecs) -> (Tensor(a!) eigenvalues, Tensor(b!) eigenvectors)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_eigvals(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_eigvals.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_eigvalsh(Tensor self, str UPLO="L") -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_eigvalsh.out(Tensor self, str UPLO="L", *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_householder_product(Tensor input, Tensor tau) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_householder_product.out(Tensor input, Tensor tau, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_inv(Tensor A) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_inv.out(Tensor A, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_inv_ex(Tensor A, *, bool check_errors=False) -> (Tensor inverse, Tensor info)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_inv_ex.inverse(Tensor A, *, bool check_errors=False, Tensor(a!) inverse, Tensor(b!) info) -> (Tensor(a!) inverse, Tensor(b!) info)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_ldl_factor(Tensor self, *, bool hermitian=False) -> (Tensor LD, Tensor pivots)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_ldl_factor.out(Tensor self, *, bool hermitian=False, Tensor(a!) LD, Tensor(b!) pivots) -> (Tensor(a!) LD, Tensor(b!) pivots)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_ldl_factor_ex(Tensor self, *, bool hermitian=False, bool check_errors=False) -> (Tensor LD, Tensor pivots, Tensor info)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_ldl_factor_ex.out(Tensor self, *, bool hermitian=False, bool check_errors=False, Tensor(a!) LD, Tensor(b!) pivots, Tensor(c!) info) -> (Tensor(a!) LD, Tensor(b!) pivots, Tensor(c!) info)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_ldl_solve(Tensor LD, Tensor pivots, Tensor B, *, bool hermitian=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_ldl_solve.out(Tensor LD, Tensor pivots, Tensor B, *, bool hermitian=False, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_lstsq(Tensor self, Tensor b, float? rcond=None, *, str? driver=None) -> (Tensor solution, Tensor residuals, Tensor rank, Tensor singular_values)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_lstsq.out(Tensor self, Tensor b, float? rcond=None, *, str? driver=None, Tensor(a!) solution, Tensor(b!) residuals, Tensor(c!) rank, Tensor(d!) singular_values) -> (Tensor(a!) solution, Tensor(b!) residuals, Tensor(c!) rank, Tensor(d!) singular_values)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_lu(Tensor A, *, bool pivot=True) -> (Tensor P, Tensor L, Tensor U)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_lu.out(Tensor A, *, bool pivot=True, Tensor(a!) P, Tensor(b!) L, Tensor(c!) U) -> (Tensor(a!) P, Tensor(b!) L, Tensor(c!) U)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_lu_factor(Tensor A, *, bool pivot=True) -> (Tensor LU, Tensor pivots)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_lu_factor.out(Tensor A, *, bool pivot=True, Tensor(a!) LU, Tensor(b!) pivots) -> (Tensor(a!) LU, Tensor(b!) pivots)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_lu_factor_ex(Tensor A, *, bool pivot=True, bool check_errors=False) -> (Tensor LU, Tensor pivots, Tensor info)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_lu_factor_ex.out(Tensor A, *, bool pivot=True, bool check_errors=False, Tensor(a!) LU, Tensor(b!) pivots, Tensor(c!) info) -> (Tensor(a!) LU, Tensor(b!) pivots, Tensor(c!) info)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_lu_solve(Tensor LU, Tensor pivots, Tensor B, *, bool left=True, bool adjoint=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_lu_solve.out(Tensor LU, Tensor pivots, Tensor B, *, bool left=True, bool adjoint=False, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_matmul(Tensor self, Tensor other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_matmul.out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_matrix_exp(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_matrix_exp.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_matrix_norm(Tensor self, Scalar ord, int[] dim=[-2, -1], bool keepdim=False, *, ScalarType? dtype=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_matrix_norm.out(Tensor self, Scalar ord, int[] dim=[-2, -1], bool keepdim=False, *, ScalarType? dtype=None, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_matrix_norm.str_ord(Tensor self, str ord="fro", int[] dim=[-2, -1], bool keepdim=False, *, ScalarType? dtype=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_matrix_norm.str_ord_out(Tensor self, str ord="fro", int[] dim=[-2, -1], bool keepdim=False, *, ScalarType? dtype=None, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_matrix_power(Tensor self, int n) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_matrix_power.out(Tensor self, int n, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_matrix_rank(Tensor self, float tol, bool hermitian=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_matrix_rank.atol_rtol_float(Tensor self, *, float? atol=None, float? rtol=None, bool hermitian=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_matrix_rank.atol_rtol_float_out(Tensor self, *, float? atol=None, float? rtol=None, bool hermitian=False, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_matrix_rank.atol_rtol_tensor(Tensor input, *, Tensor? atol=None, Tensor? rtol=None, bool hermitian=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_matrix_rank.atol_rtol_tensor_out(Tensor input, *, Tensor? atol=None, Tensor? rtol=None, bool hermitian=False, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_matrix_rank.out(Tensor self, float tol, bool hermitian=False, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_matrix_rank.out_tol_tensor(Tensor input, Tensor tol, bool hermitian=False, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_matrix_rank.tol_tensor(Tensor input, Tensor tol, bool hermitian=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_multi_dot(Tensor[] tensors) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_multi_dot.out(Tensor[] tensors, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_norm(Tensor self, Scalar? ord=None, int[1]? dim=None, bool keepdim=False, *, ScalarType? dtype=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_norm.ord_str(Tensor self, str ord, int[1]? dim=None, bool keepdim=False, *, ScalarType? dtype=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_norm.ord_str_out(Tensor self, str ord, int[1]? dim=None, bool keepdim=False, *, ScalarType? dtype=None, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_norm.out(Tensor self, Scalar? ord=None, int[1]? dim=None, bool keepdim=False, *, ScalarType? dtype=None, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_pinv(Tensor self, float rcond, bool hermitian=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_pinv.atol_rtol_float(Tensor self, *, float? atol=None, float? rtol=None, bool hermitian=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_pinv.atol_rtol_float_out(Tensor self, *, float? atol=None, float? rtol=None, bool hermitian=False, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_pinv.atol_rtol_tensor(Tensor self, *, Tensor? atol=None, Tensor? rtol=None, bool hermitian=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_pinv.atol_rtol_tensor_out(Tensor self, *, Tensor? atol=None, Tensor? rtol=None, bool hermitian=False, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_pinv.out(Tensor self, float rcond, bool hermitian=False, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_pinv.out_rcond_tensor(Tensor self, Tensor rcond, bool hermitian=False, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_pinv.rcond_tensor(Tensor self, Tensor rcond, bool hermitian=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_qr(Tensor A, str mode="reduced") -> (Tensor Q, Tensor R)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_qr.out(Tensor A, str mode="reduced", *, Tensor(a!) Q, Tensor(b!) R) -> (Tensor(a!) Q, Tensor(b!) R)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_slogdet(Tensor A) -> (Tensor sign, Tensor logabsdet)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_slogdet.out(Tensor A, *, Tensor(a!) sign, Tensor(b!) logabsdet) -> (Tensor(a!) sign, Tensor(b!) logabsdet)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_solve(Tensor A, Tensor B, *, bool left=True) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_solve.out(Tensor A, Tensor B, *, bool left=True, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_solve_ex(Tensor A, Tensor B, *, bool left=True, bool check_errors=False) -> (Tensor result, Tensor info)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_solve_ex.out(Tensor A, Tensor B, *, bool left=True, bool check_errors=False, Tensor(a!) result, Tensor(b!) info) -> (Tensor(a!) result, Tensor(b!) info)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_solve_triangular(Tensor self, Tensor B, *, bool upper, bool left=True, bool unitriangular=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_solve_triangular.out(Tensor self, Tensor B, *, bool upper, bool left=True, bool unitriangular=False, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_svd(Tensor A, bool full_matrices=True, *, str? driver=None) -> (Tensor U, Tensor S, Tensor Vh)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_svd.U(Tensor A, bool full_matrices=True, *, str? driver=None, Tensor(a!) U, Tensor(b!) S, Tensor(c!) Vh) -> (Tensor(a!) U, Tensor(b!) S, Tensor(c!) Vh)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_svdvals(Tensor A, *, str? driver=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_svdvals.out(Tensor A, *, str? driver=None, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_tensorinv(Tensor self, int ind=2) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_tensorinv.out(Tensor self, int ind=2, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_tensorsolve(Tensor self, Tensor other, int[]? dims=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_tensorsolve.out(Tensor self, Tensor other, int[]? dims=None, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_vander(Tensor x, *, int? N=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_vecdot(Tensor x, Tensor y, *, int dim=-1) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_vecdot.out(Tensor x, Tensor y, *, int dim=-1, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_vector_norm(Tensor self, Scalar ord=2, int[1]? dim=None, bool keepdim=False, *, ScalarType? dtype=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linalg_vector_norm.out(Tensor self, Scalar ord=2, int[1]? dim=None, bool keepdim=False, *, ScalarType? dtype=None, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linear(Tensor input, Tensor weight, Tensor? bias=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linear.out(Tensor input, Tensor weight, Tensor? bias=None, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linear_backward(Tensor self, Tensor grad_output, Tensor weight, bool[3] output_mask) -> (Tensor, Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linear_backward.out(Tensor self, Tensor grad_output, Tensor weight, bool[3] output_mask, *, Tensor(a!) out0, Tensor(b!) out1, Tensor(c!) out2) -> (Tensor(a!), Tensor(b!), Tensor(c!))
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linspace(Scalar start, Scalar end, int steps, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::linspace.out(Scalar start, Scalar end, int steps, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::log(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::log.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::log10(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::log10.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::log10_(Tensor(a!) self) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::log1p(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::log1p.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::log1p_(Tensor(a!) self) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::log2(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::log2.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::log2_(Tensor(a!) self) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::log_(Tensor(a!) self) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::log_normal(Tensor self, float mean=1., float std=2., *, Generator? generator=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::log_normal.out(Tensor self, float mean=1., float std=2., *, Generator? generator=None, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::log_normal_(Tensor(a!) self, float mean=1., float std=2., *, Generator? generator=None) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::log_sigmoid(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::log_sigmoid.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::log_sigmoid_backward(Tensor grad_output, Tensor self, Tensor buffer) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::log_sigmoid_backward.grad_input(Tensor grad_output, Tensor self, Tensor buffer, *, Tensor(a!) grad_input) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::log_sigmoid_forward(Tensor self) -> (Tensor output, Tensor buffer)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::log_sigmoid_forward.output(Tensor self, *, Tensor(a!) output, Tensor(b!) buffer) -> (Tensor(a!), Tensor(b!))
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::log_softmax.Dimname(Tensor self, str dim, *, ScalarType? dtype=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::log_softmax.int(Tensor self, int dim, ScalarType? dtype=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::log_softmax.int_out(Tensor self, int dim, ScalarType? dtype=None, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::logaddexp(Tensor self, Tensor other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::logaddexp.out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::logaddexp2(Tensor self, Tensor other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::logaddexp2.out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::logcumsumexp(Tensor self, int dim) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::logcumsumexp.dimname(Tensor self, str dim) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::logcumsumexp.dimname_out(Tensor self, str dim, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::logcumsumexp.out(Tensor self, int dim, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::logdet(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::logical_and(Tensor self, Tensor other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::logical_and.out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::logical_and_(Tensor(a!) self, Tensor other) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::logical_not(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::logical_not.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::logical_not_(Tensor(a!) self) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::logical_or(Tensor self, Tensor other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::logical_or.out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::logical_or_(Tensor(a!) self, Tensor other) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::logical_xor(Tensor self, Tensor other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::logical_xor.out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::logical_xor_(Tensor(a!) self, Tensor other) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::logit(Tensor self, float? eps=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::logit.out(Tensor self, float? eps=None, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::logit_(Tensor(a!) self, float? eps=None) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::logit_backward(Tensor grad_output, Tensor self, float? eps=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::logit_backward.grad_input(Tensor grad_output, Tensor self, float? eps=None, *, Tensor(a!) grad_input) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::logspace(Scalar start, Scalar end, int steps, float base=10., *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::logspace.out(Scalar start, Scalar end, int steps, float base=10., *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::logsumexp(Tensor self, int[1] dim, bool keepdim=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::logsumexp.names(Tensor self, str[1] dim, bool keepdim=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::logsumexp.names_out(Tensor self, str[1] dim, bool keepdim=False, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::logsumexp.out(Tensor self, int[1] dim, bool keepdim=False, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::lstm.data(Tensor data, Tensor batch_sizes, Tensor[] hx, Tensor[] params, bool has_biases, int num_layers, float dropout, bool train, bool bidirectional) -> (Tensor, Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::lstm.input(Tensor input, Tensor[] hx, Tensor[] params, bool has_biases, int num_layers, float dropout, bool train, bool bidirectional, bool batch_first) -> (Tensor, Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::lstm_cell(Tensor input, Tensor[] hx, Tensor w_ih, Tensor w_hh, Tensor? b_ih=None, Tensor? b_hh=None) -> (Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::lstm_mps_backward(Tensor grad_y, Tensor? grad_hy, Tensor? grad_cy, Tensor z_state, Tensor cell_state_fwd, Tensor input, Tensor layersOutputs, Tensor[] hx, Tensor[] params, bool has_biases, int num_layers, float dropout, bool train, bool bidirectional, bool batch_first) -> (Tensor, Tensor[], Tensor[])
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::lstm_mps_backward.out(Tensor grad_y, Tensor? grad_hy, Tensor? grad_cy, Tensor z_state, Tensor cell_state_fwd, Tensor input, Tensor layersOutputs, Tensor[] hx, Tensor[] params, bool has_biases, int num_layers, float dropout, bool train, bool bidirectional, bool batch_first, *, Tensor(a!) out0, Tensor(b!)[] out1, Tensor(c!)[] out2) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::lt.Scalar(Tensor self, Scalar other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::lt.Scalar_out(Tensor self, Scalar other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::lt.Tensor(Tensor self, Tensor other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::lt.Tensor_out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::lt_.Scalar(Tensor(a!) self, Scalar other) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::lt_.Tensor(Tensor(a!) self, Tensor other) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::lu_solve(Tensor self, Tensor LU_data, Tensor LU_pivots) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::lu_solve.out(Tensor self, Tensor LU_data, Tensor LU_pivots, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::lu_unpack(Tensor LU_data, Tensor LU_pivots, bool unpack_data=True, bool unpack_pivots=True) -> (Tensor P, Tensor L, Tensor U)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::lu_unpack.out(Tensor LU_data, Tensor LU_pivots, bool unpack_data=True, bool unpack_pivots=True, *, Tensor(a!) P, Tensor(b!) L, Tensor(c!) U) -> (Tensor(a!) P, Tensor(b!) L, Tensor(c!) U)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::mH(Tensor(a) self) -> Tensor(a)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::mT(Tensor(a) self) -> Tensor(a)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::margin_ranking_loss(Tensor input1, Tensor input2, Tensor target, float margin=0., int reduction=1) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::masked_fill.Scalar(Tensor self, Tensor mask, Scalar value) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::masked_fill.Scalar_out(Tensor self, Tensor mask, Scalar value, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::masked_fill.Tensor(Tensor self, Tensor mask, Tensor value) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::masked_fill.Tensor_out(Tensor self, Tensor mask, Tensor value, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::masked_fill_.Scalar(Tensor(a!) self, Tensor mask, Scalar value) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::masked_fill_.Tensor(Tensor(a!) self, Tensor mask, Tensor value) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::masked_scatter(Tensor self, Tensor mask, Tensor source) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::masked_scatter.out(Tensor self, Tensor mask, Tensor source, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::masked_scatter_(Tensor(a!) self, Tensor mask, Tensor source) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::masked_select(Tensor self, Tensor mask) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::masked_select.out(Tensor self, Tensor mask, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::masked_select_backward(Tensor grad, Tensor input, Tensor mask) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::matmul(Tensor self, Tensor other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::matmul.out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::matmul_backward(Tensor grad, Tensor self, Tensor other, bool[2] mask) -> (Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::matmul_backward.out(Tensor grad, Tensor self, Tensor other, bool[2] mask, *, Tensor(a!) out0, Tensor(b!) out1) -> (Tensor(a!), Tensor(b!))
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::matrix_H(Tensor(a) self) -> Tensor(a)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::matrix_exp(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::matrix_exp_backward(Tensor self, Tensor grad) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::matrix_power(Tensor self, int n) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::matrix_power.out(Tensor self, int n, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::max(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::max.dim(Tensor self, int dim, bool keepdim=False) -> (Tensor values, Tensor indices)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::max.dim_max(Tensor self, int dim, bool keepdim=False, *, Tensor(a!) max, Tensor(b!) max_values) -> (Tensor(a!) values, Tensor(b!) indices)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::max.names_dim(Tensor self, str dim, bool keepdim=False) -> (Tensor values, Tensor indices)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::max.names_dim_max(Tensor self, str dim, bool keepdim=False, *, Tensor(a!) max, Tensor(b!) max_values) -> (Tensor(a!) values, Tensor(b!) indices)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::max.other(Tensor self, Tensor other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::max.out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::max.unary_out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::max_pool1d(Tensor self, int[1] kernel_size, int[1] stride=[], int[1] padding=[0], int[1] dilation=[1], bool ceil_mode=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::max_pool1d_with_indices(Tensor self, int[1] kernel_size, int[1] stride=[], int[1] padding=[0], int[1] dilation=[1], bool ceil_mode=False) -> (Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::max_pool2d(Tensor self, int[2] kernel_size, int[2] stride=[], int[2] padding=0, int[2] dilation=1, bool ceil_mode=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::max_pool2d_backward(Tensor grad_output, Tensor self, int[2] kernel_size, int[2] stride=[], int[2] padding=0, int[2] dilation=1, bool ceil_mode=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::max_pool2d_backward.out(Tensor grad_output, Tensor self, int[2] kernel_size, int[2] stride=[], int[2] padding=0, int[2] dilation=1, bool ceil_mode=False, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::max_pool2d_with_indices(Tensor self, int[2] kernel_size, int[2] stride=[], int[2] padding=0, int[2] dilation=1, bool ceil_mode=False) -> (Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::max_pool2d_with_indices.out(Tensor self, int[2] kernel_size, int[2] stride=[], int[2] padding=0, int[2] dilation=1, bool ceil_mode=False, *, Tensor(a!) out, Tensor(b!) indices) -> (Tensor(a!), Tensor(b!))
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::max_pool2d_with_indices_backward(Tensor grad_output, Tensor self, int[2] kernel_size, int[2] stride, int[2] padding, int[2] dilation, bool ceil_mode, Tensor indices) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::max_pool2d_with_indices_backward.grad_input(Tensor grad_output, Tensor self, int[2] kernel_size, int[2] stride, int[2] padding, int[2] dilation, bool ceil_mode, Tensor indices, *, Tensor(a!) grad_input) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::max_pool3d(Tensor self, int[3] kernel_size, int[3] stride=[], int[3] padding=0, int[3] dilation=1, bool ceil_mode=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::max_pool3d_with_indices(Tensor self, int[3] kernel_size, int[3] stride=[], int[3] padding=0, int[3] dilation=1, bool ceil_mode=False) -> (Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::max_pool3d_with_indices.out(Tensor self, int[3] kernel_size, int[3] stride=[], int[3] padding=0, int[3] dilation=1, bool ceil_mode=False, *, Tensor(a!) out, Tensor(b!) indices) -> (Tensor(a!), Tensor(b!))
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::max_pool3d_with_indices_backward(Tensor grad_output, Tensor self, int[3] kernel_size, int[3] stride, int[3] padding, int[3] dilation, bool ceil_mode, Tensor indices) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::max_pool3d_with_indices_backward.grad_input(Tensor grad_output, Tensor self, int[3] kernel_size, int[3] stride, int[3] padding, int[3] dilation, bool ceil_mode, Tensor indices, *, Tensor(a!) grad_input) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::max_unpool2d(Tensor self, Tensor indices, int[2] output_size) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::max_unpool2d.out(Tensor self, Tensor indices, int[2] output_size, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::max_unpool3d(Tensor self, Tensor indices, int[3] output_size, int[3] stride, int[3] padding) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::max_unpool3d.out(Tensor self, Tensor indices, int[3] output_size, int[3] stride, int[3] padding, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::maximum(Tensor self, Tensor other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::maximum.out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::mean(Tensor self, *, ScalarType? dtype=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::mean.dim(Tensor self, int[1]? dim, bool keepdim=False, *, ScalarType? dtype=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::mean.names_dim(Tensor self, str[1] dim, bool keepdim=False, *, ScalarType? dtype=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::mean.names_out(Tensor self, str[1] dim, bool keepdim=False, *, ScalarType? dtype=None, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::mean.out(Tensor self, int[1]? dim, bool keepdim=False, *, ScalarType? dtype=None, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::median(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::median.dim(Tensor self, int dim, bool keepdim=False) -> (Tensor values, Tensor indices)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::median.dim_values(Tensor self, int dim, bool keepdim=False, *, Tensor(a!) values, Tensor(b!) indices) -> (Tensor(a!) values, Tensor(b!) indices)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::median.names_dim(Tensor self, str dim, bool keepdim=False) -> (Tensor values, Tensor indices)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::median.names_dim_values(Tensor self, str dim, bool keepdim=False, *, Tensor(a!) values, Tensor(b!) indices) -> (Tensor(a!) values, Tensor(b!) indices)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::median.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::meshgrid(Tensor[] tensors) -> Tensor[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::meshgrid.indexing(Tensor[] tensors, *, str indexing) -> Tensor[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::min(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::min.dim(Tensor self, int dim, bool keepdim=False) -> (Tensor values, Tensor indices)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::min.dim_min(Tensor self, int dim, bool keepdim=False, *, Tensor(a!) min, Tensor(b!) min_indices) -> (Tensor(a!) values, Tensor(b!) indices)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::min.names_dim(Tensor self, str dim, bool keepdim=False) -> (Tensor values, Tensor indices)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::min.names_dim_min(Tensor self, str dim, bool keepdim=False, *, Tensor(a!) min, Tensor(b!) min_indices) -> (Tensor(a!) values, Tensor(b!) indices)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::min.other(Tensor self, Tensor other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::min.out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::minimum(Tensor self, Tensor other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::minimum.out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::miopen_batch_norm(Tensor input, Tensor weight, Tensor? bias, Tensor? running_mean, Tensor? running_var, bool training, float exponential_average_factor, float epsilon) -> (Tensor, Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::miopen_batch_norm.out(Tensor input, Tensor weight, Tensor? bias, Tensor? running_mean, Tensor? running_var, bool training, float exponential_average_factor, float epsilon, *, Tensor(a!) out0, Tensor(b!) out1, Tensor(c!) out2) -> (Tensor(a!), Tensor(b!), Tensor(c!))
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::miopen_batch_norm_backward(Tensor input, Tensor grad_output, Tensor weight, Tensor? running_mean, Tensor? running_var, Tensor? save_mean, Tensor? save_var, float epsilon) -> (Tensor, Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::miopen_batch_norm_backward.out(Tensor input, Tensor grad_output, Tensor weight, Tensor? running_mean, Tensor? running_var, Tensor? save_mean, Tensor? save_var, float epsilon, *, Tensor(a!) out0, Tensor(b!) out1, Tensor(c!) out2) -> (Tensor(a!), Tensor(b!), Tensor(c!))
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::miopen_convolution(Tensor self, Tensor weight, Tensor? bias, SymInt[] padding, int[] stride, int[] dilation, int groups, bool benchmark, bool deterministic) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::miopen_convolution.out(Tensor self, Tensor weight, Tensor? bias, SymInt[] padding, int[] stride, int[] dilation, int groups, bool benchmark, bool deterministic, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::miopen_convolution_add_relu(Tensor self, Tensor weight, Tensor z, Scalar? alpha, Tensor? bias, int[] stride, int[] padding, int[] dilation, int groups) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::miopen_convolution_relu(Tensor self, Tensor weight, Tensor? bias, int[] stride, int[] padding, int[] dilation, int groups) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::miopen_convolution_transpose(Tensor self, Tensor weight, Tensor? bias, SymInt[] padding, SymInt[] output_padding, int[] stride, int[] dilation, int groups, bool benchmark, bool deterministic) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::miopen_convolution_transpose.out(Tensor self, Tensor weight, Tensor? bias, SymInt[] padding, SymInt[] output_padding, int[] stride, int[] dilation, int groups, bool benchmark, bool deterministic, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::miopen_depthwise_convolution(Tensor self, Tensor weight, Tensor? bias, SymInt[] padding, int[] stride, int[] dilation, int groups, bool benchmark, bool deterministic) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::miopen_depthwise_convolution.out(Tensor self, Tensor weight, Tensor? bias, SymInt[] padding, int[] stride, int[] dilation, int groups, bool benchmark, bool deterministic, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::miopen_rnn(Tensor input, Tensor[] weight, int weight_stride0, Tensor hx, Tensor? cx, int mode, int hidden_size, int num_layers, bool batch_first, float dropout, bool train, bool bidirectional, int[] batch_sizes, Tensor? dropout_state) -> (Tensor, Tensor, Tensor, Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::miopen_rnn.out(Tensor input, Tensor[] weight, int weight_stride0, Tensor hx, Tensor? cx, int mode, int hidden_size, int num_layers, bool batch_first, float dropout, bool train, bool bidirectional, int[] batch_sizes, Tensor? dropout_state, *, Tensor(a!) out0, Tensor(b!) out1, Tensor(c!) out2, Tensor(d!) out3, Tensor(e!) out4) -> (Tensor(a!), Tensor(b!), Tensor(c!), Tensor(d!), Tensor(e!))
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::miopen_rnn_backward(Tensor input, Tensor[] weight, int weight_stride0, Tensor weight_buf, Tensor hx, Tensor? cx, Tensor output, Tensor? grad_output, Tensor? grad_hy, Tensor? grad_cy, int mode, int hidden_size, int num_layers, bool batch_first, float dropout, bool train, bool bidirectional, int[] batch_sizes, Tensor? dropout_state, Tensor reserve, bool[4] output_mask) -> (Tensor, Tensor, Tensor, Tensor[])
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::miopen_rnn_backward.out(Tensor input, Tensor[] weight, int weight_stride0, Tensor weight_buf, Tensor hx, Tensor? cx, Tensor output, Tensor? grad_output, Tensor? grad_hy, Tensor? grad_cy, int mode, int hidden_size, int num_layers, bool batch_first, float dropout, bool train, bool bidirectional, int[] batch_sizes, Tensor? dropout_state, Tensor reserve, bool[4] output_mask, *, Tensor(a!) out0, Tensor(b!) out1, Tensor(c!) out2, Tensor(d!)[] out3) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::mish(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::mish.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::mish_(Tensor(a!) self) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::mish_backward(Tensor grad_output, Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::mkldnn_adaptive_avg_pool2d(Tensor self, int[2] output_size) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::mkldnn_adaptive_avg_pool2d.out(Tensor self, int[2] output_size, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::mkldnn_adaptive_avg_pool2d_backward(Tensor grad_output, Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::mkldnn_adaptive_avg_pool2d_backward.out(Tensor grad_output, Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::mkldnn_convolution(Tensor self, Tensor weight, Tensor? bias, SymInt[] padding, int[] stride, int[] dilation, int groups) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::mkldnn_convolution.out(Tensor self, Tensor weight, Tensor? bias, SymInt[] padding, int[] stride, int[] dilation, int groups, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::mkldnn_linear(Tensor self, Tensor weight, Tensor? bias=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::mkldnn_linear.out(Tensor self, Tensor weight, Tensor? bias=None, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::mkldnn_linear_backward(Tensor self, Tensor grad_output, Tensor weight, bool[3] output_mask) -> (Tensor, Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::mkldnn_linear_backward.out(Tensor self, Tensor grad_output, Tensor weight, bool[3] output_mask, *, Tensor(a!) out0, Tensor(b!) out1, Tensor(c!) out2) -> (Tensor(a!), Tensor(b!), Tensor(c!))
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::mkldnn_linear_backward_input(int[] input_size, Tensor grad_output, Tensor weight) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::mkldnn_linear_backward_input.out(int[] input_size, Tensor grad_output, Tensor weight, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::mkldnn_linear_backward_weights(Tensor grad_output, Tensor input, Tensor weight, bool bias_defined) -> (Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::mkldnn_linear_backward_weights.out(Tensor grad_output, Tensor input, Tensor weight, bool bias_defined, *, Tensor(a!) out0, Tensor(b!) out1) -> (Tensor(a!), Tensor(b!))
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::mkldnn_max_pool2d(Tensor self, int[2] kernel_size, int[2] stride=[], int[2] padding=0, int[2] dilation=1, bool ceil_mode=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::mkldnn_max_pool2d.out(Tensor self, int[2] kernel_size, int[2] stride=[], int[2] padding=0, int[2] dilation=1, bool ceil_mode=False, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::mkldnn_max_pool2d_backward(Tensor grad_output, Tensor output, Tensor input, int[2] kernel_size, int[2] stride=[], int[2] padding=0, int[2] dilation=1, bool ceil_mode=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::mkldnn_max_pool2d_backward.out(Tensor grad_output, Tensor output, Tensor input, int[2] kernel_size, int[2] stride=[], int[2] padding=0, int[2] dilation=1, bool ceil_mode=False, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::mkldnn_max_pool3d(Tensor self, int[3] kernel_size, int[3] stride=[], int[3] padding=0, int[3] dilation=1, bool ceil_mode=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::mkldnn_max_pool3d.out(Tensor self, int[3] kernel_size, int[3] stride=[], int[3] padding=0, int[3] dilation=1, bool ceil_mode=False, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::mkldnn_max_pool3d_backward(Tensor grad_output, Tensor output, Tensor input, int[3] kernel_size, int[3] stride=[], int[3] padding=0, int[3] dilation=1, bool ceil_mode=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::mkldnn_max_pool3d_backward.out(Tensor grad_output, Tensor output, Tensor input, int[3] kernel_size, int[3] stride=[], int[3] padding=0, int[3] dilation=1, bool ceil_mode=False, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::mkldnn_reorder_conv2d_weight(Tensor self, int[2] padding=0, int[2] stride=1, int[2] dilation=1, int groups=1, int[]? input_size=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::mkldnn_reorder_conv2d_weight.out(Tensor self, int[2] padding=0, int[2] stride=1, int[2] dilation=1, int groups=1, int[]? input_size=None, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::mkldnn_reorder_conv3d_weight(Tensor self, int[3] padding=0, int[3] stride=1, int[3] dilation=1, int groups=1) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::mkldnn_reorder_conv3d_weight.out(Tensor self, int[3] padding=0, int[3] stride=1, int[3] dilation=1, int groups=1, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::mkldnn_rnn_layer(Tensor input, Tensor weight0, Tensor weight1, Tensor weight2, Tensor weight3, Tensor hx_, Tensor cx_, bool reverse, int[] batch_sizes, int mode, int hidden_size, int num_layers, bool has_biases, bool bidirectional, bool batch_first, bool train) -> (Tensor, Tensor, Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::mkldnn_rnn_layer.out(Tensor input, Tensor weight0, Tensor weight1, Tensor weight2, Tensor weight3, Tensor hx_, Tensor cx_, bool reverse, int[] batch_sizes, int mode, int hidden_size, int num_layers, bool has_biases, bool bidirectional, bool batch_first, bool train, *, Tensor(a!) out0, Tensor(b!) out1, Tensor(c!) out2, Tensor(d!) out3) -> (Tensor(a!), Tensor(b!), Tensor(c!), Tensor(d!))
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::mkldnn_rnn_layer_backward(Tensor input, Tensor weight1, Tensor weight2, Tensor weight3, Tensor weight4, Tensor hx_, Tensor cx_tmp, Tensor output, Tensor hy_, Tensor cy_, Tensor? grad_output, Tensor? grad_hy, Tensor? grad_cy, bool reverse, int mode, int hidden_size, int num_layers, bool has_biases, bool train, bool bidirectional, int[] batch_sizes, bool batch_first, Tensor workspace) -> (Tensor, Tensor, Tensor, Tensor, Tensor, Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::mkldnn_rnn_layer_backward.out(Tensor input, Tensor weight1, Tensor weight2, Tensor weight3, Tensor weight4, Tensor hx_, Tensor cx_tmp, Tensor output, Tensor hy_, Tensor cy_, Tensor? grad_output, Tensor? grad_hy, Tensor? grad_cy, bool reverse, int mode, int hidden_size, int num_layers, bool has_biases, bool train, bool bidirectional, int[] batch_sizes, bool batch_first, Tensor workspace, *, Tensor(a!) out0, Tensor(b!) out1, Tensor(c!) out2, Tensor(d!) out3, Tensor(e!) out4, Tensor(f!) out5, Tensor(g!) out6) -> (Tensor(a!), Tensor(b!), Tensor(c!), Tensor(d!), Tensor(e!), Tensor(f!), Tensor(g!))
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::mm(Tensor self, Tensor mat2) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::mm.out(Tensor self, Tensor mat2, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::mode(Tensor self, int dim=-1, bool keepdim=False) -> (Tensor values, Tensor indices)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::mode.dimname(Tensor self, str dim, bool keepdim=False) -> (Tensor values, Tensor indices)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::mode.dimname_out(Tensor self, str dim, bool keepdim=False, *, Tensor(a!) values, Tensor(b!) indices) -> (Tensor(a!) values, Tensor(b!) indices)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::mode.values(Tensor self, int dim=-1, bool keepdim=False, *, Tensor(a!) values, Tensor(b!) indices) -> (Tensor(a!) values, Tensor(b!) indices)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::moveaxis.int(Tensor(a) self, int source, int destination) -> Tensor(a)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::moveaxis.intlist(Tensor(a) self, int[] source, int[] destination) -> Tensor(a)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::movedim.int(Tensor(a) self, int source, int destination) -> Tensor(a)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::movedim.intlist(Tensor(a) self, int[] source, int[] destination) -> Tensor(a)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::mps_convolution_backward(Tensor self, Tensor grad_output, Tensor weight, int[] padding, int[] stride, int[] dilation, int groups, bool[3] output_mask) -> (Tensor, Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::mps_convolution_backward.out(Tensor self, Tensor grad_output, Tensor weight, int[] padding, int[] stride, int[] dilation, int groups, bool[3] output_mask, *, Tensor(a!) out0, Tensor(b!) out1, Tensor(c!) out2) -> (Tensor(a!), Tensor(b!), Tensor(c!))
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::mps_convolution_transpose_backward(Tensor self, Tensor grad_output, Tensor weight, int[] padding, int[] output_padding, int[] stride, int[] dilation, int groups, bool[2] output_mask) -> (Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::mps_convolution_transpose_backward.out(Tensor self, Tensor grad_output, Tensor weight, int[] padding, int[] output_padding, int[] stride, int[] dilation, int groups, bool[2] output_mask, *, Tensor(a!) out0, Tensor(b!) out1) -> (Tensor(a!), Tensor(b!))
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::mse_loss(Tensor self, Tensor target, int reduction=1) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::mse_loss.out(Tensor self, Tensor target, int reduction=1, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::mse_loss_backward(Tensor grad_output, Tensor self, Tensor target, int reduction) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::mse_loss_backward.grad_input(Tensor grad_output, Tensor self, Tensor target, int reduction, *, Tensor(a!) grad_input) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::msort(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::msort.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::mul.Scalar(Tensor self, Scalar other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::mul.Scalar_out(Tensor self, Scalar other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::mul.Tensor(Tensor self, Tensor other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::mul.out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::mul_.Scalar(Tensor(a!) self, Scalar other) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::mul_.Tensor(Tensor(a!) self, Tensor other) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::multi_margin_loss(Tensor self, Tensor target, Scalar p=1, Scalar margin=1, Tensor? weight=None, int reduction=1) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::multi_margin_loss.out(Tensor self, Tensor target, Scalar p=1, Scalar margin=1, Tensor? weight=None, int reduction=1, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::multi_margin_loss_backward(Tensor grad_output, Tensor self, Tensor target, Scalar p, Scalar margin, Tensor? weight=None, int reduction=1) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::multi_margin_loss_backward.grad_input(Tensor grad_output, Tensor self, Tensor target, Scalar p, Scalar margin, Tensor? weight=None, int reduction=1, *, Tensor(a!) grad_input) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::multilabel_margin_loss(Tensor self, Tensor target, int reduction=1) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::multilabel_margin_loss.out(Tensor self, Tensor target, int reduction=1, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::multilabel_margin_loss_backward(Tensor grad_output, Tensor self, Tensor target, int reduction, Tensor is_target) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::multilabel_margin_loss_backward.grad_input(Tensor grad_output, Tensor self, Tensor target, int reduction, Tensor is_target, *, Tensor(a!) grad_input) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::multilabel_margin_loss_forward(Tensor self, Tensor target, int reduction) -> (Tensor output, Tensor is_target)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::multilabel_margin_loss_forward.output(Tensor self, Tensor target, int reduction, *, Tensor(a!) output, Tensor(b!) is_target) -> (Tensor(a!), Tensor(b!))
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::multinomial(Tensor self, int num_samples, bool replacement=False, *, Generator? generator=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::multinomial.out(Tensor self, int num_samples, bool replacement=False, *, Generator? generator=None, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::multiply.Scalar(Tensor self, Scalar other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::multiply.Tensor(Tensor self, Tensor other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::multiply.out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::multiply_.Scalar(Tensor(a!) self, Scalar other) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::multiply_.Tensor(Tensor(a!) self, Tensor other) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::mv(Tensor self, Tensor vec) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::mv.out(Tensor self, Tensor vec, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::mvlgamma(Tensor self, int p) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::mvlgamma.out(Tensor self, int p, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::mvlgamma_(Tensor(a!) self, int p) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::nan_to_num(Tensor self, float? nan=None, float? posinf=None, float? neginf=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::nan_to_num.out(Tensor self, float? nan=None, float? posinf=None, float? neginf=None, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::nan_to_num_(Tensor(a!) self, float? nan=None, float? posinf=None, float? neginf=None) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::nanmean(Tensor self, int[1]? dim=None, bool keepdim=False, *, ScalarType? dtype=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::nanmean.out(Tensor self, int[1]? dim=None, bool keepdim=False, *, ScalarType? dtype=None, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::nanmedian(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::nanmedian.dim(Tensor self, int dim, bool keepdim=False) -> (Tensor values, Tensor indices)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::nanmedian.dim_values(Tensor self, int dim, bool keepdim=False, *, Tensor(a!) values, Tensor(b!) indices) -> (Tensor(a!) values, Tensor(b!) indices)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::nanmedian.names_dim(Tensor self, str dim, bool keepdim=False) -> (Tensor values, Tensor indices)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::nanmedian.names_dim_values(Tensor self, str dim, bool keepdim=False, *, Tensor(a!) values, Tensor(b!) indices) -> (Tensor(a!) values, Tensor(b!) indices)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::nanmedian.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::nanquantile(Tensor self, Tensor q, int? dim=None, bool keepdim=False, *, str interpolation="linear") -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::nanquantile.out(Tensor self, Tensor q, int? dim=None, bool keepdim=False, *, str interpolation="linear", Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::nanquantile.scalar(Tensor self, float q, int? dim=None, bool keepdim=False, *, str interpolation="linear") -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::nanquantile.scalar_out(Tensor self, float q, int? dim=None, bool keepdim=False, *, str interpolation="linear", Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::nansum(Tensor self, int[1]? dim=None, bool keepdim=False, *, ScalarType? dtype=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::nansum.out(Tensor self, int[1]? dim=None, bool keepdim=False, *, ScalarType? dtype=None, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::narrow(Tensor(a) self, int dim, SymInt start, SymInt length) -> Tensor(a)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::narrow.Tensor(Tensor(a) self, int dim, Tensor start, SymInt length) -> Tensor(a)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::narrow_copy(Tensor self, int dim, SymInt start, SymInt length) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::narrow_copy.out(Tensor self, int dim, SymInt start, SymInt length, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::native_batch_norm(Tensor input, Tensor? weight, Tensor? bias, Tensor? running_mean, Tensor? running_var, bool training, float momentum, float eps) -> (Tensor, Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::native_batch_norm.out(Tensor input, Tensor? weight, Tensor? bias, Tensor? running_mean, Tensor? running_var, bool training, float momentum, float eps, *, Tensor(a!) out, Tensor(b!) save_mean, Tensor(c!) save_invstd) -> (Tensor(a!), Tensor(b!), Tensor(c!))
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::native_batch_norm_backward(Tensor grad_out, Tensor input, Tensor? weight, Tensor? running_mean, Tensor? running_var, Tensor? save_mean, Tensor? save_invstd, bool train, float eps, bool[3] output_mask) -> (Tensor, Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::native_batch_norm_backward.out(Tensor grad_out, Tensor input, Tensor? weight, Tensor? running_mean, Tensor? running_var, Tensor? save_mean, Tensor? save_invstd, bool train, float eps, bool[3] output_mask, *, Tensor(a!) out0, Tensor(b!) out1, Tensor(c!) out2) -> (Tensor(a!), Tensor(b!), Tensor(c!))
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::native_channel_shuffle(Tensor self, int groups) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::native_dropout(Tensor input, float p, bool? train) -> (Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::native_dropout.out(Tensor input, float p, bool? train, *, Tensor(a!) out0, Tensor(b!) out1) -> (Tensor(a!), Tensor(b!))
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::native_dropout_backward(Tensor grad_output, Tensor mask, float scale) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::native_dropout_backward.out(Tensor grad_output, Tensor mask, float scale, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::native_group_norm(Tensor input, Tensor? weight, Tensor? bias, SymInt N, SymInt C, SymInt HxW, int group, float eps) -> (Tensor, Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::native_group_norm.out(Tensor input, Tensor? weight, Tensor? bias, SymInt N, SymInt C, SymInt HxW, int group, float eps, *, Tensor(a!) out0, Tensor(b!) out1, Tensor(c!) out2) -> (Tensor(a!), Tensor(b!), Tensor(c!))
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::native_group_norm_backward(Tensor grad_out, Tensor input, Tensor mean, Tensor rstd, Tensor? weight, SymInt N, SymInt C, SymInt HxW, int group, bool[3] output_mask) -> (Tensor, Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::native_group_norm_backward.out(Tensor grad_out, Tensor input, Tensor mean, Tensor rstd, Tensor? weight, SymInt N, SymInt C, SymInt HxW, int group, bool[3] output_mask, *, Tensor(a!) out0, Tensor(b!) out1, Tensor(c!) out2) -> (Tensor(a!), Tensor(b!), Tensor(c!))
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::native_layer_norm(Tensor input, SymInt[] normalized_shape, Tensor? weight, Tensor? bias, float eps) -> (Tensor, Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::native_layer_norm.out(Tensor input, SymInt[] normalized_shape, Tensor? weight, Tensor? bias, float eps, *, Tensor(a!) out0, Tensor(b!) out1, Tensor(c!) out2) -> (Tensor(a!), Tensor(b!), Tensor(c!))
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::native_layer_norm_backward(Tensor grad_out, Tensor input, SymInt[] normalized_shape, Tensor mean, Tensor rstd, Tensor? weight, Tensor? bias, bool[3] output_mask) -> (Tensor, Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::native_layer_norm_backward.out(Tensor grad_out, Tensor input, SymInt[] normalized_shape, Tensor mean, Tensor rstd, Tensor? weight, Tensor? bias, bool[3] output_mask, *, Tensor(a!) out0, Tensor(b!) out1, Tensor(c!) out2) -> (Tensor(a!), Tensor(b!), Tensor(c!))
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::native_norm(Tensor self, Scalar p=2) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::native_norm.ScalarOpt_dim_dtype(Tensor self, Scalar? p, int[1] dim, bool keepdim, ScalarType? dtype) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::native_norm.ScalarOpt_dim_dtype_out(Tensor self, Scalar? p, int[1] dim, bool keepdim, ScalarType? dtype, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::native_norm.out(Tensor self, Scalar p=2, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::ne.Scalar(Tensor self, Scalar other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::ne.Scalar_out(Tensor self, Scalar other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::ne.Tensor(Tensor self, Tensor other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::ne.Tensor_out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::ne_.Scalar(Tensor(a!) self, Scalar other) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::ne_.Tensor(Tensor(a!) self, Tensor other) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::neg(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::neg.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::neg_(Tensor(a!) self) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::negative(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::negative.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::negative_(Tensor(a!) self) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::nested_to_padded_tensor(Tensor self, float padding, int[]? output_size=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::new_empty(Tensor self, SymInt[] size, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::new_empty.out(Tensor self, SymInt[] size, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::new_empty_strided(Tensor self, SymInt[] size, SymInt[] stride, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::new_empty_strided.out(Tensor self, SymInt[] size, SymInt[] stride, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::new_full(Tensor self, SymInt[] size, Scalar fill_value, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::new_full.out(Tensor self, SymInt[] size, Scalar fill_value, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::new_ones(Tensor self, SymInt[] size, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::new_ones.out(Tensor self, SymInt[] size, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::new_zeros(Tensor self, SymInt[] size, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::new_zeros.out(Tensor self, SymInt[] size, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::nextafter(Tensor self, Tensor other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::nextafter.out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::nextafter_(Tensor(a!) self, Tensor other) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::nll_loss(Tensor self, Tensor target, Tensor? weight=None, int reduction=1, SymInt ignore_index=-100) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::nll_loss.out(Tensor self, Tensor target, Tensor? weight=None, int reduction=1, SymInt ignore_index=-100, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::nll_loss2d(Tensor self, Tensor target, Tensor? weight=None, int reduction=1, SymInt ignore_index=-100) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::nll_loss2d.out(Tensor self, Tensor target, Tensor? weight=None, int reduction=1, SymInt ignore_index=-100, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::nll_loss2d_backward(Tensor grad_output, Tensor self, Tensor target, Tensor? weight, int reduction, SymInt ignore_index, Tensor total_weight) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::nll_loss2d_backward.grad_input(Tensor grad_output, Tensor self, Tensor target, Tensor? weight, int reduction, SymInt ignore_index, Tensor total_weight, *, Tensor(a!) grad_input) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::nll_loss2d_forward(Tensor self, Tensor target, Tensor? weight, int reduction, SymInt ignore_index) -> (Tensor output, Tensor total_weight)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::nll_loss2d_forward.output(Tensor self, Tensor target, Tensor? weight, int reduction, SymInt ignore_index, *, Tensor(a!) output, Tensor(b!) total_weight) -> (Tensor(a!), Tensor(b!))
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::nll_loss_backward(Tensor grad_output, Tensor self, Tensor target, Tensor? weight, int reduction, SymInt ignore_index, Tensor total_weight) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::nll_loss_backward.grad_input(Tensor grad_output, Tensor self, Tensor target, Tensor? weight, int reduction, SymInt ignore_index, Tensor total_weight, *, Tensor(a!) grad_input) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::nll_loss_forward(Tensor self, Tensor target, Tensor? weight, int reduction, SymInt ignore_index) -> (Tensor output, Tensor total_weight)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::nll_loss_forward.output(Tensor self, Tensor target, Tensor? weight, int reduction, SymInt ignore_index, *, Tensor(a!) output, Tensor(b!) total_weight) -> (Tensor(a!), Tensor(b!))
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::nll_loss_nd(Tensor self, Tensor target, Tensor? weight=None, int reduction=1, SymInt ignore_index=-100) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::nonzero(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::nonzero.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::nonzero_numpy(Tensor self) -> Tensor[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::norm.Scalar(Tensor self, Scalar p=2) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::norm.ScalarOpt_dim(Tensor self, Scalar? p, int[1] dim, bool keepdim=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::norm.ScalarOpt_dim_dtype(Tensor self, Scalar? p, int[1] dim, bool keepdim, *, ScalarType dtype) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::norm.ScalarOpt_dtype(Tensor self, Scalar? p, *, ScalarType dtype) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::norm.ScalarOpt_dtype_out(Tensor self, Scalar? p, *, ScalarType dtype, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::norm.Scalar_out(Tensor self, Scalar p=2, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::norm.dtype_out(Tensor self, Scalar? p, int[1] dim, bool keepdim, *, ScalarType dtype, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::norm.names_ScalarOpt_dim(Tensor self, Scalar? p, str[1] dim, bool keepdim=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::norm.names_ScalarOpt_dim_dtype(Tensor self, Scalar? p, str[1] dim, bool keepdim, *, ScalarType dtype) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::norm.names_dtype_out(Tensor self, Scalar? p, str[1] dim, bool keepdim, *, ScalarType dtype, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::norm.names_out(Tensor self, Scalar? p, str[1] dim, bool keepdim=False, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::norm.out(Tensor self, Scalar? p, int[1] dim, bool keepdim=False, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::norm_except_dim(Tensor v, int pow=2, int dim=0) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::normal.Tensor_Tensor(Tensor mean, Tensor std, *, Generator? generator=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::normal.Tensor_Tensor_out(Tensor mean, Tensor std, *, Generator? generator=None, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::normal.Tensor_float(Tensor mean, float std=1., *, Generator? generator=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::normal.Tensor_float_out(Tensor mean, float std=1., *, Generator? generator=None, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::normal.float_Tensor(float mean, Tensor std, *, Generator? generator=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::normal.float_Tensor_out(float mean, Tensor std, *, Generator? generator=None, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::normal.float_float(float mean, float std, SymInt[] size, *, Generator? generator=None, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::normal.float_float_out(float mean, float std, SymInt[] size, *, Generator? generator=None, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::normal.out(Tensor self, float mean=0., float std=1., *, Generator? generator=None, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::normal_(Tensor(a!) self, float mean=0., float std=1., *, Generator? generator=None) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::normal_functional(Tensor self, float mean=0., float std=1., *, Generator? generator=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::not_equal.Scalar(Tensor self, Scalar other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::not_equal.Scalar_out(Tensor self, Scalar other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::not_equal.Tensor(Tensor self, Tensor other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::not_equal.Tensor_out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::not_equal_.Scalar(Tensor(a!) self, Scalar other) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::not_equal_.Tensor(Tensor(a!) self, Tensor other) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::nuclear_norm(Tensor self, bool keepdim=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::nuclear_norm.dim(Tensor self, int[2] dim, bool keepdim=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::nuclear_norm.dim_out(Tensor self, int[2] dim, bool keepdim=False, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::nuclear_norm.out(Tensor self, bool keepdim=False, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::numpy_T(Tensor(a) self) -> Tensor(a)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::one_hot(Tensor self, int num_classes=-1) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::ones(SymInt[] size, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::ones.names(int[] size, *, str[]? names, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::ones.names_out(int[] size, *, str[]? names, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::ones.out(SymInt[] size, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::ones_like(Tensor self, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None, MemoryFormat? memory_format=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::ones_like.out(Tensor self, *, MemoryFormat? memory_format=None, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::orgqr(Tensor self, Tensor input2) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::orgqr.out(Tensor self, Tensor input2, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::ormqr(Tensor self, Tensor input2, Tensor input3, bool left=True, bool transpose=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::ormqr.out(Tensor self, Tensor input2, Tensor input3, bool left=True, bool transpose=False, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::outer(Tensor self, Tensor vec2) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::outer.out(Tensor self, Tensor vec2, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::output_nr(Tensor self) -> int
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::pad(Tensor self, SymInt[] pad, str mode="constant", float? value=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::pad_sequence(Tensor[] sequences, bool batch_first=False, float padding_value=0.) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::pairwise_distance(Tensor x1, Tensor x2, float p=2., float eps=9.9999999999999995e-07, bool keepdim=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::pdist(Tensor self, float p=2.) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::permute(Tensor(a) self, int[] dims) -> Tensor(a)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::permute_copy(Tensor self, int[] dims) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::permute_copy.out(Tensor self, int[] dims, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::pin_memory(Tensor(a) self, Device? device=None) -> Tensor(a)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::pinverse(Tensor self, float rcond=1.0000000000000001e-15) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::pixel_shuffle(Tensor self, int upscale_factor) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::pixel_shuffle.out(Tensor self, int upscale_factor, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::pixel_unshuffle(Tensor self, int downscale_factor) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::pixel_unshuffle.out(Tensor self, int downscale_factor, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::poisson(Tensor self, Generator? generator=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::poisson.out(Tensor self, Generator? generator=None, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::poisson_nll_loss(Tensor input, Tensor target, bool log_input, bool full, float eps, int reduction) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::polar(Tensor abs, Tensor angle) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::polar.out(Tensor abs, Tensor angle, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::polygamma(int n, Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::polygamma.out(int n, Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::polygamma_(Tensor(a!) self, int n) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::positive(Tensor(a) self) -> Tensor(a)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::pow.Scalar(Scalar self, Tensor exponent) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::pow.Scalar_out(Scalar self, Tensor exponent, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::pow.Tensor_Scalar(Tensor self, Scalar exponent) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::pow.Tensor_Scalar_out(Tensor self, Scalar exponent, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::pow.Tensor_Tensor(Tensor self, Tensor exponent) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::pow.Tensor_Tensor_out(Tensor self, Tensor exponent, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::pow_.Scalar(Tensor(a!) self, Scalar exponent) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::pow_.Tensor(Tensor(a!) self, Tensor exponent) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::prelu(Tensor self, Tensor weight) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::prod(Tensor self, *, ScalarType? dtype=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::prod.Dimname_out(Tensor self, str dim, bool keepdim=False, *, ScalarType? dtype=None, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::prod.dim_Dimname(Tensor self, str dim, bool keepdim=False, *, ScalarType? dtype=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::prod.dim_int(Tensor self, int dim, bool keepdim=False, *, ScalarType? dtype=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::prod.int_out(Tensor self, int dim, bool keepdim=False, *, ScalarType? dtype=None, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::prod.out(Tensor self, *, ScalarType? dtype=None, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::promote_types(ScalarType type1, ScalarType type2) -> ScalarType
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::put(Tensor self, Tensor index, Tensor source, bool accumulate=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::put.out(Tensor self, Tensor index, Tensor source, bool accumulate=False, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::put_(Tensor(a!) self, Tensor index, Tensor source, bool accumulate=False) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::q_per_channel_axis(Tensor self) -> int
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::q_per_channel_scales(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::q_per_channel_scales.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::q_per_channel_zero_points(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::q_per_channel_zero_points.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::q_scale(Tensor self) -> float
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::q_zero_point(Tensor self) -> int
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::qr(Tensor self, bool some=True) -> (Tensor Q, Tensor R)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::qr.Q(Tensor self, bool some=True, *, Tensor(a!) Q, Tensor(b!) R) -> (Tensor(a!) Q, Tensor(b!) R)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::qscheme(Tensor self) -> QScheme
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::quantile(Tensor self, Tensor q, int? dim=None, bool keepdim=False, *, str interpolation="linear") -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::quantile.out(Tensor self, Tensor q, int? dim=None, bool keepdim=False, *, str interpolation="linear", Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::quantile.scalar(Tensor self, float q, int? dim=None, bool keepdim=False, *, str interpolation="linear") -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::quantile.scalar_out(Tensor self, float q, int? dim=None, bool keepdim=False, *, str interpolation="linear", Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::quantize_per_channel(Tensor self, Tensor scales, Tensor zero_points, int axis, ScalarType dtype) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::quantize_per_channel.out(Tensor self, Tensor scales, Tensor zero_points, int axis, ScalarType dtype, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::quantize_per_tensor(Tensor self, float scale, int zero_point, ScalarType dtype) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::quantize_per_tensor.out(Tensor self, float scale, int zero_point, ScalarType dtype, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::quantize_per_tensor.tensor_qparams(Tensor self, Tensor scale, Tensor zero_point, ScalarType dtype) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::quantize_per_tensor.tensor_qparams_out(Tensor self, Tensor scale, Tensor zero_point, ScalarType dtype, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::quantize_per_tensor.tensors(Tensor[] tensors, Tensor scales, Tensor zero_points, ScalarType dtype) -> Tensor[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::quantize_per_tensor.tensors_out(Tensor[] tensors, Tensor scales, Tensor zero_points, ScalarType dtype, *, Tensor(a!)[] out) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::quantize_per_tensor_dynamic(Tensor self, ScalarType dtype, bool reduce_range) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::quantize_per_tensor_dynamic.out(Tensor self, ScalarType dtype, bool reduce_range, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::quantized_batch_norm(Tensor input, Tensor? weight, Tensor? bias, Tensor mean, Tensor var, float eps, float output_scale, int output_zero_point) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::quantized_batch_norm.out(Tensor input, Tensor? weight, Tensor? bias, Tensor mean, Tensor var, float eps, float output_scale, int output_zero_point, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::quantized_gru.data(Tensor data, Tensor batch_sizes, Tensor hx, __torch__.torch.classes.rnn.CellParamsBase[] params, bool has_biases, int num_layers, float dropout, bool train, bool bidirectional) -> (Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/RNN.cpp:1924
-------------------
operator schema:
aten::quantized_gru.data_legacy(Tensor data, Tensor batch_sizes, Tensor hx, Tensor[] params, bool has_biases, int num_layers, float dropout, bool train, bool bidirectional) -> (Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/RNN.cpp:1924
-------------------
operator schema:
aten::quantized_gru.input(Tensor input, Tensor hx, __torch__.torch.classes.rnn.CellParamsBase[] params, bool has_biases, int num_layers, float dropout, bool train, bool bidirectional, bool batch_first) -> (Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/RNN.cpp:1924
-------------------
operator schema:
aten::quantized_gru.input_legacy(Tensor input, Tensor hx, Tensor[] params, bool has_biases, int num_layers, float dropout, bool train, bool bidirectional, bool batch_first) -> (Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/RNN.cpp:1924
-------------------
operator schema:
aten::quantized_gru_cell(Tensor input, Tensor hx, Tensor w_ih, Tensor w_hh, Tensor b_ih, Tensor b_hh, Tensor packed_ih, Tensor packed_hh, Tensor col_offsets_ih, Tensor col_offsets_hh, Scalar scale_ih, Scalar scale_hh, Scalar zero_point_ih, Scalar zero_point_hh) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::quantized_lstm.data(Tensor data, Tensor batch_sizes, Tensor[] hx, __torch__.torch.classes.rnn.CellParamsBase[] params, bool has_biases, int num_layers, float dropout, bool train, bool bidirectional, *, ScalarType? dtype=None, bool use_dynamic=False) -> (Tensor, Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/RNN.cpp:1924
-------------------
operator schema:
aten::quantized_lstm.data_legacy(Tensor data, Tensor batch_sizes, Tensor[] hx, Tensor[] params, bool has_biases, int num_layers, float dropout, bool train, bool bidirectional, *, ScalarType? dtype=None, bool use_dynamic=False) -> (Tensor, Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/RNN.cpp:1924
-------------------
operator schema:
aten::quantized_lstm.input(Tensor input, Tensor[] hx, __torch__.torch.classes.rnn.CellParamsBase[] params, bool has_biases, int num_layers, float dropout, bool train, bool bidirectional, bool batch_first, *, ScalarType? dtype=None, bool use_dynamic=False) -> (Tensor, Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/RNN.cpp:1924
-------------------
operator schema:
aten::quantized_lstm.input_legacy(Tensor input, Tensor[] hx, Tensor[] params, bool has_biases, int num_layers, float dropout, bool train, bool bidirectional, bool batch_first, *, ScalarType? dtype=None, bool use_dynamic=False) -> (Tensor, Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/RNN.cpp:1924
-------------------
operator schema:
aten::quantized_lstm_cell(Tensor input, Tensor[] hx, Tensor w_ih, Tensor w_hh, Tensor b_ih, Tensor b_hh, Tensor packed_ih, Tensor packed_hh, Tensor col_offsets_ih, Tensor col_offsets_hh, Scalar scale_ih, Scalar scale_hh, Scalar zero_point_ih, Scalar zero_point_hh) -> (Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::quantized_max_pool1d(Tensor self, int[1] kernel_size, int[1] stride=[], int[1] padding=[0], int[1] dilation=[1], bool ceil_mode=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::quantized_max_pool1d.out(Tensor self, int[1] kernel_size, int[1] stride=[], int[1] padding=[0], int[1] dilation=[1], bool ceil_mode=False, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::quantized_max_pool2d(Tensor self, int[2] kernel_size, int[2] stride=[], int[2] padding=0, int[2] dilation=1, bool ceil_mode=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::quantized_max_pool2d.out(Tensor self, int[2] kernel_size, int[2] stride=[], int[2] padding=0, int[2] dilation=1, bool ceil_mode=False, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::quantized_rnn_relu_cell(Tensor input, Tensor hx, Tensor w_ih, Tensor w_hh, Tensor b_ih, Tensor b_hh, Tensor packed_ih, Tensor packed_hh, Tensor col_offsets_ih, Tensor col_offsets_hh, Scalar scale_ih, Scalar scale_hh, Scalar zero_point_ih, Scalar zero_point_hh) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::quantized_rnn_tanh_cell(Tensor input, Tensor hx, Tensor w_ih, Tensor w_hh, Tensor b_ih, Tensor b_hh, Tensor packed_ih, Tensor packed_hh, Tensor col_offsets_ih, Tensor col_offsets_hh, Scalar scale_ih, Scalar scale_hh, Scalar zero_point_ih, Scalar zero_point_hh) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::rad2deg(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::rad2deg.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::rad2deg_(Tensor(a!) self) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::rand(SymInt[] size, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::rand.generator(SymInt[] size, *, Generator? generator, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::rand.generator_out(SymInt[] size, *, Generator? generator, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::rand.generator_with_names(SymInt[] size, *, Generator? generator, str[]? names, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::rand.generator_with_names_out(SymInt[] size, *, Generator? generator, str[]? names, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::rand.names(SymInt[] size, *, str[]? names, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::rand.names_out(SymInt[] size, *, str[]? names, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::rand.out(SymInt[] size, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::rand_like(Tensor self, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None, MemoryFormat? memory_format=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::rand_like.out(Tensor self, *, MemoryFormat? memory_format=None, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::randint(int high, SymInt[] size, *, ScalarType? dtype=4, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::randint.generator(int high, SymInt[] size, *, Generator? generator, ScalarType? dtype=4, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::randint.generator_out(int high, SymInt[] size, *, Generator? generator, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::randint.low(int low, int high, SymInt[] size, *, ScalarType? dtype=4, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::randint.low_generator(int low, int high, SymInt[] size, *, Generator? generator, ScalarType? dtype=4, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::randint.low_generator_out(int low, int high, SymInt[] size, *, Generator? generator, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::randint.low_out(int low, int high, SymInt[] size, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::randint.out(int high, SymInt[] size, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::randint_like(Tensor self, int high, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None, MemoryFormat? memory_format=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::randint_like.low_dtype(Tensor self, int low, int high, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None, MemoryFormat? memory_format=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::randint_like.low_dtype_out(Tensor self, int low, int high, *, MemoryFormat? memory_format=None, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::randint_like.out(Tensor self, int high, *, MemoryFormat? memory_format=None, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::randn(SymInt[] size, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::randn.generator(SymInt[] size, *, Generator? generator, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::randn.generator_out(SymInt[] size, *, Generator? generator, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::randn.generator_with_names(SymInt[] size, *, Generator? generator, str[]? names, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::randn.generator_with_names_out(SymInt[] size, *, Generator? generator, str[]? names, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::randn.names(SymInt[] size, *, str[]? names, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::randn.names_out(SymInt[] size, *, str[]? names, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::randn.out(SymInt[] size, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::randn_like(Tensor self, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None, MemoryFormat? memory_format=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::randn_like.out(Tensor self, *, MemoryFormat? memory_format=None, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::random(Tensor self, *, Generator? generator=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::random.from(Tensor self, int from, int? to, *, Generator? generator=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::random.from_out(Tensor self, int from, int? to, *, Generator? generator=None, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::random.out(Tensor self, *, Generator? generator=None, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::random.to(Tensor self, int to, *, Generator? generator=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::random.to_out(Tensor self, int to, *, Generator? generator=None, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::random_(Tensor(a!) self, *, Generator? generator=None) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::random_.from(Tensor(a!) self, int from, int? to, *, Generator? generator=None) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::random_.to(Tensor(a!) self, int to, *, Generator? generator=None) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::randperm(int n, *, ScalarType? dtype=4, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::randperm.generator(int n, *, Generator? generator, ScalarType? dtype=4, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::randperm.generator_out(int n, *, Generator? generator, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::randperm.out(int n, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::range(Scalar start, Scalar end, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::range.out(Scalar start, Scalar end, Scalar step=1, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::range.out_(Scalar start, Scalar end, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::range.step(Scalar start, Scalar end, Scalar step=1, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::ravel(Tensor(a) self) -> Tensor(a)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::real(Tensor(a) self) -> Tensor(a)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::reciprocal(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::reciprocal.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::reciprocal_(Tensor(a!) self) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::record_stream(Tensor(a!) self, Stream s) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::refine_names(Tensor(a) self, str[] names) -> Tensor(a)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::reflection_pad1d(Tensor self, SymInt[2] padding) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::reflection_pad1d.out(Tensor self, SymInt[2] padding, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::reflection_pad1d_backward(Tensor grad_output, Tensor self, SymInt[2] padding) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::reflection_pad1d_backward.grad_input(Tensor grad_output, Tensor self, SymInt[2] padding, *, Tensor(a!) grad_input) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::reflection_pad2d(Tensor self, SymInt[4] padding) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::reflection_pad2d.out(Tensor self, SymInt[4] padding, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::reflection_pad2d_backward(Tensor grad_output, Tensor self, SymInt[4] padding) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::reflection_pad2d_backward.grad_input(Tensor grad_output, Tensor self, SymInt[4] padding, *, Tensor(a!) grad_input) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::reflection_pad3d(Tensor self, SymInt[6] padding) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::reflection_pad3d.out(Tensor self, SymInt[6] padding, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::reflection_pad3d_backward(Tensor grad_output, Tensor self, SymInt[6] padding) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::reflection_pad3d_backward.grad_input(Tensor grad_output, Tensor self, SymInt[6] padding, *, Tensor(a!) grad_input) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::relu(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::relu.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::relu6(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::relu6_(Tensor(a!) self) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::relu_(Tensor(a!) self) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::remainder.Scalar(Tensor self, Scalar other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::remainder.Scalar_Tensor(Scalar self, Tensor other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::remainder.Scalar_Tensor_out(Scalar self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::remainder.Scalar_out(Tensor self, Scalar other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::remainder.Tensor(Tensor self, Tensor other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::remainder.Tensor_out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::remainder_.Scalar(Tensor(a!) self, Scalar other) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::remainder_.Tensor(Tensor(a!) self, Tensor other) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::rename(Tensor(a) self, str[]? names) -> Tensor(a)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::rename_(Tensor(a!) self, str[]? names) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::renorm(Tensor self, Scalar p, int dim, Scalar maxnorm) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::renorm.out(Tensor self, Scalar p, int dim, Scalar maxnorm, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::renorm_(Tensor(a!) self, Scalar p, int dim, Scalar maxnorm) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::repeat(Tensor self, SymInt[] repeats) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::repeat.out(Tensor self, SymInt[] repeats, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::repeat_interleave.Tensor(Tensor repeats, *, int? output_size=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::repeat_interleave.Tensor_out(Tensor repeats, *, int? output_size=None, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::repeat_interleave.self_Tensor(Tensor self, Tensor repeats, int? dim=None, *, int? output_size=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::repeat_interleave.self_int(Tensor self, SymInt repeats, int? dim=None, *, int? output_size=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::replication_pad1d(Tensor self, SymInt[2] padding) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::replication_pad1d.out(Tensor self, SymInt[2] padding, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::replication_pad1d_backward(Tensor grad_output, Tensor self, SymInt[2] padding) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::replication_pad1d_backward.grad_input(Tensor grad_output, Tensor self, SymInt[2] padding, *, Tensor(a!) grad_input) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::replication_pad2d(Tensor self, SymInt[4] padding) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::replication_pad2d.out(Tensor self, SymInt[4] padding, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::replication_pad2d_backward(Tensor grad_output, Tensor self, SymInt[4] padding) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::replication_pad2d_backward.grad_input(Tensor grad_output, Tensor self, SymInt[4] padding, *, Tensor(a!) grad_input) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::replication_pad3d(Tensor self, SymInt[6] padding) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::replication_pad3d.out(Tensor self, SymInt[6] padding, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::replication_pad3d_backward(Tensor grad_output, Tensor self, SymInt[6] padding) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::replication_pad3d_backward.grad_input(Tensor grad_output, Tensor self, SymInt[6] padding, *, Tensor(a!) grad_input) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::requires_grad_(Tensor(a!) self, bool requires_grad=True) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::reshape(Tensor(a) self, SymInt[] shape) -> Tensor(a)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::reshape_as(Tensor(a) self, Tensor other) -> Tensor(a)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::resize(Tensor self, SymInt[] size, *, MemoryFormat? memory_format=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::resize.out(Tensor self, SymInt[] size, *, MemoryFormat? memory_format=None, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::resize_(Tensor(a!) self, SymInt[] size, *, MemoryFormat? memory_format=None) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::resize_as(Tensor self, Tensor the_template, *, MemoryFormat? memory_format=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::resize_as.out(Tensor self, Tensor the_template, *, MemoryFormat? memory_format=None, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::resize_as_(Tensor(a!) self, Tensor the_template, *, MemoryFormat? memory_format=None) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::resize_as_sparse(Tensor self, Tensor the_template) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::resize_as_sparse.out(Tensor self, Tensor the_template, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::resize_as_sparse_(Tensor(a!) self, Tensor the_template) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::resolve_conj(Tensor(a) self) -> Tensor(a)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::resolve_neg(Tensor(a) self) -> Tensor(a)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::result_type.Scalar(Tensor tensor, Scalar other) -> ScalarType
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::result_type.Scalar_Scalar(Scalar scalar1, Scalar scalar2) -> ScalarType
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::result_type.Scalar_Tensor(Scalar scalar, Tensor tensor) -> ScalarType
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::result_type.Tensor(Tensor tensor, Tensor other) -> ScalarType
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::retain_grad(Tensor(a!) self) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::retains_grad(Tensor self) -> bool
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::rnn_relu.data(Tensor data, Tensor batch_sizes, Tensor hx, Tensor[] params, bool has_biases, int num_layers, float dropout, bool train, bool bidirectional) -> (Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::rnn_relu.input(Tensor input, Tensor hx, Tensor[] params, bool has_biases, int num_layers, float dropout, bool train, bool bidirectional, bool batch_first) -> (Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::rnn_relu_cell(Tensor input, Tensor hx, Tensor w_ih, Tensor w_hh, Tensor? b_ih=None, Tensor? b_hh=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::rnn_tanh.data(Tensor data, Tensor batch_sizes, Tensor hx, Tensor[] params, bool has_biases, int num_layers, float dropout, bool train, bool bidirectional) -> (Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::rnn_tanh.input(Tensor input, Tensor hx, Tensor[] params, bool has_biases, int num_layers, float dropout, bool train, bool bidirectional, bool batch_first) -> (Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::rnn_tanh_cell(Tensor input, Tensor hx, Tensor w_ih, Tensor w_hh, Tensor? b_ih=None, Tensor? b_hh=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::roll(Tensor self, int[1] shifts, int[1] dims=[]) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::roll.out(Tensor self, int[1] shifts, int[1] dims=[], *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::rot90(Tensor self, int k=1, int[] dims=[0, 1]) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::rot90.out(Tensor self, int k=1, int[] dims=[0, 1], *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::round(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::round.decimals(Tensor self, *, int decimals) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::round.decimals_out(Tensor self, *, int decimals, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::round.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::round_(Tensor(a!) self) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::round_.decimals(Tensor(a!) self, *, int decimals) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::row_indices(Tensor(a) self) -> Tensor(a)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::row_indices_copy(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::row_indices_copy.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::row_stack(Tensor[] tensors) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::row_stack.out(Tensor[] tensors, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::rrelu(Tensor self, Scalar lower=0.125, Scalar upper=0.33333333333333331, bool training=False, Generator? generator=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::rrelu_(Tensor(a!) self, Scalar lower=0.125, Scalar upper=0.33333333333333331, bool training=False, Generator? generator=None) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::rrelu_with_noise(Tensor self, Tensor noise, Scalar lower=0.125, Scalar upper=0.33333333333333331, bool training=False, Generator? generator=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::rrelu_with_noise.out(Tensor self, Tensor noise, Scalar lower=0.125, Scalar upper=0.33333333333333331, bool training=False, Generator? generator=None, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::rrelu_with_noise_(Tensor(a!) self, Tensor noise, Scalar lower=0.125, Scalar upper=0.33333333333333331, bool training=False, Generator? generator=None) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::rrelu_with_noise_backward(Tensor grad_output, Tensor self, Tensor noise, Scalar lower, Scalar upper, bool training, bool self_is_result) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::rrelu_with_noise_backward.out(Tensor grad_output, Tensor self, Tensor noise, Scalar lower, Scalar upper, bool training, bool self_is_result, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::rsqrt(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::rsqrt.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::rsqrt_(Tensor(a!) self) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::rsub.Scalar(Tensor self, Scalar other, Scalar alpha=1) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::rsub.Scalar_out(Tensor self, Scalar other, Scalar alpha=1, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::rsub.Tensor(Tensor self, Tensor other, *, Scalar alpha=1) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::rsub.Tensor_out(Tensor self, Tensor other, *, Scalar alpha=1, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::scalar_tensor(Scalar s, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::scalar_tensor.out(Scalar s, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::scaled_dot_product_attention(Tensor query, Tensor key, Tensor value, Tensor? attn_mask=None, float dropout_p=0., bool is_causal=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::scatter.dimname_src(Tensor self, str dim, Tensor index, Tensor src) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::scatter.dimname_value(Tensor self, str dim, Tensor index, Scalar value) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::scatter.reduce(Tensor self, int dim, Tensor index, Tensor src, *, str reduce) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::scatter.reduce_out(Tensor self, int dim, Tensor index, Tensor src, *, str reduce, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::scatter.src(Tensor self, int dim, Tensor index, Tensor src) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::scatter.src_out(Tensor self, int dim, Tensor index, Tensor src, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::scatter.value(Tensor self, int dim, Tensor index, Scalar value) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::scatter.value_out(Tensor self, int dim, Tensor index, Scalar value, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::scatter.value_reduce(Tensor self, int dim, Tensor index, Scalar value, *, str reduce) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::scatter.value_reduce_out(Tensor self, int dim, Tensor index, Scalar value, *, str reduce, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::scatter_.reduce(Tensor(a!) self, int dim, Tensor index, Tensor src, *, str reduce) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::scatter_.src(Tensor(a!) self, int dim, Tensor index, Tensor src) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::scatter_.value(Tensor(a!) self, int dim, Tensor index, Scalar value) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::scatter_.value_reduce(Tensor(a!) self, int dim, Tensor index, Scalar value, *, str reduce) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::scatter_add(Tensor self, int dim, Tensor index, Tensor src) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::scatter_add.dimname(Tensor self, str dim, Tensor index, Tensor src) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::scatter_add.out(Tensor self, int dim, Tensor index, Tensor src, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::scatter_add_(Tensor(a!) self, int dim, Tensor index, Tensor src) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::scatter_reduce.two(Tensor self, int dim, Tensor index, Tensor src, str reduce, *, bool include_self=True) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::scatter_reduce.two_out(Tensor self, int dim, Tensor index, Tensor src, str reduce, *, bool include_self=True, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::scatter_reduce_.two(Tensor(a!) self, int dim, Tensor index, Tensor src, str reduce, *, bool include_self=True) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::searchsorted.Scalar(Tensor sorted_sequence, Scalar self, *, bool out_int32=False, bool right=False, str? side=None, Tensor? sorter=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::searchsorted.Scalar_out(Tensor sorted_sequence, Scalar self, *, bool out_int32=False, bool right=False, str? side=None, Tensor? sorter=None, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::searchsorted.Tensor(Tensor sorted_sequence, Tensor self, *, bool out_int32=False, bool right=False, str? side=None, Tensor? sorter=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::searchsorted.Tensor_out(Tensor sorted_sequence, Tensor self, *, bool out_int32=False, bool right=False, str? side=None, Tensor? sorter=None, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::segment_reduce(Tensor data, str reduce, *, Tensor? lengths=None, Tensor? indices=None, Tensor? offsets=None, int axis=0, bool unsafe=False, Scalar? initial=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::segment_reduce.out(Tensor data, str reduce, *, Tensor? lengths=None, Tensor? indices=None, Tensor? offsets=None, int axis=0, bool unsafe=False, Scalar? initial=None, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::select.Dimname(Tensor(a) self, str dim, int index) -> Tensor(a)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::select.int(Tensor(a) self, int dim, SymInt index) -> Tensor(a)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::select_backward(Tensor grad_output, SymInt[] input_sizes, int dim, SymInt index) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::select_backward.out(Tensor grad_output, SymInt[] input_sizes, int dim, SymInt index, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::select_copy.int(Tensor self, int dim, SymInt index) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::select_copy.int_out(Tensor self, int dim, SymInt index, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::select_scatter(Tensor self, Tensor src, int dim, SymInt index) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::select_scatter.out(Tensor self, Tensor src, int dim, SymInt index, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::selu(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::selu_(Tensor(a!) self) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::set(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::set.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::set.source_Storage(Tensor self, Storage source) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::set.source_Storage_out(Tensor self, Storage source, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::set.source_Storage_storage_offset(Tensor self, Storage source, SymInt storage_offset, SymInt[] size, SymInt[] stride=[]) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::set.source_Storage_storage_offset_out(Tensor self, Storage source, SymInt storage_offset, SymInt[] size, SymInt[] stride=[], *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::set.source_Tensor(Tensor self, Tensor source) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::set.source_Tensor_out(Tensor self, Tensor source, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::set_(Tensor(a!) self) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::set_.source_Storage(Tensor(a!) self, Storage source) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::set_.source_Storage_storage_offset(Tensor(a!) self, Storage source, SymInt storage_offset, SymInt[] size, SymInt[] stride=[]) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::set_.source_Tensor(Tensor(a!) self, Tensor source) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::set_.source_Tensor_storage_offset(Tensor(a!) self, Tensor source, SymInt storage_offset, SymInt[] size, SymInt[] stride=[]) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::set_data(Tensor(a!) self, Tensor new_data) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::sgn(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::sgn.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::sgn_(Tensor(a!) self) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::sigmoid(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::sigmoid.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::sigmoid_(Tensor(a!) self) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::sigmoid_backward(Tensor grad_output, Tensor output) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::sigmoid_backward.grad_input(Tensor grad_output, Tensor output, *, Tensor(a!) grad_input) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::sign(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::sign.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::sign_(Tensor(a!) self) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::signbit(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::signbit.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::silu(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::silu.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::silu_(Tensor(a!) self) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::silu_backward(Tensor grad_output, Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::silu_backward.grad_input(Tensor grad_output, Tensor self, *, Tensor(a!) grad_input) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::sin(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::sin.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::sin_(Tensor(a!) self) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::sinc(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::sinc.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::sinc_(Tensor(a!) self) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::sinh(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::sinh.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::sinh_(Tensor(a!) self) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::size.Dimname(Tensor self, str dim) -> int
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::size.int(Tensor self, int dim) -> int
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::slice.Tensor(Tensor(a) self, int dim=0, SymInt? start=None, SymInt? end=None, SymInt step=1) -> Tensor(a)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::slice_backward(Tensor grad_output, SymInt[] input_sizes, int dim, SymInt start, SymInt end, SymInt step) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::slice_backward.out(Tensor grad_output, SymInt[] input_sizes, int dim, SymInt start, SymInt end, SymInt step, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::slice_copy.Tensor(Tensor self, int dim=0, SymInt? start=None, SymInt? end=None, SymInt step=1) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::slice_copy.Tensor_out(Tensor self, int dim=0, SymInt? start=None, SymInt? end=None, SymInt step=1, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::slice_scatter(Tensor self, Tensor src, int dim=0, SymInt? start=None, SymInt? end=None, SymInt step=1) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::slice_scatter.out(Tensor self, Tensor src, int dim=0, SymInt? start=None, SymInt? end=None, SymInt step=1, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::slogdet(Tensor self) -> (Tensor sign, Tensor logabsdet)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::slogdet.out(Tensor self, *, Tensor(a!) sign, Tensor(b!) logabsdet) -> (Tensor(a!) sign, Tensor(b!) logabsdet)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::slow_conv3d(Tensor self, Tensor weight, int[3] kernel_size, Tensor? bias=None, int[3] stride=1, SymInt[3] padding=[0, 0, 0]) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::slow_conv3d.out(Tensor self, Tensor weight, int[3] kernel_size, Tensor? bias=None, int[3] stride=1, SymInt[3] padding=[0, 0, 0], *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::slow_conv3d_forward(Tensor self, Tensor weight, int[3] kernel_size, Tensor? bias, int[3] stride, SymInt[3] padding) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::slow_conv3d_forward.output(Tensor self, Tensor weight, int[3] kernel_size, Tensor? bias, int[3] stride, SymInt[3] padding, *, Tensor(a!) output) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::slow_conv_dilated2d(Tensor self, Tensor weight, int[2] kernel_size, Tensor? bias=None, int[2] stride=1, SymInt[2] padding=[0, 0], int[2] dilation=1) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::slow_conv_dilated2d.out(Tensor self, Tensor weight, int[2] kernel_size, Tensor? bias=None, int[2] stride=1, SymInt[2] padding=[0, 0], int[2] dilation=1, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::slow_conv_dilated3d(Tensor self, Tensor weight, int[3] kernel_size, Tensor? bias=None, int[3] stride=1, SymInt[3] padding=[0, 0, 0], int[3] dilation=1) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::slow_conv_dilated3d.out(Tensor self, Tensor weight, int[3] kernel_size, Tensor? bias=None, int[3] stride=1, SymInt[3] padding=[0, 0, 0], int[3] dilation=1, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::slow_conv_transpose2d(Tensor self, Tensor weight, int[2] kernel_size, Tensor? bias=None, int[2] stride=1, SymInt[2] padding=[0, 0], SymInt[2] output_padding=[0, 0], int[2] dilation=1) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::slow_conv_transpose2d.out(Tensor self, Tensor weight, int[2] kernel_size, Tensor? bias=None, int[2] stride=1, SymInt[2] padding=[0, 0], SymInt[2] output_padding=[0, 0], int[2] dilation=1, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::slow_conv_transpose3d(Tensor self, Tensor weight, int[3] kernel_size, Tensor? bias=None, int[3] stride=1, SymInt[3] padding=[0, 0, 0], SymInt[3] output_padding=[0, 0, 0], int[3] dilation=1) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::slow_conv_transpose3d.out(Tensor self, Tensor weight, int[3] kernel_size, Tensor? bias=None, int[3] stride=1, SymInt[3] padding=[0, 0, 0], SymInt[3] output_padding=[0, 0, 0], int[3] dilation=1, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::smm(Tensor self, Tensor mat2) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::smooth_l1_loss(Tensor self, Tensor target, int reduction=1, float beta=1.) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::smooth_l1_loss.out(Tensor self, Tensor target, int reduction=1, float beta=1., *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::smooth_l1_loss_backward(Tensor grad_output, Tensor self, Tensor target, int reduction, float beta) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::smooth_l1_loss_backward.grad_input(Tensor grad_output, Tensor self, Tensor target, int reduction, float beta, *, Tensor(a!) grad_input) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::soft_margin_loss(Tensor self, Tensor target, int reduction=1) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::soft_margin_loss.out(Tensor self, Tensor target, int reduction=1, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::soft_margin_loss_backward(Tensor grad_output, Tensor self, Tensor target, int reduction) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::soft_margin_loss_backward.grad_input(Tensor grad_output, Tensor self, Tensor target, int reduction, *, Tensor(a!) grad_input) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::softmax.Dimname(Tensor self, str dim, *, ScalarType? dtype=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::softmax.int(Tensor self, int dim, ScalarType? dtype=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::softmax.int_out(Tensor self, int dim, ScalarType? dtype=None, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::softplus(Tensor self, Scalar beta=1, Scalar threshold=20) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::softplus.out(Tensor self, Scalar beta=1, Scalar threshold=20, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::softplus_backward(Tensor grad_output, Tensor self, Scalar beta, Scalar threshold) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::softplus_backward.grad_input(Tensor grad_output, Tensor self, Scalar beta, Scalar threshold, *, Tensor(a!) grad_input) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::softshrink(Tensor self, Scalar lambd=0.5) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::softshrink.out(Tensor self, Scalar lambd=0.5, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::softshrink_backward(Tensor grad_output, Tensor self, Scalar lambd) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::softshrink_backward.grad_input(Tensor grad_output, Tensor self, Scalar lambd, *, Tensor(a!) grad_input) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::sort(Tensor self, int dim=-1, bool descending=False) -> (Tensor values, Tensor indices)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::sort.dimname(Tensor self, str dim, bool descending=False) -> (Tensor values, Tensor indices)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::sort.dimname_stable(Tensor self, *, bool? stable, str dim, bool descending=False) -> (Tensor values, Tensor indices)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::sort.dimname_values(Tensor self, str dim, bool descending=False, *, Tensor(a!) values, Tensor(b!) indices) -> (Tensor(a!) values, Tensor(b!) indices)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::sort.dimname_values_stable(Tensor self, *, bool? stable, str dim, bool descending=False, Tensor(a!) values, Tensor(b!) indices) -> (Tensor(a!) values, Tensor(b!) indices)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::sort.stable(Tensor self, *, bool? stable, int dim=-1, bool descending=False) -> (Tensor values, Tensor indices)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::sort.values(Tensor self, int dim=-1, bool descending=False, *, Tensor(a!) values, Tensor(b!) indices) -> (Tensor(a!) values, Tensor(b!) indices)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::sort.values_stable(Tensor self, *, bool? stable, int dim=-1, bool descending=False, Tensor(a!) values, Tensor(b!) indices) -> (Tensor(a!) values, Tensor(b!) indices)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::sparse_bsc_tensor.ccol_row_value(Tensor ccol_indices, Tensor row_indices, Tensor values, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::sparse_bsc_tensor.ccol_row_value_size(Tensor ccol_indices, Tensor row_indices, Tensor values, int[] size, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::sparse_bsr_tensor.crow_col_value(Tensor crow_indices, Tensor col_indices, Tensor values, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::sparse_bsr_tensor.crow_col_value_size(Tensor crow_indices, Tensor col_indices, Tensor values, int[] size, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::sparse_compressed_tensor.comp_plain_value(Tensor compressed_indices, Tensor plain_indices, Tensor values, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::sparse_compressed_tensor.comp_plain_value_size(Tensor compressed_indices, Tensor plain_indices, Tensor values, int[] size, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::sparse_coo_tensor.indices(Tensor indices, Tensor values, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::sparse_coo_tensor.indices_size(Tensor indices, Tensor values, int[] size, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::sparse_coo_tensor.size(int[] size, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::sparse_coo_tensor.size_out(int[] size, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::sparse_csc_tensor.ccol_row_value(Tensor ccol_indices, Tensor row_indices, Tensor values, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::sparse_csc_tensor.ccol_row_value_size(Tensor ccol_indices, Tensor row_indices, Tensor values, int[] size, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::sparse_csr_tensor.crow_col_value(Tensor crow_indices, Tensor col_indices, Tensor values, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::sparse_csr_tensor.crow_col_value_size(Tensor crow_indices, Tensor col_indices, Tensor values, int[] size, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::sparse_dim(Tensor self) -> int
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::sparse_mask(Tensor self, Tensor mask) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::sparse_mask.out(Tensor self, Tensor mask, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::sparse_resize(Tensor self, int[] size, int sparse_dim, int dense_dim) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::sparse_resize.out(Tensor self, int[] size, int sparse_dim, int dense_dim, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::sparse_resize_(Tensor(a!) self, int[] size, int sparse_dim, int dense_dim) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::sparse_resize_and_clear(Tensor self, int[] size, int sparse_dim, int dense_dim) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::sparse_resize_and_clear.out(Tensor self, int[] size, int sparse_dim, int dense_dim, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::sparse_resize_and_clear_(Tensor(a!) self, int[] size, int sparse_dim, int dense_dim) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::sparse_sampled_addmm(Tensor self, Tensor mat1, Tensor mat2, *, Scalar beta=1, Scalar alpha=1) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::sparse_sampled_addmm.out(Tensor self, Tensor mat1, Tensor mat2, *, Scalar beta=1, Scalar alpha=1, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_airy_ai(Tensor x) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_airy_ai.out(Tensor x, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_bessel_j0(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_bessel_j0.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_bessel_j1(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_bessel_j1.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_bessel_y0(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_bessel_y0.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_bessel_y1(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_bessel_y1.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_chebyshev_polynomial_t(Tensor x, Tensor n) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_chebyshev_polynomial_t.n_scalar(Tensor x, Scalar n) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_chebyshev_polynomial_t.n_scalar_out(Tensor x, Scalar n, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_chebyshev_polynomial_t.out(Tensor x, Tensor n, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_chebyshev_polynomial_t.x_scalar(Scalar x, Tensor n) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_chebyshev_polynomial_t.x_scalar_out(Scalar x, Tensor n, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_chebyshev_polynomial_u(Tensor x, Tensor n) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_chebyshev_polynomial_u.n_scalar(Tensor x, Scalar n) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_chebyshev_polynomial_u.n_scalar_out(Tensor x, Scalar n, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_chebyshev_polynomial_u.out(Tensor x, Tensor n, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_chebyshev_polynomial_u.x_scalar(Scalar x, Tensor n) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_chebyshev_polynomial_u.x_scalar_out(Scalar x, Tensor n, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_chebyshev_polynomial_v(Tensor x, Tensor n) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_chebyshev_polynomial_v.n_scalar(Tensor x, Scalar n) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_chebyshev_polynomial_v.n_scalar_out(Tensor x, Scalar n, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_chebyshev_polynomial_v.out(Tensor x, Tensor n, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_chebyshev_polynomial_v.x_scalar(Scalar x, Tensor n) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_chebyshev_polynomial_v.x_scalar_out(Scalar x, Tensor n, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_chebyshev_polynomial_w(Tensor x, Tensor n) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_chebyshev_polynomial_w.n_scalar(Tensor x, Scalar n) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_chebyshev_polynomial_w.n_scalar_out(Tensor x, Scalar n, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_chebyshev_polynomial_w.out(Tensor x, Tensor n, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_chebyshev_polynomial_w.x_scalar(Scalar x, Tensor n) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_chebyshev_polynomial_w.x_scalar_out(Scalar x, Tensor n, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_digamma(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_digamma.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_entr(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_entr.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_erf(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_erf.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_erfc(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_erfc.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_erfcx(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_erfcx.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_erfinv(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_erfinv.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_exp2(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_exp2.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_expit(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_expit.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_expm1(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_expm1.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_gammainc(Tensor self, Tensor other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_gammainc.out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_gammaincc(Tensor self, Tensor other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_gammaincc.out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_gammaln(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_gammaln.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_hermite_polynomial_h(Tensor x, Tensor n) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_hermite_polynomial_h.n_scalar(Tensor x, Scalar n) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_hermite_polynomial_h.n_scalar_out(Tensor x, Scalar n, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_hermite_polynomial_h.out(Tensor x, Tensor n, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_hermite_polynomial_h.x_scalar(Scalar x, Tensor n) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_hermite_polynomial_h.x_scalar_out(Scalar x, Tensor n, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_hermite_polynomial_he(Tensor x, Tensor n) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_hermite_polynomial_he.n_scalar(Tensor x, Scalar n) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_hermite_polynomial_he.n_scalar_out(Tensor x, Scalar n, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_hermite_polynomial_he.out(Tensor x, Tensor n, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_hermite_polynomial_he.x_scalar(Scalar x, Tensor n) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_hermite_polynomial_he.x_scalar_out(Scalar x, Tensor n, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_i0(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_i0.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_i0e(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_i0e.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_i1(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_i1.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_i1e(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_i1e.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_laguerre_polynomial_l(Tensor x, Tensor n) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_laguerre_polynomial_l.n_scalar(Tensor x, Scalar n) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_laguerre_polynomial_l.n_scalar_out(Tensor x, Scalar n, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_laguerre_polynomial_l.out(Tensor x, Tensor n, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_laguerre_polynomial_l.x_scalar(Scalar x, Tensor n) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_laguerre_polynomial_l.x_scalar_out(Scalar x, Tensor n, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_legendre_polynomial_p(Tensor x, Tensor n) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_legendre_polynomial_p.n_scalar(Tensor x, Scalar n) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_legendre_polynomial_p.n_scalar_out(Tensor x, Scalar n, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_legendre_polynomial_p.out(Tensor x, Tensor n, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_legendre_polynomial_p.x_scalar(Scalar x, Tensor n) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_legendre_polynomial_p.x_scalar_out(Scalar x, Tensor n, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_log1p(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_log1p.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_log_ndtr(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_log_ndtr.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_log_softmax(Tensor self, int dim, *, ScalarType? dtype=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_logit(Tensor self, float? eps=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_logit.out(Tensor self, float? eps=None, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_logsumexp(Tensor self, int[1] dim, bool keepdim=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_logsumexp.out(Tensor self, int[1] dim, bool keepdim=False, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_modified_bessel_i0(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_modified_bessel_i0.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_modified_bessel_i1(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_modified_bessel_i1.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_modified_bessel_k0(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_modified_bessel_k0.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_modified_bessel_k1(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_modified_bessel_k1.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_multigammaln(Tensor self, int p) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_multigammaln.out(Tensor self, int p, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_ndtr(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_ndtr.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_ndtri(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_ndtri.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_polygamma(int n, Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_polygamma.out(int n, Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_psi(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_psi.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_round(Tensor self, *, int decimals=0) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_round.out(Tensor self, *, int decimals=0, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_scaled_modified_bessel_k0(Tensor x) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_scaled_modified_bessel_k0.out(Tensor x, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_scaled_modified_bessel_k1(Tensor x) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_scaled_modified_bessel_k1.out(Tensor x, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_shifted_chebyshev_polynomial_t(Tensor x, Tensor n) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_shifted_chebyshev_polynomial_t.n_scalar(Tensor x, Scalar n) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_shifted_chebyshev_polynomial_t.n_scalar_out(Tensor x, Scalar n, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_shifted_chebyshev_polynomial_t.out(Tensor x, Tensor n, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_shifted_chebyshev_polynomial_t.x_scalar(Scalar x, Tensor n) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_shifted_chebyshev_polynomial_t.x_scalar_out(Scalar x, Tensor n, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_shifted_chebyshev_polynomial_u(Tensor x, Tensor n) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_shifted_chebyshev_polynomial_u.n_scalar(Tensor x, Scalar n) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_shifted_chebyshev_polynomial_u.n_scalar_out(Tensor x, Scalar n, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_shifted_chebyshev_polynomial_u.out(Tensor x, Tensor n, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_shifted_chebyshev_polynomial_u.x_scalar(Scalar x, Tensor n) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_shifted_chebyshev_polynomial_u.x_scalar_out(Scalar x, Tensor n, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_shifted_chebyshev_polynomial_v(Tensor x, Tensor n) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_shifted_chebyshev_polynomial_v.n_scalar(Tensor x, Scalar n) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_shifted_chebyshev_polynomial_v.n_scalar_out(Tensor x, Scalar n, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_shifted_chebyshev_polynomial_v.out(Tensor x, Tensor n, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_shifted_chebyshev_polynomial_v.x_scalar(Scalar x, Tensor n) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_shifted_chebyshev_polynomial_v.x_scalar_out(Scalar x, Tensor n, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_shifted_chebyshev_polynomial_w(Tensor x, Tensor n) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_shifted_chebyshev_polynomial_w.n_scalar(Tensor x, Scalar n) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_shifted_chebyshev_polynomial_w.n_scalar_out(Tensor x, Scalar n, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_shifted_chebyshev_polynomial_w.out(Tensor x, Tensor n, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_shifted_chebyshev_polynomial_w.x_scalar(Scalar x, Tensor n) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_shifted_chebyshev_polynomial_w.x_scalar_out(Scalar x, Tensor n, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_sinc(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_sinc.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_softmax(Tensor self, int dim, ScalarType? dtype=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_spherical_bessel_j0(Tensor x) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_spherical_bessel_j0.out(Tensor x, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_xlog1py(Tensor self, Tensor other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_xlog1py.other_scalar(Tensor self, Scalar other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_xlog1py.other_scalar_out(Tensor self, Scalar other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_xlog1py.out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_xlog1py.self_scalar(Scalar self, Tensor other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_xlog1py.self_scalar_out(Scalar self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_xlogy(Tensor self, Tensor other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_xlogy.other_scalar(Tensor self, Scalar other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_xlogy.other_scalar_out(Tensor self, Scalar other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_xlogy.out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_xlogy.self_scalar(Scalar self, Tensor other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_xlogy.self_scalar_out(Scalar self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_zeta(Tensor self, Tensor other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_zeta.other_scalar(Tensor self, Scalar other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_zeta.other_scalar_out(Tensor self, Scalar other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_zeta.out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_zeta.self_scalar(Scalar self, Tensor other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::special_zeta.self_scalar_out(Scalar self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::split.Tensor(Tensor(a -> *) self, SymInt split_size, int dim=0) -> Tensor(a)[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::split.sizes(Tensor(a -> *) self, SymInt[] split_size, int dim=0) -> Tensor(a)[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::split_copy.Tensor(Tensor self, SymInt split_size, int dim=0) -> Tensor[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::split_copy.Tensor_out(Tensor self, SymInt split_size, int dim=0, *, Tensor(a!)[] out) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::split_with_sizes(Tensor(a -> *) self, SymInt[] split_sizes, int dim=0) -> Tensor(a)[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::split_with_sizes_copy(Tensor self, SymInt[] split_sizes, int dim=0) -> Tensor[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::split_with_sizes_copy.out(Tensor self, SymInt[] split_sizes, int dim=0, *, Tensor(a!)[] out) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::sqrt(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::sqrt.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::sqrt_(Tensor(a!) self) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::square(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::square.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::square_(Tensor(a!) self) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::squeeze(Tensor(a) self) -> Tensor(a)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::squeeze.dim(Tensor(a) self, int dim) -> Tensor(a)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::squeeze.dimname(Tensor(a) self, str dim) -> Tensor(a)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::squeeze.dims(Tensor(a) self, int[] dim) -> Tensor(a)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::squeeze_(Tensor(a!) self) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::squeeze_.dim(Tensor(a!) self, int dim) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::squeeze_.dimname(Tensor(a!) self, str dim) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::squeeze_.dims(Tensor(a!) self, int[] dim) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::squeeze_copy(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::squeeze_copy.dim(Tensor self, int dim) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::squeeze_copy.dim_out(Tensor self, int dim, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::squeeze_copy.dims(Tensor self, int[] dim) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::squeeze_copy.dims_out(Tensor self, int[] dim, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::squeeze_copy.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::sspaddmm(Tensor self, Tensor mat1, Tensor mat2, *, Scalar beta=1, Scalar alpha=1) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::sspaddmm.out(Tensor self, Tensor mat1, Tensor mat2, *, Scalar beta=1, Scalar alpha=1, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::stack(Tensor[] tensors, int dim=0) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::stack.out(Tensor[] tensors, int dim=0, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::std(Tensor self, bool unbiased=True) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::std.correction(Tensor self, int[1]? dim=None, *, int? correction=None, bool keepdim=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::std.correction_names(Tensor self, str[1] dim, *, int? correction=None, bool keepdim=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::std.correction_names_out(Tensor self, str[1] dim, *, int? correction=None, bool keepdim=False, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::std.correction_out(Tensor self, int[1]? dim=None, *, int? correction=None, bool keepdim=False, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::std.dim(Tensor self, int[1]? dim, bool unbiased=True, bool keepdim=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::std.names_dim(Tensor self, str[1] dim, bool unbiased=True, bool keepdim=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::std.names_out(Tensor self, str[1] dim, bool unbiased=True, bool keepdim=False, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::std.out(Tensor self, int[1]? dim, bool unbiased=True, bool keepdim=False, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::std_mean(Tensor self, bool unbiased=True) -> (Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::std_mean.correction(Tensor self, int[1]? dim=None, *, int? correction=None, bool keepdim=False) -> (Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::std_mean.correction_names(Tensor self, str[1] dim, *, int? correction=None, bool keepdim=False) -> (Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::std_mean.correction_out(Tensor self, int[1]? dim=None, *, int? correction=None, bool keepdim=False, Tensor(a!) out0, Tensor(b!) out1) -> (Tensor(a!), Tensor(b!))
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::std_mean.dim(Tensor self, int[1]? dim, bool unbiased=True, bool keepdim=False) -> (Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::std_mean.names_dim(Tensor self, str[1] dim, bool unbiased=True, bool keepdim=False) -> (Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::stft(Tensor self, int n_fft, int? hop_length=None, int? win_length=None, Tensor? window=None, bool normalized=False, bool? onesided=None, bool? return_complex=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::stft.center(Tensor self, int n_fft, int? hop_length=None, int? win_length=None, Tensor? window=None, bool center=True, str pad_mode="reflect", bool normalized=False, bool? onesided=None, bool? return_complex=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::stride.Dimname(Tensor self, str dim) -> int
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::stride.int(Tensor self, int dim) -> int
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::sub.Scalar(Tensor self, Scalar other, Scalar alpha=1) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::sub.Scalar_out(Tensor self, Scalar other, Scalar alpha=1, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::sub.Tensor(Tensor self, Tensor other, *, Scalar alpha=1) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::sub.out(Tensor self, Tensor other, *, Scalar alpha=1, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::sub_.Scalar(Tensor(a!) self, Scalar other, Scalar alpha=1) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::sub_.Tensor(Tensor(a!) self, Tensor other, *, Scalar alpha=1) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::subtract.Scalar(Tensor self, Scalar other, Scalar alpha=1) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::subtract.Tensor(Tensor self, Tensor other, *, Scalar alpha=1) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::subtract.out(Tensor self, Tensor other, *, Scalar alpha=1, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::subtract_.Scalar(Tensor(a!) self, Scalar other, Scalar alpha=1) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::subtract_.Tensor(Tensor(a!) self, Tensor other, *, Scalar alpha=1) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::sum(Tensor self, *, ScalarType? dtype=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::sum.DimnameList_out(Tensor self, str[1] dim, bool keepdim=False, *, ScalarType? dtype=None, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::sum.IntList_out(Tensor self, int[1]? dim, bool keepdim=False, *, ScalarType? dtype=None, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::sum.dim_DimnameList(Tensor self, str[1] dim, bool keepdim=False, *, ScalarType? dtype=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::sum.dim_IntList(Tensor self, int[1]? dim, bool keepdim=False, *, ScalarType? dtype=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::sum.out(Tensor self, *, ScalarType? dtype=None, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::sum_to_size(Tensor self, int[] size) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::svd(Tensor self, bool some=True, bool compute_uv=True) -> (Tensor U, Tensor S, Tensor V)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::svd.U(Tensor self, bool some=True, bool compute_uv=True, *, Tensor(a!) U, Tensor(b!) S, Tensor(c!) V) -> (Tensor(a!) U, Tensor(b!) S, Tensor(c!) V)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::swapaxes(Tensor(a) self, int axis0, int axis1) -> Tensor(a)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::swapaxes_(Tensor(a!) self, int axis0, int axis1) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::swapdims(Tensor(a) self, int dim0, int dim1) -> Tensor(a)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::swapdims_(Tensor(a!) self, int dim0, int dim1) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::t(Tensor(a) self) -> Tensor(a)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::t_(Tensor(a!) self) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::t_copy(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::t_copy.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::take(Tensor self, Tensor index) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::take.out(Tensor self, Tensor index, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::take_along_dim(Tensor self, Tensor indices, int? dim=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::take_along_dim.out(Tensor self, Tensor indices, int? dim=None, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::tan(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::tan.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::tan_(Tensor(a!) self) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::tanh(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::tanh.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::tanh_(Tensor(a!) self) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::tanh_backward(Tensor grad_output, Tensor output) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::tanh_backward.grad_input(Tensor grad_output, Tensor output, *, Tensor(a!) grad_input) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::tensor_split.indices(Tensor(a -> *) self, SymInt[] indices, int dim=0) -> Tensor(a)[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::tensor_split.sections(Tensor(a -> *) self, SymInt sections, int dim=0) -> Tensor(a)[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::tensor_split.tensor_indices_or_sections(Tensor(a -> *) self, Tensor tensor_indices_or_sections, int dim=0) -> Tensor(a)[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::tensordot(Tensor self, Tensor other, int[] dims_self, int[] dims_other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::tensordot.out(Tensor self, Tensor other, int[] dims_self, int[] dims_other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::thnn_conv2d(Tensor self, Tensor weight, int[2] kernel_size, Tensor? bias=None, int[2] stride=1, int[2] padding=0) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::thnn_conv2d.out(Tensor self, Tensor weight, int[2] kernel_size, Tensor? bias=None, int[2] stride=1, int[2] padding=0, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::threshold(Tensor self, Scalar threshold, Scalar value) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::threshold.out(Tensor self, Scalar threshold, Scalar value, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::threshold_(Tensor(a!) self, Scalar threshold, Scalar value) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::threshold_backward(Tensor grad_output, Tensor self, Scalar threshold) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::threshold_backward.grad_input(Tensor grad_output, Tensor self, Scalar threshold, *, Tensor(a!) grad_input) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::tile(Tensor self, int[] dims) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::to.device(Tensor(a) self, Device device, ScalarType dtype, bool non_blocking=False, bool copy=False, MemoryFormat? memory_format=None) -> Tensor(a)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::to.dtype(Tensor(a) self, ScalarType dtype, bool non_blocking=False, bool copy=False, MemoryFormat? memory_format=None) -> Tensor(a)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::to.dtype_layout(Tensor(a) self, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None, bool non_blocking=False, bool copy=False, MemoryFormat? memory_format=None) -> Tensor(a)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::to.other(Tensor(a) self, Tensor other, bool non_blocking=False, bool copy=False, MemoryFormat? memory_format=None) -> Tensor(a)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::to_dense(Tensor self, ScalarType? dtype=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::to_dense_backward(Tensor grad, Tensor input) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::to_mkldnn(Tensor self, ScalarType? dtype=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::to_mkldnn.out(Tensor self, ScalarType? dtype=None, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::to_mkldnn_backward(Tensor grad, Tensor input) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::to_padded_tensor(Tensor self, float padding, SymInt[]? output_size=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::to_padded_tensor.out(Tensor self, float padding, SymInt[]? output_size=None, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::to_sparse(Tensor self, *, Layout? layout=None, int[2]? blocksize=None, int? dense_dim=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::to_sparse.out(Tensor self, *, Layout? layout=None, int[2]? blocksize=None, int? dense_dim=None, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::to_sparse.sparse_dim(Tensor self, int sparse_dim) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::to_sparse.sparse_dim_out(Tensor self, int sparse_dim, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::to_sparse_bsc(Tensor self, int[2] blocksize, int? dense_dim=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::to_sparse_bsc.out(Tensor self, int[2] blocksize, int? dense_dim=None, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::to_sparse_bsr(Tensor self, int[2] blocksize, int? dense_dim=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::to_sparse_bsr.out(Tensor self, int[2] blocksize, int? dense_dim=None, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::to_sparse_csc(Tensor self, int? dense_dim=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::to_sparse_csc.out(Tensor self, int? dense_dim=None, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::to_sparse_csr(Tensor self, int? dense_dim=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::to_sparse_csr.out(Tensor self, int? dense_dim=None, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::topk(Tensor self, int k, int dim=-1, bool largest=True, bool sorted=True) -> (Tensor values, Tensor indices)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::topk.values(Tensor self, int k, int dim=-1, bool largest=True, bool sorted=True, *, Tensor(a!) values, Tensor(b!) indices) -> (Tensor(a!) values, Tensor(b!) indices)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::trace(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::trace.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::trace_backward(Tensor grad, SymInt[] sizes) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::transpose.Dimname(Tensor(a) self, str dim0, str dim1) -> Tensor(a)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::transpose.int(Tensor(a) self, int dim0, int dim1) -> Tensor(a)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::transpose_(Tensor(a!) self, int dim0, int dim1) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::transpose_copy.int(Tensor self, int dim0, int dim1) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::transpose_copy.int_out(Tensor self, int dim0, int dim1, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::trapezoid.dx(Tensor y, *, Scalar dx=1, int dim=-1) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::trapezoid.x(Tensor y, Tensor x, *, int dim=-1) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::trapz.dx(Tensor y, *, float dx=1., int dim=-1) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::trapz.x(Tensor y, Tensor x, *, int dim=-1) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::triangular_solve(Tensor self, Tensor A, bool upper=True, bool transpose=False, bool unitriangular=False) -> (Tensor solution, Tensor cloned_coefficient)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::triangular_solve.X(Tensor self, Tensor A, bool upper=True, bool transpose=False, bool unitriangular=False, *, Tensor(a!) X, Tensor(b!) M) -> (Tensor(a!) solution, Tensor(b!) cloned_coefficient)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::tril(Tensor self, int diagonal=0) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::tril.out(Tensor self, int diagonal=0, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::tril_(Tensor(a!) self, int diagonal=0) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::tril_indices(int row, int col, int offset=0, *, ScalarType? dtype=4, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::tril_indices.out(int row, int col, int offset=0, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::triplet_margin_loss(Tensor anchor, Tensor positive, Tensor negative, float margin=1., float p=2., float eps=9.9999999999999995e-07, bool swap=False, int reduction=1) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::triu(Tensor self, int diagonal=0) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::triu.out(Tensor self, int diagonal=0, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::triu_(Tensor(a!) self, int diagonal=0) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::triu_indices(int row, int col, int offset=0, *, ScalarType? dtype=4, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::triu_indices.out(int row, int col, int offset=0, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::true_divide.Scalar(Tensor self, Scalar other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::true_divide.Tensor(Tensor self, Tensor other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::true_divide.out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::true_divide_.Scalar(Tensor(a!) self, Scalar other) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::true_divide_.Tensor(Tensor(a!) self, Tensor other) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::trunc(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::trunc.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::trunc_(Tensor(a!) self) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::type_as(Tensor self, Tensor other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::unbind.Dimname(Tensor(a -> *) self, str dim) -> Tensor(a)[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::unbind.int(Tensor(a -> *) self, int dim=0) -> Tensor(a)[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::unbind_copy.int(Tensor self, int dim=0) -> Tensor[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::unbind_copy.int_out(Tensor self, int dim=0, *, Tensor(a!)[] out) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::unflatten.Dimname(Tensor(a) self, str dim, int[] sizes, str[] names) -> Tensor(a)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::unflatten.int(Tensor(a) self, int dim, int[] sizes) -> Tensor(a)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::unflatten_dense_tensors(Tensor flat, Tensor[] tensors) -> Tensor[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::unfold(Tensor(a) self, int dimension, int size, int step) -> Tensor(a)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::unfold_backward(Tensor grad_in, SymInt[] input_sizes, int dim, int size, int step) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::unfold_backward.out(Tensor grad_in, SymInt[] input_sizes, int dim, int size, int step, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::unfold_copy(Tensor self, int dimension, int size, int step) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::unfold_copy.out(Tensor self, int dimension, int size, int step, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::uniform(Tensor self, float from=0., float to=1., *, Generator? generator=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::uniform.out(Tensor self, float from=0., float to=1., *, Generator? generator=None, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::uniform_(Tensor(a!) self, float from=0., float to=1., *, Generator? generator=None) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::unique_consecutive(Tensor self, bool return_inverse=False, bool return_counts=False, int? dim=None) -> (Tensor, Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::unique_consecutive.out(Tensor self, bool return_inverse=False, bool return_counts=False, int? dim=None, *, Tensor(a!) out0, Tensor(b!) out1, Tensor(c!) out2) -> (Tensor(a!), Tensor(b!), Tensor(c!))
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::unique_dim(Tensor self, int dim, bool sorted=True, bool return_inverse=False, bool return_counts=False) -> (Tensor, Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::unique_dim.out(Tensor self, int dim, bool sorted=True, bool return_inverse=False, bool return_counts=False, *, Tensor(a!) out0, Tensor(b!) out1, Tensor(c!) out2) -> (Tensor(a!), Tensor(b!), Tensor(c!))
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::unique_dim_consecutive(Tensor self, int dim, bool return_inverse=False, bool return_counts=False) -> (Tensor, Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::unique_dim_consecutive.out(Tensor self, int dim, bool return_inverse=False, bool return_counts=False, *, Tensor(a!) out0, Tensor(b!) out1, Tensor(c!) out2) -> (Tensor(a!), Tensor(b!), Tensor(c!))
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::unsafe_chunk(Tensor self, int chunks, int dim=0) -> Tensor[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::unsafe_split.Tensor(Tensor self, SymInt split_size, int dim=0) -> Tensor[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::unsafe_split.Tensor_out(Tensor self, SymInt split_size, int dim=0, *, Tensor(a!)[] out) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::unsafe_split_with_sizes(Tensor self, SymInt[] split_sizes, int dim=0) -> Tensor[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::unsafe_split_with_sizes.out(Tensor self, SymInt[] split_sizes, int dim=0, *, Tensor(a!)[] out) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::unsqueeze(Tensor(a) self, int dim) -> Tensor(a)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::unsqueeze_(Tensor(a!) self, int dim) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::unsqueeze_copy(Tensor self, int dim) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::unsqueeze_copy.out(Tensor self, int dim, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::upsample_bicubic2d(Tensor self, SymInt[2] output_size, bool align_corners, float? scales_h=None, float? scales_w=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::upsample_bicubic2d.out(Tensor self, SymInt[2] output_size, bool align_corners, float? scales_h=None, float? scales_w=None, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::upsample_bicubic2d.vec(Tensor input, SymInt[]? output_size, bool align_corners, float[]? scale_factors) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::upsample_bicubic2d_backward(Tensor grad_output, SymInt[2] output_size, SymInt[4] input_size, bool align_corners, float? scales_h=None, float? scales_w=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::upsample_bicubic2d_backward.grad_input(Tensor grad_output, SymInt[2] output_size, SymInt[4] input_size, bool align_corners, float? scales_h=None, float? scales_w=None, *, Tensor(a!) grad_input) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::upsample_bilinear2d(Tensor self, SymInt[2] output_size, bool align_corners, float? scales_h=None, float? scales_w=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::upsample_bilinear2d.out(Tensor self, SymInt[2] output_size, bool align_corners, float? scales_h=None, float? scales_w=None, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::upsample_bilinear2d.vec(Tensor input, SymInt[]? output_size, bool align_corners, float[]? scale_factors) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::upsample_bilinear2d_backward(Tensor grad_output, SymInt[2] output_size, SymInt[4] input_size, bool align_corners, float? scales_h=None, float? scales_w=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::upsample_bilinear2d_backward.grad_input(Tensor grad_output, SymInt[2] output_size, SymInt[4] input_size, bool align_corners, float? scales_h=None, float? scales_w=None, *, Tensor(a!) grad_input) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::upsample_linear1d(Tensor self, SymInt[1] output_size, bool align_corners, float? scales=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::upsample_linear1d.out(Tensor self, SymInt[1] output_size, bool align_corners, float? scales=None, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::upsample_linear1d.vec(Tensor input, SymInt[]? output_size, bool align_corners, float[]? scale_factors) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::upsample_linear1d_backward(Tensor grad_output, SymInt[1] output_size, SymInt[3] input_size, bool align_corners, float? scales=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::upsample_linear1d_backward.grad_input(Tensor grad_output, SymInt[1] output_size, SymInt[3] input_size, bool align_corners, float? scales=None, *, Tensor(a!) grad_input) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::upsample_nearest1d(Tensor self, SymInt[1] output_size, float? scales=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::upsample_nearest1d.out(Tensor self, SymInt[1] output_size, float? scales=None, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::upsample_nearest1d.vec(Tensor input, SymInt[]? output_size, float[]? scale_factors) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::upsample_nearest1d_backward(Tensor grad_output, SymInt[1] output_size, SymInt[3] input_size, float? scales=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::upsample_nearest1d_backward.grad_input(Tensor grad_output, SymInt[1] output_size, SymInt[3] input_size, float? scales=None, *, Tensor(a!) grad_input) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::upsample_nearest2d(Tensor self, SymInt[2] output_size, float? scales_h=None, float? scales_w=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::upsample_nearest2d.out(Tensor self, SymInt[2] output_size, float? scales_h=None, float? scales_w=None, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::upsample_nearest2d.vec(Tensor input, SymInt[]? output_size, float[]? scale_factors) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::upsample_nearest2d_backward(Tensor grad_output, SymInt[2] output_size, SymInt[4] input_size, float? scales_h=None, float? scales_w=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::upsample_nearest2d_backward.grad_input(Tensor grad_output, SymInt[2] output_size, SymInt[4] input_size, float? scales_h=None, float? scales_w=None, *, Tensor(a!) grad_input) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::upsample_nearest3d(Tensor self, SymInt[3] output_size, float? scales_d=None, float? scales_h=None, float? scales_w=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::upsample_nearest3d.out(Tensor self, SymInt[3] output_size, float? scales_d=None, float? scales_h=None, float? scales_w=None, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::upsample_nearest3d.vec(Tensor input, SymInt[]? output_size, float[]? scale_factors) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::upsample_nearest3d_backward(Tensor grad_output, SymInt[3] output_size, SymInt[5] input_size, float? scales_d=None, float? scales_h=None, float? scales_w=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::upsample_nearest3d_backward.grad_input(Tensor grad_output, SymInt[3] output_size, SymInt[5] input_size, float? scales_d=None, float? scales_h=None, float? scales_w=None, *, Tensor(a!) grad_input) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::upsample_trilinear3d(Tensor self, SymInt[3] output_size, bool align_corners, float? scales_d=None, float? scales_h=None, float? scales_w=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::upsample_trilinear3d.out(Tensor self, SymInt[3] output_size, bool align_corners, float? scales_d=None, float? scales_h=None, float? scales_w=None, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::upsample_trilinear3d.vec(Tensor input, SymInt[]? output_size, bool align_corners, float[]? scale_factors) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::upsample_trilinear3d_backward(Tensor grad_output, SymInt[3] output_size, SymInt[5] input_size, bool align_corners, float? scales_d=None, float? scales_h=None, float? scales_w=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::upsample_trilinear3d_backward.grad_input(Tensor grad_output, SymInt[3] output_size, SymInt[5] input_size, bool align_corners, float? scales_d=None, float? scales_h=None, float? scales_w=None, *, Tensor(a!) grad_input) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::value_selecting_reduction_backward(Tensor grad, int dim, Tensor indices, SymInt[] sizes, bool keepdim) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::values(Tensor(a) self) -> Tensor(a)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::values_copy(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::values_copy.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::vander(Tensor x, int? N=None, bool increasing=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::var(Tensor self, bool unbiased=True) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::var.correction(Tensor self, int[1]? dim=None, *, int? correction=None, bool keepdim=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::var.correction_names(Tensor self, str[1] dim, *, int? correction=None, bool keepdim=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::var.correction_names_out(Tensor self, str[1] dim, *, int? correction=None, bool keepdim=False, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::var.correction_out(Tensor self, int[1]? dim=None, *, int? correction=None, bool keepdim=False, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::var.dim(Tensor self, int[1]? dim, bool unbiased=True, bool keepdim=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::var.names_dim(Tensor self, str[1] dim, bool unbiased=True, bool keepdim=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::var.names_out(Tensor self, str[1] dim, bool unbiased=True, bool keepdim=False, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::var.out(Tensor self, int[1]? dim, bool unbiased=True, bool keepdim=False, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::var_mean(Tensor self, bool unbiased=True) -> (Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::var_mean.correction(Tensor self, int[1]? dim=None, *, int? correction=None, bool keepdim=False) -> (Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::var_mean.correction_names(Tensor self, str[1] dim, *, int? correction=None, bool keepdim=False) -> (Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::var_mean.correction_out(Tensor self, int[1]? dim=None, *, int? correction=None, bool keepdim=False, Tensor(a!) out0, Tensor(b!) out1) -> (Tensor(a!), Tensor(b!))
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::var_mean.dim(Tensor self, int[1]? dim, bool unbiased=True, bool keepdim=False) -> (Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::var_mean.names_dim(Tensor self, str[1] dim, bool unbiased=True, bool keepdim=False) -> (Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::vdot(Tensor self, Tensor other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::vdot.out(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::view(Tensor(a) self, SymInt[] size) -> Tensor(a)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::view.dtype(Tensor(a) self, ScalarType dtype) -> Tensor(a)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::view_as(Tensor(a) self, Tensor other) -> Tensor(a)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::view_as_complex(Tensor(a) self) -> Tensor(a)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::view_as_complex_copy(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::view_as_complex_copy.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::view_as_real(Tensor(a) self) -> Tensor(a)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::view_as_real_copy(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::view_as_real_copy.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::view_copy(Tensor self, SymInt[] size) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::view_copy.dtype(Tensor self, ScalarType dtype) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::view_copy.dtype_out(Tensor self, ScalarType dtype, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::view_copy.out(Tensor self, SymInt[] size, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::vsplit.array(Tensor(a -> *) self, int[] indices) -> Tensor(a)[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::vsplit.int(Tensor(a -> *) self, int sections) -> Tensor(a)[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::vstack(Tensor[] tensors) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::vstack.out(Tensor[] tensors, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::where(Tensor condition) -> Tensor[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::where.Scalar(Tensor condition, Scalar self, Scalar other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::where.ScalarOther(Tensor condition, Tensor self, Scalar other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::where.ScalarSelf(Tensor condition, Scalar self, Tensor other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::where.self(Tensor condition, Tensor self, Tensor other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::where.self_out(Tensor condition, Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::xlogy.OutScalar_Other(Tensor self, Scalar other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::xlogy.OutScalar_Self(Scalar self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::xlogy.OutTensor(Tensor self, Tensor other, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::xlogy.Scalar_Other(Tensor self, Scalar other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::xlogy.Scalar_Self(Scalar self, Tensor other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::xlogy.Tensor(Tensor self, Tensor other) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::xlogy_.Scalar_Other(Tensor(a!) self, Scalar other) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::xlogy_.Tensor(Tensor(a!) self, Tensor other) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::zero(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::zero.out(Tensor self, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::zero_(Tensor(a!) self) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::zeros(SymInt[] size, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::zeros.names(int[] size, *, str[]? names, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::zeros.names_out(int[] size, *, str[]? names, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::zeros.out(SymInt[] size, *, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::zeros_like(Tensor self, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None, MemoryFormat? memory_format=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
aten::zeros_like.out(Tensor self, *, MemoryFormat? memory_format=None, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/build/aten/src/ATen/RegisterSchema.cpp:6
-------------------
operator schema:
c10d::_allgather_base_(Tensor output_tensor, Tensor input_tensor, __torch__.torch.classes.c10d.ProcessGroup process_group) -> (Tensor, __torch__.torch.classes.c10d.Work)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/torch/csrc/distributed/c10d/Ops.cpp:10
-------------------
operator schema:
c10d::_reduce_scatter_base_(Tensor output_tensor, Tensor input_tensor, __torch__.torch.classes.c10d.ProcessGroup process_group, __torch__.torch.classes.c10d.ReduceOp reduce_op, int timeout) -> (Tensor, __torch__.torch.classes.c10d.Work)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/torch/csrc/distributed/c10d/Ops.cpp:10
-------------------
operator schema:
c10d::allgather_(Tensor[][] output_tensors, Tensor[] input_tensors, __torch__.torch.classes.c10d.ProcessGroup process_group, int timeout) -> (Tensor[][], __torch__.torch.classes.c10d.Work)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/torch/csrc/distributed/c10d/Ops.cpp:10
-------------------
operator schema:
c10d::allgather_coalesced_(Tensor[][] output_lists, Tensor[] input_list, __torch__.torch.classes.c10d.ProcessGroup process_group) -> __torch__.torch.classes.c10d.Work
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/torch/csrc/distributed/c10d/Ops.cpp:10
-------------------
operator schema:
c10d::allreduce_(Tensor[] tensors, __torch__.torch.classes.c10d.ProcessGroup process_group, __torch__.torch.classes.c10d.ReduceOp reduce_op, int timeout) -> (Tensor[], __torch__.torch.classes.c10d.Work)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/torch/csrc/distributed/c10d/Ops.cpp:10
-------------------
operator schema:
c10d::allreduce_coalesced_(Tensor[] tensors, __torch__.torch.classes.c10d.ProcessGroup process_group, __torch__.torch.classes.c10d.ReduceOp reduce_op, int timeout) -> __torch__.torch.classes.c10d.Work
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/torch/csrc/distributed/c10d/Ops.cpp:10
-------------------
operator schema:
c10d::alltoall_(Tensor[] output_tensors, Tensor[] input_tensors, __torch__.torch.classes.c10d.ProcessGroup process_group, int timeout) -> (Tensor[], __torch__.torch.classes.c10d.Work)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/torch/csrc/distributed/c10d/Ops.cpp:10
-------------------
operator schema:
c10d::alltoall_base_(Tensor output, Tensor input, __torch__.torch.classes.c10d.ProcessGroup process_group, int[] output_split_sizes, int[] input_split_sizes, int timeout) -> __torch__.torch.classes.c10d.Work
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/torch/csrc/distributed/c10d/Ops.cpp:10
-------------------
operator schema:
c10d::barrier(Tensor tensor, __torch__.torch.classes.c10d.ProcessGroup process_group, int[] device_ids, int timeout) -> __torch__.torch.classes.c10d.Work
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/torch/csrc/distributed/c10d/Ops.cpp:10
-------------------
operator schema:
c10d::broadcast_(Tensor[] tensors, __torch__.torch.classes.c10d.ProcessGroup process_group, int root_rank, int root_tensor, int timeout) -> (Tensor[], __torch__.torch.classes.c10d.Work)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/torch/csrc/distributed/c10d/Ops.cpp:10
-------------------
operator schema:
c10d::gather_(Tensor[][] output_tensors, Tensor[] input_tensors, __torch__.torch.classes.c10d.ProcessGroup process_group, int root_rank, int timeout) -> __torch__.torch.classes.c10d.Work
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/torch/csrc/distributed/c10d/Ops.cpp:10
-------------------
operator schema:
c10d::monitored_barrier_(Tensor tensor, __torch__.torch.classes.c10d.ProcessGroup process_group, int[] device_ids, int timeout, bool wait_all_ranks) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/torch/csrc/distributed/c10d/Ops.cpp:10
-------------------
operator schema:
c10d::recv_(Tensor[] tensors, __torch__.torch.classes.c10d.ProcessGroup process_group, int src, int tag) -> __torch__.torch.classes.c10d.Work
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/torch/csrc/distributed/c10d/Ops.cpp:10
-------------------
operator schema:
c10d::recv_any_source_(Tensor[] tensors, __torch__.torch.classes.c10d.ProcessGroup process_group, int tag) -> __torch__.torch.classes.c10d.Work
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/torch/csrc/distributed/c10d/Ops.cpp:10
-------------------
operator schema:
c10d::reduce_(Tensor[] tensors, __torch__.torch.classes.c10d.ProcessGroup process_group, __torch__.torch.classes.c10d.ReduceOp reduce_op, int root_rank, int root_tensor, int timeout) -> __torch__.torch.classes.c10d.Work
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/torch/csrc/distributed/c10d/Ops.cpp:10
-------------------
operator schema:
c10d::reduce_scatter_(Tensor[] output_tensors, Tensor[][] input_tensors, __torch__.torch.classes.c10d.ProcessGroup process_group, __torch__.torch.classes.c10d.ReduceOp reduce_op, int timeout) -> (Tensor[], __torch__.torch.classes.c10d.Work)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/torch/csrc/distributed/c10d/Ops.cpp:10
-------------------
operator schema:
c10d::scatter_(Tensor[] output_tensors, Tensor[][] input_tensors, __torch__.torch.classes.c10d.ProcessGroup process_group, int root_rank, int timeout) -> (Tensor[], __torch__.torch.classes.c10d.Work)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/torch/csrc/distributed/c10d/Ops.cpp:10
-------------------
operator schema:
c10d::send(Tensor[] tensors, __torch__.torch.classes.c10d.ProcessGroup process_group, int dst, int tag) -> __torch__.torch.classes.c10d.Work
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/torch/csrc/distributed/c10d/Ops.cpp:10
-------------------
operator schema:
mkl::_mkl_linear(Tensor X, Tensor MKL_W, Tensor ORI_W, Tensor? B, int batch_size) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/mkldnn/RegisterMkldnnOpContextClass.cpp:80
-------------------
operator schema:
mkl::_mkl_reorder_linear_weight(Tensor X, int batch_size) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/mkldnn/RegisterMkldnnOpContextClass.cpp:80
-------------------
operator schema:
mkldnn::_convolution_pointwise(Tensor X, Tensor W, Tensor? B, int[] padding, int[] stride, int[] dilation, int groups, str attr, Scalar?[] scalars, str? algorithm) -> Tensor Y
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/mkldnn/RegisterMkldnnOpContextClass.cpp:15
-------------------
operator schema:
mkldnn::_convolution_pointwise.binary(Tensor X, Tensor other, Tensor W, Tensor? B, int[] padding, int[] stride, int[] dilation, int groups, str binary_attr, Scalar? alpha, str? unary_attr, Scalar?[] unary_scalars, str? unary_algorithm) -> Tensor Y
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/mkldnn/RegisterMkldnnOpContextClass.cpp:15
-------------------
operator schema:
mkldnn::_convolution_pointwise_.binary(Tensor X, Tensor(a!) other, Tensor W, Tensor? B, int[] padding, int[] stride, int[] dilation, int groups, str binary_attr, Scalar? alpha, str? unary_attr, Scalar?[] unary_scalars, str? unary_algorithm) -> Tensor(a!) Y
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/mkldnn/RegisterMkldnnOpContextClass.cpp:15
-------------------
operator schema:
mkldnn::_convolution_transpose_pointwise(Tensor X, Tensor W, Tensor? B, int[] padding, int[] output_padding, int[] stride, int[] dilation, int groups, str attr, Scalar?[] scalars, str? algorithm) -> Tensor Y
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/mkldnn/RegisterMkldnnOpContextClass.cpp:15
-------------------
operator schema:
mkldnn::_linear_pointwise(Tensor X, Tensor W, Tensor? B, str attr, Scalar?[] scalars, str? algorithm) -> Tensor Y
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/mkldnn/RegisterMkldnnOpContextClass.cpp:15
-------------------
operator schema:
mkldnn::_linear_pointwise.binary(Tensor X, Tensor other, Tensor W, Tensor? B, str attr) -> Tensor Y
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/mkldnn/RegisterMkldnnOpContextClass.cpp:15
-------------------
operator schema:
mkldnn::_reorder_convolution_transpose_weight(Tensor self, int[2] padding=0, int[2] output_padding=0, int[2] stride=1, int[2] dilation=1, int groups=1, int[]? input_size=None) -> Tensor Y
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/mkldnn/RegisterMkldnnOpContextClass.cpp:15
-------------------
operator schema:
mkldnn_prepacked::conv2d_prepack(Tensor W, Tensor? B, int[2] stride, int[2] padding, int[2] dilation, int groups, int[4] input_size, str attr) -> __torch__.torch.classes.mkldnn.ConvOpContext
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/mkldnn/RegisterMkldnnOpContextClass.cpp:51
-------------------
operator schema:
mkldnn_prepacked::conv2d_run(Tensor X, __torch__.torch.classes.mkldnn.ConvOpContext W_prepack) -> Tensor Y
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/mkldnn/RegisterMkldnnOpContextClass.cpp:51
-------------------
operator schema:
prepacked::conv2d_clamp_prepack(Tensor W, Tensor? B, int[2] stride, int[2] padding, int[2] dilation, int groups, Scalar? output_min=None, Scalar? output_max=None) -> __torch__.torch.classes.xnnpack.Conv2dOpContext
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/xnnpack/RegisterOpContextClass.cpp:76
-------------------
operator schema:
prepacked::conv2d_clamp_run(Tensor X, __torch__.torch.classes.xnnpack.Conv2dOpContext W_prepack) -> Tensor Y
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/xnnpack/RegisterOpContextClass.cpp:76
-------------------
operator schema:
prepacked::conv2d_transpose_clamp_prepack(Tensor W, Tensor? B, int[2] stride, int[2] padding, int[2] output_padding, int[2] dilation, int groups, Scalar? output_min=None, Scalar? output_max=None) -> __torch__.torch.classes.xnnpack.TransposeConv2dOpContext
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/xnnpack/RegisterOpContextClass.cpp:76
-------------------
operator schema:
prepacked::conv2d_transpose_clamp_run(Tensor X, __torch__.torch.classes.xnnpack.TransposeConv2dOpContext W_prepack) -> Tensor Y
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/xnnpack/RegisterOpContextClass.cpp:76
-------------------
operator schema:
prepacked::linear_clamp_prepack(Tensor W, Tensor? B=None, Scalar? output_min=None, Scalar? output_max=None) -> __torch__.torch.classes.xnnpack.LinearOpContext
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/xnnpack/RegisterOpContextClass.cpp:76
-------------------
operator schema:
prepacked::linear_clamp_run(Tensor X, __torch__.torch.classes.xnnpack.LinearOpContext W_prepack) -> Tensor Y
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/xnnpack/RegisterOpContextClass.cpp:76
-------------------
operator schema:
prepacked::unpack_prepacked_sizes_conv2d(Any W_prepack) -> Any
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/xnnpack/RegisterOpContextClass.cpp:76
-------------------
operator schema:
prepacked::unpack_prepacked_sizes_linear(Any W_prepack) -> Any
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/xnnpack/RegisterOpContextClass.cpp:76
-------------------
operator schema:
profiler::_record_function_enter(str name, str? args=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/torch/csrc/autograd/record_function_ops.cpp:128
-------------------
operator schema:
profiler::_record_function_enter_new(str name, str? args=None) -> __torch__.torch.classes.profiler._RecordFunction
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/torch/csrc/autograd/record_function_ops.cpp:128
-------------------
operator schema:
profiler::_record_function_exit(Tensor _0) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/torch/csrc/autograd/record_function_ops.cpp:128
-------------------
operator schema:
profiler::_record_function_exit._RecordFunction(__torch__.torch.classes.profiler._RecordFunction _0) -> ()
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/torch/csrc/autograd/record_function_ops.cpp:128
-------------------
operator schema:
quantization::_Bfloat16QuantizedToFloat(Tensor input) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/torch/csrc/distributed/c10d/quantization/quantization.cpp:92
-------------------
operator schema:
quantization::_FloatToBfloat16Quantized(Tensor input) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/torch/csrc/distributed/c10d/quantization/quantization.cpp:92
-------------------
operator schema:
quantized::add(Tensor qa, Tensor qb, float scale, int zero_point) -> Tensor qc
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::add.Scalar(Tensor qa, Scalar b) -> Tensor qc
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::add.Scalar2(Scalar b, Tensor qa) -> Tensor qc
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::add.Scalar_out(Tensor qa, Scalar b, Tensor(a!) out) -> Tensor(a!) out
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::add.out(Tensor qa, Tensor qb, Tensor(a!) out) -> Tensor(a!) out
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::add_out(Tensor qa, Tensor qb, Tensor(a!) out) -> Tensor(a!) out
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::add_relu(Tensor qa, Tensor qb, float scale, int zero_point) -> Tensor qc
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::add_relu.Scalar(Tensor qa, Scalar b) -> Tensor qc
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::add_relu.Scalar2(Scalar b, Tensor qa) -> Tensor qc
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::add_relu.Scalar_out(Tensor qa, Scalar b, Tensor(a!) out) -> Tensor(a!) out
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::add_relu.out(Tensor qa, Tensor qb, Tensor(a!) out) -> Tensor(a!) out
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::add_relu_out(Tensor qa, Tensor qb, Tensor(a!) out) -> Tensor(a!) out
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::add_scalar(Tensor qa, Scalar b) -> Tensor qc
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::add_scalar.Tensor(Tensor qa, Tensor b) -> Tensor qc
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::add_scalar_out(Tensor qa, Scalar b, Tensor(a!) out) -> Tensor(a!) out
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::add_scalar_out.Tensor(Tensor qa, Tensor b, Tensor(a!) out) -> Tensor(a!) out
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::add_scalar_relu(Tensor qa, Scalar b) -> Tensor qc
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::add_scalar_relu.Tensor(Tensor qa, Tensor b) -> Tensor qc
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::add_scalar_relu_out(Tensor qa, Scalar b, Tensor(a!) out) -> Tensor(a!) out
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::add_scalar_relu_out.Tensor(Tensor qa, Tensor b, Tensor(a!) out) -> Tensor(a!) out
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::batch_norm(Tensor qx, Tensor? weight, Tensor? bias, Tensor mean, Tensor var, float eps, float output_scale, int output_zero_point) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::batch_norm1d(Tensor qx, Tensor? weight, Tensor? bias, Tensor mean, Tensor var, float eps, float output_scale, int output_zero_point) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::batch_norm1d_relu(Tensor qx, Tensor? weight, Tensor? bias, Tensor mean, Tensor var, float eps, float output_scale, int output_zero_point) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::batch_norm2d(Tensor qx, Tensor? weight, Tensor? bias, Tensor mean, Tensor var, float eps, float output_scale, int output_zero_point) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::batch_norm2d_relu(Tensor qx, Tensor? weight, Tensor? bias, Tensor mean, Tensor var, float eps, float output_scale, int output_zero_point) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::batch_norm3d(Tensor qx, Tensor? weight, Tensor? bias, Tensor mean, Tensor var, float eps, float output_scale, int output_zero_point) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::batch_norm3d_relu(Tensor qx, Tensor? weight, Tensor? bias, Tensor mean, Tensor var, float eps, float output_scale, int output_zero_point) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::batch_norm_relu(Tensor qx, Tensor? weight, Tensor? bias, Tensor mean, Tensor var, float eps, float output_scale, int output_zero_point) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::cat(Tensor[] qx, int dim, float? scale, int? zero_point) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::cat_out(Tensor[] qx, int dim, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::cat_relu(Tensor[] qx, int dim, float? scale, int? zero_point) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::cat_relu_out(Tensor[] qx, int dim, Tensor(a!) out) -> Tensor(a!)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::celu(Tensor self, float output_scale, int output_zero_point, Scalar alpha=1) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::clamp(Tensor qx, Scalar? min=None, Scalar? max=None) -> Tensor qy
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::conv1d(Tensor qx, __torch__.torch.classes.quantized.Conv2dPackedParamsBase packed_weight, float output_scale, int output_zero_point) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::conv1d_dynamic(Tensor qx, __torch__.torch.classes.quantized.Conv2dPackedParamsBase packed_weight, bool reduce_range=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::conv1d_prepack(Tensor weight, Tensor? bias, int[] stride, int[] padding, int[] dilation, int groups) -> __torch__.torch.classes.quantized.Conv2dPackedParamsBase
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::conv1d_relu(Tensor qx, __torch__.torch.classes.quantized.Conv2dPackedParamsBase packed_weight, float output_scale, int output_zero_point) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::conv1d_unpack(__torch__.torch.classes.quantized.Conv2dPackedParamsBase packed_weights) -> (Tensor unpacked_weights, Tensor? B_origin)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::conv2d(Tensor qx, __torch__.torch.classes.quantized.Conv2dPackedParamsBase weight, int[] stride, int[] padding, int[] dilation, int groups, float output_scale, int output_zero_point) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::conv2d.new(Tensor qx, __torch__.torch.classes.quantized.Conv2dPackedParamsBase packed_weight, float output_scale, int output_zero_point) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::conv2d_add(Tensor qx, Tensor qaccum, __torch__.torch.classes.quantized.Conv2dPackedParamsBase packed_weight, float output_scale, int output_zero_point) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::conv2d_add_relu(Tensor qx, Tensor qaccum, __torch__.torch.classes.quantized.Conv2dPackedParamsBase packed_weight, float output_scale, int output_zero_point) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::conv2d_dilation(__torch__.torch.classes.quantized.Conv2dPackedParamsBase packed_weights) -> int[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::conv2d_dynamic(Tensor qx, __torch__.torch.classes.quantized.Conv2dPackedParamsBase packed_weight, bool reduce_range=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::conv2d_groups(__torch__.torch.classes.quantized.Conv2dPackedParamsBase packed_weights) -> int
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::conv2d_output_padding(__torch__.torch.classes.quantized.Conv2dPackedParamsBase packed_weights) -> int[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::conv2d_padding(__torch__.torch.classes.quantized.Conv2dPackedParamsBase packed_weights) -> int[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::conv2d_prepack(Tensor weight, Tensor? bias, int[] stride, int[] padding, int[] dilation, int groups) -> __torch__.torch.classes.quantized.Conv2dPackedParamsBase
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::conv2d_relu(Tensor qx, __torch__.torch.classes.quantized.Conv2dPackedParamsBase weight, int[] stride, int[] padding, int[] dilation, int groups, float output_scale, int output_zero_point) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::conv2d_relu.new(Tensor qx, __torch__.torch.classes.quantized.Conv2dPackedParamsBase packed_weight, float output_scale, int output_zero_point) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::conv2d_stride(__torch__.torch.classes.quantized.Conv2dPackedParamsBase packed_weights) -> int[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::conv2d_transpose(__torch__.torch.classes.quantized.Conv2dPackedParamsBase packed_weights) -> int
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::conv2d_unpack(__torch__.torch.classes.quantized.Conv2dPackedParamsBase packed_weights) -> (Tensor unpacked_weights, Tensor? B_origin)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::conv2d_unpack_sizes(Any packed_weights) -> Any
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::conv3d(Tensor qx, __torch__.torch.classes.quantized.Conv3dPackedParamsBase weight, int[] stride, int[] padding, int[] dilation, int groups, float output_scale, int output_zero_point) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::conv3d.new(Tensor qx, __torch__.torch.classes.quantized.Conv3dPackedParamsBase packed_weight, float output_scale, int output_zero_point) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::conv3d_dilation(__torch__.torch.classes.quantized.Conv3dPackedParamsBase packed_weights) -> int[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::conv3d_dynamic(Tensor qx, __torch__.torch.classes.quantized.Conv3dPackedParamsBase packed_weight, bool reduce_range=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::conv3d_groups(__torch__.torch.classes.quantized.Conv3dPackedParamsBase packed_weights) -> int
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::conv3d_output_padding(__torch__.torch.classes.quantized.Conv3dPackedParamsBase packed_weights) -> int[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::conv3d_padding(__torch__.torch.classes.quantized.Conv3dPackedParamsBase packed_weights) -> int[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::conv3d_prepack(Tensor weight, Tensor? bias, int[] stride, int[] padding, int[] dilation, int groups) -> __torch__.torch.classes.quantized.Conv3dPackedParamsBase
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::conv3d_relu(Tensor qx, __torch__.torch.classes.quantized.Conv3dPackedParamsBase weight, int[] stride, int[] padding, int[] dilation, int groups, float output_scale, int output_zero_point) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::conv3d_relu.new(Tensor qx, __torch__.torch.classes.quantized.Conv3dPackedParamsBase packed_weight, float output_scale, int output_zero_point) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::conv3d_stride(__torch__.torch.classes.quantized.Conv3dPackedParamsBase packed_weights) -> int[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::conv3d_transpose(__torch__.torch.classes.quantized.Conv3dPackedParamsBase packed_weights) -> int
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::conv3d_unpack(__torch__.torch.classes.quantized.Conv3dPackedParamsBase packed_weights) -> (Tensor unpacked_weights, Tensor? B_origin)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::conv_prepack(Tensor weight, Tensor? bias, int[] stride, int[] padding, int[] dilation, int groups) -> __torch__.torch.classes.quantized.Conv2dPackedParamsBase
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::conv_transpose1d(Tensor qx, __torch__.torch.classes.quantized.Conv2dPackedParamsBase packed_weight, float output_scale, int output_zero_point) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::conv_transpose1d_dynamic(Tensor qx, __torch__.torch.classes.quantized.Conv2dPackedParamsBase packed_weight, bool reduce_range=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::conv_transpose1d_prepack(Tensor weight, Tensor? bias, int[] stride, int[] padding, int[] output_padding, int[] dilation, int groups) -> __torch__.torch.classes.quantized.Conv2dPackedParamsBase
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::conv_transpose1d_unpack(__torch__.torch.classes.quantized.Conv2dPackedParamsBase packed_weights) -> (Tensor unpacked_weights, Tensor? B_origin)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::conv_transpose2d(Tensor qx, __torch__.torch.classes.quantized.Conv2dPackedParamsBase packed_weight, float output_scale, int output_zero_point) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::conv_transpose2d_dilation(__torch__.torch.classes.quantized.Conv2dPackedParamsBase packed_weights) -> int[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::conv_transpose2d_dynamic(Tensor qx, __torch__.torch.classes.quantized.Conv2dPackedParamsBase packed_weight, bool reduce_range=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::conv_transpose2d_groups(__torch__.torch.classes.quantized.Conv2dPackedParamsBase packed_weights) -> int
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::conv_transpose2d_output_padding(__torch__.torch.classes.quantized.Conv2dPackedParamsBase packed_weights) -> int[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::conv_transpose2d_padding(__torch__.torch.classes.quantized.Conv2dPackedParamsBase packed_weights) -> int[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::conv_transpose2d_prepack(Tensor weight, Tensor? bias, int[] stride, int[] padding, int[] output_padding, int[] dilation, int groups) -> __torch__.torch.classes.quantized.Conv2dPackedParamsBase
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::conv_transpose2d_stride(__torch__.torch.classes.quantized.Conv2dPackedParamsBase packed_weights) -> int[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::conv_transpose2d_transpose(__torch__.torch.classes.quantized.Conv2dPackedParamsBase packed_weights) -> int
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::conv_transpose2d_unpack(__torch__.torch.classes.quantized.Conv2dPackedParamsBase packed_weights) -> (Tensor unpacked_weights, Tensor? B_origin)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::conv_transpose3d(Tensor qx, __torch__.torch.classes.quantized.Conv3dPackedParamsBase packed_weight, float output_scale, int output_zero_point) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::conv_transpose3d_dilation(__torch__.torch.classes.quantized.Conv3dPackedParamsBase packed_weights) -> int[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::conv_transpose3d_dynamic(Tensor qx, __torch__.torch.classes.quantized.Conv3dPackedParamsBase packed_weight, bool reduce_range=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::conv_transpose3d_groups(__torch__.torch.classes.quantized.Conv3dPackedParamsBase packed_weights) -> int
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::conv_transpose3d_output_padding(__torch__.torch.classes.quantized.Conv3dPackedParamsBase packed_weights) -> int[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::conv_transpose3d_padding(__torch__.torch.classes.quantized.Conv3dPackedParamsBase packed_weights) -> int[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::conv_transpose3d_prepack(Tensor weight, Tensor? bias, int[] stride, int[] padding, int[] output_padding, int[] dilation, int groups) -> __torch__.torch.classes.quantized.Conv3dPackedParamsBase
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::conv_transpose3d_stride(__torch__.torch.classes.quantized.Conv3dPackedParamsBase packed_weights) -> int[]
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::conv_transpose3d_transpose(__torch__.torch.classes.quantized.Conv3dPackedParamsBase packed_weights) -> int
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::conv_transpose3d_unpack(__torch__.torch.classes.quantized.Conv3dPackedParamsBase packed_weights) -> (Tensor unpacked_weights, Tensor? B_origin)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::conv_unpack(__torch__.torch.classes.quantized.Conv2dPackedParamsBase packed_weights) -> (Tensor unpacked_weights, Tensor? B_origin)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::dropout(Tensor self, float output_scale, int output_zero_point, Scalar p=0.5, bool training=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::elu(Tensor self, float output_scale, int output_zero_point, Scalar alpha=1, Scalar scale=1, Scalar input_scale=1) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::embedding_4bit(__torch__.torch.classes.quantized.EmbeddingPackedParamsBase weight, Tensor indices, bool pruned_weights=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::embedding_bag_2bit_prepack(Tensor weight, bool optimized_qparams=False, int nbins=200, float ratio=0.16) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::embedding_bag_2bit_rowwise_offsets(Tensor weight, Tensor indices, Tensor? offsets=None, bool scale_grad_by_freq=False, int mode=0, bool pruned_weights=False, Tensor? per_sample_weights=None, Tensor? compressed_indices_mapping=None, bool include_last_offset=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::embedding_bag_2bit_unpack(Tensor weight) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::embedding_bag_4bit(__torch__.torch.classes.quantized.EmbeddingPackedParamsBase weight, Tensor indices, Tensor? offsets=None, bool scale_grad_by_freq=False, int mode=0, bool pruned_weights=False, Tensor? per_sample_weights=None, Tensor? compressed_indices_mapping=None, bool include_last_offset=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::embedding_bag_4bit_prepack(Tensor weight, bool optimized_qparams=False, int nbins=200, float ratio=0.16) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::embedding_bag_4bit_rowwise_offsets(Tensor weight, Tensor indices, Tensor? offsets=None, bool scale_grad_by_freq=False, int mode=0, bool pruned_weights=False, Tensor? per_sample_weights=None, Tensor? compressed_indices_mapping=None, bool include_last_offset=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::embedding_bag_4bit_unpack(Tensor weight) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::embedding_bag_byte(__torch__.torch.classes.quantized.EmbeddingPackedParamsBase weight, Tensor indices, Tensor? offsets=None, bool scale_grad_by_freq=False, int mode=0, bool pruned_weights=False, Tensor? per_sample_weights=None, Tensor? compressed_indices_mapping=None, bool include_last_offset=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::embedding_bag_byte_prepack(Tensor weight) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::embedding_bag_byte_rowwise_offsets(Tensor weight, Tensor indices, Tensor? offsets=None, bool scale_grad_by_freq=False, int mode=0, bool pruned_weights=False, Tensor? per_sample_weights=None, Tensor? compressed_indices_mapping=None, bool include_last_offset=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::embedding_bag_byte_unpack(Tensor weight) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::embedding_bag_prepack(Tensor weight) -> __torch__.torch.classes.quantized.EmbeddingPackedParamsBase W_prepack
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::embedding_bag_unpack(__torch__.torch.classes.quantized.EmbeddingPackedParamsBase W_prepack) -> Tensor W_origin
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::embedding_byte(__torch__.torch.classes.quantized.EmbeddingPackedParamsBase weight, Tensor indices, bool pruned_weights=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::group_norm(Tensor input, int num_groups, Tensor? weight, Tensor? bias, float eps, float output_scale, int output_zero_point) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::hardswish(Tensor input, float output_scale, int output_zero_point) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::instance_norm(Tensor input, Tensor? weight, Tensor? bias, float eps, float output_scale, int output_zero_point) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::layer_norm(Tensor input, int[] normalized_shape, Tensor? weight, Tensor? bias, float eps, float output_scale, int output_zero_point) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::leaky_relu(Tensor qx, Scalar negative_slope, bool inplace, float output_scale, int output_zero_point) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::linear(Tensor X, __torch__.torch.classes.quantized.LinearPackedParamsBase W_prepack, float Y_scale_i, int Y_zero_point_i) -> Tensor Y
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::linear_dynamic(Tensor X, __torch__.torch.classes.quantized.LinearPackedParamsBase W_prepack, bool reduce_range=False) -> Tensor Y
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::linear_dynamic_fp16(Tensor X, __torch__.torch.classes.quantized.LinearPackedParamsBase W_prepack) -> Tensor Y
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::linear_leaky_relu(Tensor X, __torch__.torch.classes.quantized.LinearPackedParamsBase W_prepack, float Y_scale_i, int Y_zero_point_i, float negative_slope) -> Tensor Y
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::linear_prepack(Tensor W, Tensor? B=None) -> __torch__.torch.classes.quantized.LinearPackedParamsBase W_prepack
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::linear_prepack_fp16(Tensor W, Tensor? B=None) -> __torch__.torch.classes.quantized.LinearPackedParamsBase W_prepack
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::linear_prepack_fp16_legacy(Tensor W, Tensor? B=None) -> Tensor W_prepack
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::linear_prepack_legacy(Tensor W, Tensor? B=None) -> Tensor W_prepack
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::linear_relu(Tensor X, __torch__.torch.classes.quantized.LinearPackedParamsBase W_prepack, float Y_scale_i, int Y_zero_point_i) -> Tensor Y
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::linear_relu_dynamic(Tensor X, __torch__.torch.classes.quantized.LinearPackedParamsBase W_prepack, bool reduce_range=False) -> Tensor Y
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::linear_relu_dynamic_fp16(Tensor X, __torch__.torch.classes.quantized.LinearPackedParamsBase W_prepack) -> Tensor Y
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::linear_tanh(Tensor X, __torch__.torch.classes.quantized.LinearPackedParamsBase W_prepack, float Y_scale_i, int Y_zero_point_i) -> Tensor Y
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::linear_unpack(__torch__.torch.classes.quantized.LinearPackedParamsBase W_prepack) -> (Tensor W_origin, Tensor? B_origin)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::linear_unpack.legacy(Tensor W_prepack) -> (Tensor W_origin, Tensor? B_origin)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::linear_unpack_fp16(__torch__.torch.classes.quantized.LinearPackedParamsBase W_prepack) -> (Tensor W_origin, Tensor? B_origin)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::linear_unpack_fp16.legacy(Tensor W_prepack) -> (Tensor W_origin, Tensor? B_origin)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::linear_with_input_q_dq_qweight_dq_output_fp32(Tensor X, float X_scale, int X_zero_point, __torch__.torch.classes.quantized.LinearPackedParamsBase W_prepack) -> Tensor Y
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::linear_with_input_q_dq_qweight_dq_relu_output_fp32(Tensor X, float X_scale, int X_zero_point, __torch__.torch.classes.quantized.LinearPackedParamsBase W_prepack) -> Tensor Y
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::make_quantized_cell_params(Tensor w_ih, Tensor w_hh, Tensor b_ih, Tensor b_hh) -> __torch__.torch.classes.rnn.CellParamsBase
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/RNN.cpp:1943
-------------------
operator schema:
quantized::make_quantized_cell_params_dynamic(__torch__.torch.classes.quantized.LinearPackedParamsBase w_ih, __torch__.torch.classes.quantized.LinearPackedParamsBase w_hh, Tensor bias_ih, Tensor bias_hh, bool reduce_range=False) -> __torch__.torch.classes.rnn.CellParamsBase
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/RNN.cpp:1943
-------------------
operator schema:
quantized::make_quantized_cell_params_fp16(__torch__.torch.classes.quantized.LinearPackedParamsBase w_ih, __torch__.torch.classes.quantized.LinearPackedParamsBase w_hh) -> __torch__.torch.classes.rnn.CellParamsBase
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/RNN.cpp:1943
-------------------
operator schema:
quantized::matmul(Tensor qa, Tensor qb, float scale, int zero_point) -> Tensor qc
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::max_pool1d(Tensor qx, int[] kernel_size, int[] stride, int[] padding, int[] dilation, bool ceil_mode) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::max_pool2d(Tensor qx, int[] kernel_size, int[] stride, int[] padding, int[] dilation, bool ceil_mode) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::mul(Tensor qa, Tensor qb, float scale, int zero_point) -> Tensor qc
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::mul.Scalar(Tensor qa, Scalar b) -> Tensor qc
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::mul.Scalar2(Scalar b, Tensor qa) -> Tensor qc
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::mul.Scalar_out(Tensor qa, Scalar b, Tensor(a!) out) -> Tensor(a!) out
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::mul.out(Tensor qa, Tensor qb, Tensor(a!) out) -> Tensor(a!) out
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::mul_out(Tensor qa, Tensor qb, Tensor(a!) out) -> Tensor(a!) out
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::mul_relu(Tensor qa, Tensor qb, float scale, int zero_point) -> Tensor qc
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::mul_relu.Scalar(Tensor qa, Scalar b) -> Tensor qc
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::mul_relu.Scalar2(Scalar b, Tensor qa) -> Tensor qc
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::mul_relu.Scalar_out(Tensor qa, Scalar b, Tensor(a!) out) -> Tensor(a!) out
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::mul_relu.out(Tensor qa, Tensor qb, Tensor(a!) out) -> Tensor(a!) out
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::mul_relu_out(Tensor qa, Tensor qb, Tensor(a!) out) -> Tensor(a!) out
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::mul_scalar(Tensor qa, Scalar b) -> Tensor qc
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::mul_scalar.Tensor(Tensor qa, Tensor b) -> Tensor qc
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::mul_scalar_out(Tensor qa, Scalar b, Tensor(a!) out) -> Tensor(a!) out
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::mul_scalar_out.Tensor(Tensor qa, Tensor b, Tensor(a!) out) -> Tensor(a!) out
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::mul_scalar_relu(Tensor qa, Scalar b) -> Tensor qc
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::mul_scalar_relu.Tensor(Tensor qa, Tensor b) -> Tensor qc
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::mul_scalar_relu_out(Tensor qa, Scalar b, Tensor(a!) out) -> Tensor(a!) out
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::mul_scalar_relu_out.Tensor(Tensor qa, Tensor b, Tensor(a!) out) -> Tensor(a!) out
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::prelu(Tensor qx, Tensor weight, float output_scale, int output_zero_point) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::quantized_gru_cell_dynamic(Tensor input, Tensor hx, __torch__.torch.classes.quantized.LinearPackedParamsBase w_ih, __torch__.torch.classes.quantized.LinearPackedParamsBase w_hh, Tensor b_ih, Tensor b_hh) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/RNN.cpp:1943
-------------------
operator schema:
quantized::quantized_lstm_cell_dynamic(Tensor input, Tensor[] hx, __torch__.torch.classes.quantized.LinearPackedParamsBase w_ih, __torch__.torch.classes.quantized.LinearPackedParamsBase w_hh, Tensor bias_ih, Tensor bias_hh) -> (Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/RNN.cpp:1943
-------------------
operator schema:
quantized::quantized_rnn_relu_cell_dynamic(Tensor input, Tensor hx, __torch__.torch.classes.quantized.LinearPackedParamsBase w_ih, __torch__.torch.classes.quantized.LinearPackedParamsBase w_hh, Tensor b_ih, Tensor b_hh) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/RNN.cpp:1943
-------------------
operator schema:
quantized::quantized_rnn_tanh_cell_dynamic(Tensor input, Tensor hx, __torch__.torch.classes.quantized.LinearPackedParamsBase w_ih, __torch__.torch.classes.quantized.LinearPackedParamsBase w_hh, Tensor b_ih, Tensor b_hh) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/RNN.cpp:1943
-------------------
operator schema:
quantized::relu6(Tensor qx, bool inplace=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::sigmoid(Tensor qx, float output_scale, int output_zero_point) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::softmax(Tensor qx, int dim, float output_scale, int output_zero_point) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
quantized::threshold(Tensor qx, Scalar threshold, Scalar value) -> Tensor qy
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/quantized/library.cpp:16
-------------------
operator schema:
sparse::qlinear(Tensor X, __torch__.torch.classes.sparse.LinearPackedParamsBase W_prepack, float Y_scale_i, int Y_zero_point_i) -> Tensor Y
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/ao_sparse/library.cpp:13
-------------------
operator schema:
sparse::qlinear_dynamic(Tensor X, __torch__.torch.classes.sparse.LinearPackedParamsBase W_prepack) -> Tensor Y
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/ao_sparse/library.cpp:13
-------------------
operator schema:
sparse::qlinear_prepack(Tensor W, Tensor? B, int out_features_block_size, int in_features_block_size) -> __torch__.torch.classes.sparse.LinearPackedParamsBase W_prepack
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/ao_sparse/library.cpp:13
-------------------
operator schema:
sparse::qlinear_relu(Tensor X, __torch__.torch.classes.sparse.LinearPackedParamsBase W_prepack, float Y_scale_i, int Y_zero_point_i) -> Tensor Y
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/ao_sparse/library.cpp:13
-------------------
operator schema:
sparse::qlinear_relu_dynamic(Tensor X, __torch__.torch.classes.sparse.LinearPackedParamsBase W_prepack) -> Tensor Y
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/ao_sparse/library.cpp:13
-------------------
operator schema:
sparse::qlinear_unpack(__torch__.torch.classes.sparse.LinearPackedParamsBase W_prepack) -> (Tensor W_origin, Tensor? B_origin, int[] block_pattern)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/aten/src/ATen/native/ao_sparse/library.cpp:13
-------------------
operator schema:
static_runtime::VarTupleUnpack(...) -> ...
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/torch/csrc/jit/runtime/static/passes.cpp:399
-------------------
operator schema:
static_runtime::clamp_nan_to_num(Tensor input, Scalar? min, Scalar? max, float? nan, float? posinf, float? posinf) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/torch/csrc/jit/runtime/static/passes.cpp:399
-------------------
operator schema:
static_runtime::create_owned_ref(...) -> ...
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/torch/csrc/jit/runtime/static/passes.cpp:399
-------------------
operator schema:
static_runtime::dequantize_copy.self(Tensor self) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/torch/csrc/jit/runtime/static/passes.cpp:399
-------------------
operator schema:
static_runtime::dict_unpack(...) -> ...
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/torch/csrc/jit/runtime/static/passes.cpp:399
-------------------
operator schema:
static_runtime::embedding_bag(Tensor weight, Tensor indices, Tensor offsets, bool scale_grad_by_freq=False, int mode=0, bool sparse=False, Tensor? per_sample_weights=None, bool include_last_offset=False) -> (Tensor, Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/torch/csrc/jit/runtime/static/passes.cpp:399
-------------------
operator schema:
static_runtime::embedding_bag.padding_idx(Tensor weight, Tensor indices, Tensor offsets, bool scale_grad_by_freq, int mode, bool sparse, Tensor? per_sample_weights, bool include_last_offset, int? padding_idx) -> (Tensor, Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/torch/csrc/jit/runtime/static/passes.cpp:399
-------------------
operator schema:
static_runtime::expand_dims_copy(Tensor input, int[] dims) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/torch/csrc/jit/runtime/static/passes.cpp:399
-------------------
operator schema:
static_runtime::flatten_copy.using_ints(Tensor self, int start_dim=0, int end_dim=-1) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/torch/csrc/jit/runtime/static/passes.cpp:399
-------------------
operator schema:
static_runtime::fused_equally_split(Tensor input, int num_split, int dim) -> ...
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/torch/csrc/jit/runtime/static/passes.cpp:399
-------------------
operator schema:
static_runtime::layer_norm(Tensor input, int[] normalized_shape, Tensor? weight=None, Tensor? bias=None, float eps=1.0000000000000001e-05, bool cudnn_enable=True) -> (Tensor, Tensor, Tensor)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/torch/csrc/jit/runtime/static/passes.cpp:399
-------------------
operator schema:
static_runtime::permute_copy(Tensor self, int[] dims) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/torch/csrc/jit/runtime/static/passes.cpp:399
-------------------
operator schema:
static_runtime::reshape_copy(Tensor self, int[] shape) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/torch/csrc/jit/runtime/static/passes.cpp:399
-------------------
operator schema:
static_runtime::select_tensor(Tensor(a) a, Tensor(b) b, bool use_b) -> Tensor(b|a)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/torch/csrc/jit/runtime/static/passes.cpp:399
-------------------
operator schema:
static_runtime::signed_log1p(Tensor input) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/torch/csrc/jit/runtime/static/passes.cpp:399
-------------------
operator schema:
static_runtime::to_copy.dtype(Tensor self, ScalarType dtype, bool non_blocking=False, bool copy=False, MemoryFormat? memory_format=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/torch/csrc/jit/runtime/static/passes.cpp:399
-------------------
operator schema:
static_runtime::to_copy.other(Tensor self, Tensor other, bool non_blocking=False, bool copy=False, MemoryFormat? memory_format=None) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/torch/csrc/jit/runtime/static/passes.cpp:399
-------------------
operator schema:
static_runtime::to_copy.prim_dtype(Tensor self, int? dtype=None, bool non_blocking=False, bool copy=False) -> Tensor
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/torch/csrc/jit/runtime/static/passes.cpp:399
-------------------
operator schema:
static_runtime::to_maybe_copy_out.dtype(Tensor self, ScalarType dtype, bool non_blocking=False, bool copy=False, MemoryFormat? memory_format=None) -> (Tensor, bool)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/torch/csrc/jit/runtime/static/passes.cpp:399
-------------------
operator schema:
static_runtime::to_maybe_copy_out.other(Tensor self, Tensor other, bool non_blocking=False, bool copy=False, MemoryFormat? memory_format=None) -> (Tensor, bool)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/torch/csrc/jit/runtime/static/passes.cpp:399
-------------------
operator schema:
static_runtime::to_maybe_copy_out.prim_dtype(Tensor self, int? dtype=None, bool non_blocking=False, bool copy=False) -> (Tensor, bool)
operator debug info:
registered at /opt/conda/conda-bld/pytorch_1682343970094/work/torch/csrc/jit/runtime/static/passes.cpp:399
